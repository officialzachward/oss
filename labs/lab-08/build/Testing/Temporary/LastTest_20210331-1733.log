Start testing: Mar 31 13:40 EDT
----------------------------------------------------------
1/609 Testing: SystemInformationNew
1/609 Test: SystemInformationNew
Command: "/home/zachary/oss/labs/lab-08/build/bin/cmake" "--system-information" "-G" "Unix Makefiles"
Directory: /home/zachary/oss/labs/lab-08/build
"SystemInformationNew" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
========================================================
=== MAIN VARIABLES
========================================================
CMAKE_STATIC_LIBRARY_PREFIX == "lib"
CMAKE_STATIC_LIBRARY_SUFFIX == ".a"
CMAKE_SHARED_LIBRARY_PREFIX == "lib"
CMAKE_SHARED_LIBRARY_SUFFIX == ".so"
CMAKE_SHARED_MODULE_PREFIX == "lib"
CMAKE_SHARED_MODULE_SUFFIX == ".so"


CMAKE_DL_LIBS == "dl"
CMAKE_LIBRARY_PATH_FLAG == "-L"
CMAKE_LINK_LIBRARY_FLAG == "-l"
CMAKE_SKIP_RPATH == "NO"
CMAKE_SYSTEM_INFO_FILE == "Platform/Linux"
CMAKE_SYSTEM_NAME == "Linux"
CMAKE_SYSTEM == "Linux-5.8.0-45-generic"
CMAKE_CXX_COMPILER == "/usr/bin/c++"
CMAKE_C_COMPILER == "/usr/bin/cc"
CMAKE_COMPILER_IS_GNUCC == "1"
CMAKE_COMPILER_IS_GNUCXX == "1"

// C shared library flag
CMAKE_SHARED_LIBRARY_C_FLAGS == "-fPIC"
CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS == "-shared"
CMAKE_SHARED_LIBRARY_LINK_FLAGS == ""
CMAKE_SHARED_LIBRARY_RUNTIME_FLAG == ""
CMAKE_SHARED_LIBRARY_RUNTIME_FLAG_SEP == ""
CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS == "-Wl,-Bdynamic"

// C shared module flags
CMAKE_SHARED_MODULE_C_FLAGS  == "-fPIC"
CMAKE_SHARED_MODULE_CREATE_C_FLAGS == "-shared"
CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS == "-Wl,-Bdynamic"

// C exe flags
CMAKE_EXE_LINK_STATIC_C_FLAGS == "-Wl,-Bstatic"
CMAKE_EXE_LINK_DYNAMIC_C_FLAGS == "-Wl,-Bdynamic"

// CXX shared library flags
CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS == "-shared"
CMAKE_SHARED_LIBRARY_CXX_FLAGS == "-fPIC"
CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS == "-rdynamic"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG == "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP == ":"
CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS == "-Wl,-Bdynamic"

// CXX shared module flags
CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS == "-shared"
CMAKE_SHARED_MODULE_CXX_FLAGS == "-fPIC"
CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS == "-Wl,-Bdynamic"

// CXX exe flags
CMAKE_EXE_LINK_STATIC_CXX_FLAGS == "-Wl,-Bstatic"
CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS == "-Wl,-Bdynamic"

CMAKE_USER_MAKE_RULES_OVERRIDE == ""
CMAKE_VERBOSE_MAKEFILE == "FALSE"
CMAKE_BUILD_TYPE == ""
CMAKE_CXX_FLAGS == ""
CMAKE_CXX_FLAGS_DEBUG == "-g"
CMAKE_CXX_FLAGS_MINSIZEREL == "-Os -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE == "-O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO == "-O2 -g -DNDEBUG"

CMAKE_C_FLAGS == ""
CMAKE_C_FLAGS_DEBUG == "-g"
CMAKE_C_FLAGS_MINSIZEREL == "-Os -DNDEBUG"
CMAKE_C_FLAGS_RELEASE == "-O3 -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO == "-O2 -g -DNDEBUG"

// build rules
CMAKE_CXX_CREATE_SHARED_LIBRARY == "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_CXX_CREATE_SHARED_MODULE == "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_C_CREATE_SHARED_LIBRARY == "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_C_CREATE_SHARED_MODULE == "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_CXX_CREATE_STATIC_LIBRARY == ""
CMAKE_C_CREATE_STATIC_LIBRARY == ""
CMAKE_CXX_COMPILE_OBJECT == "<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>"
CMAKE_C_COMPILE_OBJECT == "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>"
CMAKE_C_LINK_EXECUTABLE == "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
CMAKE_CXX_LINK_EXECUTABLE == "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"

=================================================================
=== VARIABLES
=================================================================
CMAKE_ADDR2LINE "/usr/bin/addr2line"
CMAKE_AR "/usr/bin/ar"
CMAKE_AR "/usr/bin/ar"
CMAKE_AUTOGEN_ORIGIN_DEPENDS "ON"
CMAKE_AUTOMOC_COMPILER_PREDEFINES "ON"
CMAKE_AUTOMOC_MACRO_NAMES "Q_OBJECT;Q_GADGET;Q_NAMESPACE;Q_NAMESPACE_EXPORT"
CMAKE_AUTOMOC_PATH_PREFIX "OFF"
CMAKE_BASE_NAME "g++"
CMAKE_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
CMAKE_BUILD_TOOL "/usr/bin/make"
CMAKE_BUILD_TYPE ""
CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert"
CMAKE_C11_EXTENSION_COMPILE_OPTION "-std=gnu11"
CMAKE_C11_STANDARD_COMPILE_OPTION "-std=c11"
CMAKE_C11_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_C17_COMPILE_FEATURES "c_std_17"
CMAKE_C17_EXTENSION_COMPILE_OPTION "-std=gnu17"
CMAKE_C17_STANDARD_COMPILE_OPTION "-std=c17"
CMAKE_C23_COMPILE_FEATURES "c_std_23"
CMAKE_C23_EXTENSION_COMPILE_OPTION "-std=gnu23"
CMAKE_C23_STANDARD_COMPILE_OPTION "-std=c23"
CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes"
CMAKE_C90_EXTENSION_COMPILE_OPTION "-std=gnu90"
CMAKE_C90_STANDARD_COMPILE_OPTION "-std=c90"
CMAKE_C90_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros"
CMAKE_C99_EXTENSION_COMPILE_OPTION "-std=gnu99"
CMAKE_C99_STANDARD_COMPILE_OPTION "-std=c99"
CMAKE_C99_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CFG_INTDIR "."
CMAKE_COLOR_MAKEFILE "ON"
CMAKE_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/cmake"
CMAKE_COMPILER_IS_GNUCC "1"
CMAKE_COMPILER_IS_GNUCXX "1"
CMAKE_CPACK_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/cpack"
CMAKE_CROSSCOMPILING "FALSE"
CMAKE_CTEST_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/ctest"
CMAKE_CURRENT_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
CMAKE_CURRENT_LIST_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
CMAKE_CURRENT_LIST_FILE "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation/CMakeLists.txt"
CMAKE_CURRENT_SOURCE_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates"
CMAKE_CXX11_EXTENSION_COMPILE_OPTION "-std=gnu++11"
CMAKE_CXX11_STANDARD_COMPILE_OPTION "-std=c++11"
CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates"
CMAKE_CXX14_EXTENSION_COMPILE_OPTION "-std=gnu++14"
CMAKE_CXX14_STANDARD_COMPILE_OPTION "-std=c++14"
CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17"
CMAKE_CXX17_EXTENSION_COMPILE_OPTION "-std=gnu++17"
CMAKE_CXX17_STANDARD_COMPILE_OPTION "-std=c++17"
CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20"
CMAKE_CXX20_EXTENSION_COMPILE_OPTION "-std=gnu++2a"
CMAKE_CXX20_STANDARD_COMPILE_OPTION "-std=c++2a"
CMAKE_CXX23_COMPILE_FEATURES ""
CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters"
CMAKE_CXX98_EXTENSION_COMPILE_OPTION "-std=gnu++98"
CMAKE_CXX98_STANDARD_COMPILE_OPTION "-std=c++98"
CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CXX_ABI_COMPILED "TRUE"
CMAKE_CXX_ARCHIVE_APPEND "<CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_CXX_ARCHIVE_APPEND_IPO ""/usr/bin/gcc-ar-9" r <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_CXX_ARCHIVE_CREATE "<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_CXX_ARCHIVE_CREATE_IPO ""/usr/bin/gcc-ar-9" cr <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>"
CMAKE_CXX_ARCHIVE_FINISH_IPO ""/usr/bin/gcc-ranlib-9" <TARGET>"
CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN"
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX ""
CMAKE_CXX_COMPILER "/usr/bin/c++"
CMAKE_CXX_COMPILER "/usr/bin/c++"
CMAKE_CXX_COMPILER_ABI "ELF"
CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_CXX_COMPILER_ARCHITECTURE_ID ""
CMAKE_CXX_COMPILER_ARG1 ""
CMAKE_CXX_COMPILER_ENV_VAR "CXX"
CMAKE_CXX_COMPILER_FRONTEND_VARIANT ""
CMAKE_CXX_COMPILER_ID "GNU"
CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT "#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)

/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"

# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"

# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"

# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"

# elif defined(__VXWORKS__)
#  define PLATFORM_ID "VxWorks"

# else /* unknown platform */
#  define PLATFORM_ID
# endif

#elif defined(__INTEGRITY)
# if defined(INT_178B)
#  define PLATFORM_ID "Integrity178"

# else /* regular Integrity */
#  define PLATFORM_ID "Integrity"
# endif

#else /* unknown platform */
# define PLATFORM_ID

#endif

/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"

# elif defined(_M_ARM64EC)
#  define ARCHITECTURE_ID "ARM64EC"

# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"

# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif

# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"

# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__ICCRX__)
#  define ARCHITECTURE_ID "RX"

# elif defined(__ICCRH850__)
#  define ARCHITECTURE_ID "RH850"

# elif defined(__ICCRL78__)
#  define ARCHITECTURE_ID "RL78"

# elif defined(__ICCRISCV__)
#  define ARCHITECTURE_ID "RISCV"

# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"

# elif defined(__ICC430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__ICCV850__)
#  define ARCHITECTURE_ID "V850"

# elif defined(__ICC8051__)
#  define ARCHITECTURE_ID "8051"

# elif defined(__ICCSTM8__)
#  define ARCHITECTURE_ID "STM8"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__ghs__)
# if defined(__PPC64__)
#  define ARCHITECTURE_ID "PPC64"

# elif defined(__ppc__)
#  define ARCHITECTURE_ID "PPC"

# elif defined(__ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__x86_64__)
#  define ARCHITECTURE_ID "x64"

# elif defined(__i386__)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__TI_COMPILER_VERSION__)
# if defined(__TI_ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__MSP430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__TMS320C28XX__)
#  define ARCHITECTURE_ID "TMS320C28x"

# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
#  define ARCHITECTURE_ID "TMS320C6x"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#else
#  define ARCHITECTURE_ID
#endif

/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))

/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))

/* Construct a string literal encoding the version number components. */
#ifdef COMPILER_VERSION_MAJOR
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#endif

/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
"
CMAKE_CXX_COMPILER_ID_RUN "1"
CMAKE_CXX_COMPILER_ID_TEST_FLAGS "-c;--c++;--ec++;--target=arm-arm-none-eabi -mcpu=cortex-m3"
CMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX "2"
CMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX "
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdCXX/(\./)?(CompilerIdCXX.(framework|xctest|build/[^ 	
]+)/)?CompilerIdCXX[ 	
\"]"
CMAKE_CXX_COMPILER_ID_VENDORS "IAR"
CMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR "IAR .+ Compiler"
CMAKE_CXX_COMPILER_INIT "NOTFOUND"
CMAKE_CXX_COMPILER_LIST "c++;CC;g++;aCC;cl;bcc;xlC;icpx;icx;clang++"
CMAKE_CXX_COMPILER_LOADED "1"
CMAKE_CXX_COMPILER_NAMES "c++"
CMAKE_CXX_COMPILER_PREDEFINES_COMMAND "/usr/bin/c++;-dM;-E;-c;/home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp"
CMAKE_CXX_COMPILER_PRODUCED_FILES "a.out"
CMAKE_CXX_COMPILER_PRODUCED_OUTPUT ""
CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_CXX_COMPILER_SYSROOT ""
CMAKE_CXX_COMPILER_VERSION "9.3.0"
CMAKE_CXX_COMPILER_VERSION_INTERNAL ""
CMAKE_CXX_COMPILER_WORKS "TRUE"
CMAKE_CXX_COMPILER_WRAPPER ""
CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20"
CMAKE_CXX_COMPILE_OBJECT "<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>"
CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH "-x;c++-header;-include;<PCH_HEADER>"
CMAKE_CXX_COMPILE_OPTIONS_EXPLICIT_LANGUAGE "-x;c++"
CMAKE_CXX_COMPILE_OPTIONS_INVALID_PCH "-Winvalid-pch"
CMAKE_CXX_COMPILE_OPTIONS_IPO "-flto;-fno-fat-lto-objects"
CMAKE_CXX_COMPILE_OPTIONS_PIC "-fPIC"
CMAKE_CXX_COMPILE_OPTIONS_PIE "-fPIE"
CMAKE_CXX_COMPILE_OPTIONS_SYSROOT "--sysroot="
CMAKE_CXX_COMPILE_OPTIONS_USE_PCH "-include;<PCH_HEADER>"
CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY "-fvisibility="
CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN "-fvisibility-inlines-hidden"
CMAKE_CXX_CREATE_ASSEMBLY_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>"
CMAKE_CXX_CREATE_PREPROCESSED_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>"
CMAKE_CXX_CREATE_SHARED_LIBRARY "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_CXX_CREATE_SHARED_MODULE "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_CXX_DEPENDS_USE_COMPILER "TRUE"
CMAKE_CXX_DEPFILE_FORMAT "gcc"
CMAKE_CXX_FLAGS ""
CMAKE_CXX_FLAGS_DEBUG "-g"
CMAKE_CXX_FLAGS_DEBUG_INIT " -g"
CMAKE_CXX_FLAGS_INIT "  "
CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG"
CMAKE_CXX_FLAGS_MINSIZEREL_INIT " -Os -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE_INIT " -O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT " -O2 -g -DNDEBUG"
CMAKE_CXX_IGNORE_EXTENSIONS "inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC"
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include"
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib"
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES ""
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc"
CMAKE_CXX_INFORMATION_LOADED "1"
CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu"
CMAKE_CXX_LINKER_PREFERENCE "30"
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES "1"
CMAKE_CXX_LINKER_WRAPPER_FLAG "-Wl,"
CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP ","
CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
CMAKE_CXX_LINK_OPTIONS_NO_PIE "-no-pie"
CMAKE_CXX_LINK_OPTIONS_PIE "-fPIE;-pie"
CMAKE_CXX_OUTPUT_EXTENSION ".o"
CMAKE_CXX_PLATFORM_ID "Linux"
CMAKE_CXX_SIMULATE_ID ""
CMAKE_CXX_SIMULATE_VERSION ""
CMAKE_CXX_SIZEOF_DATA_PTR "8"
CMAKE_CXX_SOURCE_FILE_EXTENSIONS "C;M;c++;cc;cpp;cxx;mm;mpp;CPP;ixx;cppm"
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14"
CMAKE_CXX_STANDARD_DEFAULT "14"
CMAKE_CXX_VERBOSE_FLAG "-v"
CMAKE_CXX_XCODE_ARCHS ""
CMAKE_C_ABI_COMPILED "TRUE"
CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_C_ARCHIVE_APPEND_IPO ""/usr/bin/gcc-ar-9" r <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_C_ARCHIVE_CREATE_IPO ""/usr/bin/gcc-ar-9" cr <TARGET> <LINK_FLAGS> <OBJECTS>"
CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>"
CMAKE_C_ARCHIVE_FINISH_IPO ""/usr/bin/gcc-ranlib-9" <TARGET>"
CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN"
CMAKE_C_CL_SHOWINCLUDES_PREFIX ""
CMAKE_C_COMPILER "/usr/bin/cc"
CMAKE_C_COMPILER "/usr/bin/cc"
CMAKE_C_COMPILER_ABI "ELF"
CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_C_COMPILER_ARCHITECTURE_ID ""
CMAKE_C_COMPILER_ARG1 ""
CMAKE_C_COMPILER_ENV_VAR "CC"
CMAKE_C_COMPILER_FRONTEND_VARIANT ""
CMAKE_C_COMPILER_ID "GNU"
CMAKE_C_COMPILER_ID_PLATFORM_CONTENT "#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)

/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"

# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"

# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"

# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"

# elif defined(__VXWORKS__)
#  define PLATFORM_ID "VxWorks"

# else /* unknown platform */
#  define PLATFORM_ID
# endif

#elif defined(__INTEGRITY)
# if defined(INT_178B)
#  define PLATFORM_ID "Integrity178"

# else /* regular Integrity */
#  define PLATFORM_ID "Integrity"
# endif

#else /* unknown platform */
# define PLATFORM_ID

#endif

/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"

# elif defined(_M_ARM64EC)
#  define ARCHITECTURE_ID "ARM64EC"

# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"

# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif

# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"

# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__ICCRX__)
#  define ARCHITECTURE_ID "RX"

# elif defined(__ICCRH850__)
#  define ARCHITECTURE_ID "RH850"

# elif defined(__ICCRL78__)
#  define ARCHITECTURE_ID "RL78"

# elif defined(__ICCRISCV__)
#  define ARCHITECTURE_ID "RISCV"

# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"

# elif defined(__ICC430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__ICCV850__)
#  define ARCHITECTURE_ID "V850"

# elif defined(__ICC8051__)
#  define ARCHITECTURE_ID "8051"

# elif defined(__ICCSTM8__)
#  define ARCHITECTURE_ID "STM8"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__ghs__)
# if defined(__PPC64__)
#  define ARCHITECTURE_ID "PPC64"

# elif defined(__ppc__)
#  define ARCHITECTURE_ID "PPC"

# elif defined(__ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__x86_64__)
#  define ARCHITECTURE_ID "x64"

# elif defined(__i386__)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__TI_COMPILER_VERSION__)
# if defined(__TI_ARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__MSP430__)
#  define ARCHITECTURE_ID "MSP430"

# elif defined(__TMS320C28XX__)
#  define ARCHITECTURE_ID "TMS320C28x"

# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
#  define ARCHITECTURE_ID "TMS320C6x"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#else
#  define ARCHITECTURE_ID
#endif

/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))

/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))

/* Construct a string literal encoding the version number components. */
#ifdef COMPILER_VERSION_MAJOR
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#endif

/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
"
CMAKE_C_COMPILER_ID_RUN "1"
CMAKE_C_COMPILER_ID_TEST_FLAGS "-c;-Aa;-D__CLASSIC_C__;--target=arm-arm-none-eabi -mcpu=cortex-m3"
CMAKE_C_COMPILER_ID_TOOL_MATCH_INDEX "2"
CMAKE_C_COMPILER_ID_TOOL_MATCH_REGEX "
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdC/(\./)?(CompilerIdC.(framework|xctest|build/[^ 	
]+)/)?CompilerIdC[ 	
\"]"
CMAKE_C_COMPILER_ID_VENDORS "IAR"
CMAKE_C_COMPILER_ID_VENDOR_REGEX_IAR "IAR .+ Compiler"
CMAKE_C_COMPILER_INIT "NOTFOUND"
CMAKE_C_COMPILER_LIST "cc;gcc;cl;bcc;xlc;icx;clang"
CMAKE_C_COMPILER_LOADED "1"
CMAKE_C_COMPILER_NAMES "cc"
CMAKE_C_COMPILER_PREDEFINES_COMMAND "/usr/bin/cc;-dM;-E;-c;/home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp"
CMAKE_C_COMPILER_PRODUCED_FILES "a.out"
CMAKE_C_COMPILER_PRODUCED_OUTPUT ""
CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_C_COMPILER_SYSROOT ""
CMAKE_C_COMPILER_VERSION "9.3.0"
CMAKE_C_COMPILER_VERSION_INTERNAL ""
CMAKE_C_COMPILER_WORKS "TRUE"
CMAKE_C_COMPILER_WRAPPER ""
CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23"
CMAKE_C_COMPILE_OBJECT "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>"
CMAKE_C_COMPILE_OPTIONS_CREATE_PCH "-x;c-header;-include;<PCH_HEADER>"
CMAKE_C_COMPILE_OPTIONS_EXPLICIT_LANGUAGE "-x;c"
CMAKE_C_COMPILE_OPTIONS_INVALID_PCH "-Winvalid-pch"
CMAKE_C_COMPILE_OPTIONS_IPO "-flto;-fno-fat-lto-objects"
CMAKE_C_COMPILE_OPTIONS_PIC "-fPIC"
CMAKE_C_COMPILE_OPTIONS_PIE "-fPIE"
CMAKE_C_COMPILE_OPTIONS_SYSROOT "--sysroot="
CMAKE_C_COMPILE_OPTIONS_USE_PCH "-include;<PCH_HEADER>"
CMAKE_C_COMPILE_OPTIONS_VISIBILITY "-fvisibility="
CMAKE_C_CREATE_ASSEMBLY_SOURCE "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>"
CMAKE_C_CREATE_PREPROCESSED_SOURCE "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>"
CMAKE_C_CREATE_SHARED_LIBRARY "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_C_CREATE_SHARED_MODULE "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
CMAKE_C_DEPENDS_USE_COMPILER "TRUE"
CMAKE_C_DEPFILE_FORMAT "gcc"
CMAKE_C_FLAGS ""
CMAKE_C_FLAGS_DEBUG "-g"
CMAKE_C_FLAGS_DEBUG_INIT " -g"
CMAKE_C_FLAGS_INIT "  "
CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG"
CMAKE_C_FLAGS_MINSIZEREL_INIT " -Os -DNDEBUG"
CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG"
CMAKE_C_FLAGS_RELEASE_INIT " -O3 -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO_INIT " -O2 -g -DNDEBUG"
CMAKE_C_IGNORE_EXTENSIONS "h;H;o;O;obj;OBJ;def;DEF;rc;RC"
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include"
CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib"
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES ""
CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s"
CMAKE_C_INFORMATION_LOADED "1"
CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu"
CMAKE_C_LINKER_PREFERENCE "10"
CMAKE_C_LINKER_WRAPPER_FLAG "-Wl,"
CMAKE_C_LINKER_WRAPPER_FLAG_SEP ","
CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
CMAKE_C_LINK_OPTIONS_NO_PIE "-no-pie"
CMAKE_C_LINK_OPTIONS_PIE "-fPIE;-pie"
CMAKE_C_OUTPUT_EXTENSION ".o"
CMAKE_C_PLATFORM_ID "Linux"
CMAKE_C_SIMULATE_ID ""
CMAKE_C_SIMULATE_VERSION ""
CMAKE_C_SIZEOF_DATA_PTR "8"
CMAKE_C_SOURCE_FILE_EXTENSIONS "c;m"
CMAKE_C_STANDARD_COMPUTED_DEFAULT "17"
CMAKE_C_STANDARD_DEFAULT "17"
CMAKE_C_VERBOSE_FLAG "-v"
CMAKE_C_XCODE_ARCHS ""
CMAKE_DEPFILE_FLAGS_C "-MD -MT <DEP_TARGET> -MF <DEP_FILE>"
CMAKE_DEPFILE_FLAGS_CXX "-MD -MT <DEP_TARGET> -MF <DEP_FILE>"
CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND"
CMAKE_DL_LIBS "dl"
CMAKE_EDIT_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/ccmake"
CMAKE_EFFECTIVE_SYSTEM_NAME "Linux"
CMAKE_EXECUTABLE_FORMAT "ELF"
CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,"
CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG "-Wl,-rpath-link,"
CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG "-Wl,-rpath,"
CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ":"
CMAKE_EXECUTABLE_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ":"
CMAKE_EXECUTABLE_SUFFIX ""
CMAKE_EXE_EXPORTS_CXX_FLAG "-Wl,--export-dynamic"
CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic"
CMAKE_EXE_LINKER_FLAGS ""
CMAKE_EXE_LINKER_FLAGS_DEBUG ""
CMAKE_EXE_LINKER_FLAGS_INIT "  "
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ""
CMAKE_EXE_LINKER_FLAGS_RELEASE ""
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_EXE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_EXE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_EXE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_EXPORT_COMPILE_COMMANDS ""
CMAKE_EXTRA_GENERATOR ""
CMAKE_FILES_DIRECTORY "/CMakeFiles"
CMAKE_FIND_LIBRARY_PREFIXES "lib"
CMAKE_FIND_LIBRARY_SUFFIXES ".so;.a"
CMAKE_GENERATOR "Unix Makefiles"
CMAKE_GENERATOR_INSTANCE ""
CMAKE_GENERATOR_PLATFORM ""
CMAKE_GENERATOR_TOOLSET ""
CMAKE_HOME_DIRECTORY "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
CMAKE_HOST_SYSTEM "Linux-5.8.0-45-generic"
CMAKE_HOST_SYSTEM_NAME "Linux"
CMAKE_HOST_SYSTEM_PROCESSOR "x86_64"
CMAKE_HOST_SYSTEM_VERSION "5.8.0-45-generic"
CMAKE_HOST_UNIX "1"
CMAKE_INCLUDE_FLAG_C "-I"
CMAKE_INCLUDE_FLAG_CXX "-I"
CMAKE_INCLUDE_SYSTEM_FLAG_C "-isystem "
CMAKE_INCLUDE_SYSTEM_FLAG_CXX "-isystem "
CMAKE_INSTALL_DEFAULT_COMPONENT_NAME "Unspecified"
CMAKE_INSTALL_PREFIX "/usr/local"
CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT "1"
CMAKE_INSTALL_SO_NO_EXE "1"
CMAKE_INTERNAL_PLATFORM_ABI "ELF"
CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu"
CMAKE_LIBRARY_ARCHITECTURE_REGEX "[a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]*"
CMAKE_LIBRARY_ARCHITECTURE_REGEX_VERSIONED "gcc/[a-z0-9_]+(-[a-z0-9_]+)?-linux(-gnu)?/[0-9]+(\.[0-9]+\.[0-9]+)*"
CMAKE_LIBRARY_PATH_FLAG "-L"
CMAKE_LIBRARY_PATH_TERMINATOR ""
CMAKE_LINKER "/usr/bin/ld"
CMAKE_LINKER "/usr/bin/ld"
CMAKE_LINK_LIBRARY_FLAG "-l"
CMAKE_LINK_LIBRARY_SUFFIX ""
CMAKE_MAJOR_VERSION "3"
CMAKE_MAKE_PROGRAM "/usr/bin/make"
CMAKE_MATCH_0 "6.0 14"
CMAKE_MATCH_1 ""
CMAKE_MATCH_2 ""
CMAKE_MATCH_COUNT "0"
CMAKE_MINIMUM_REQUIRED_VERSION "3.20.20210331-gbd4ebf1"
CMAKE_MINOR_VERSION "20"
CMAKE_MODULE_LINKER_FLAGS ""
CMAKE_MODULE_LINKER_FLAGS_DEBUG ""
CMAKE_MODULE_LINKER_FLAGS_INIT "  "
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ""
CMAKE_MODULE_LINKER_FLAGS_RELEASE ""
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_MT ""
CMAKE_NM "/usr/bin/nm"
CMAKE_OBJCOPY "/usr/bin/objcopy"
CMAKE_OBJDUMP "/usr/bin/objdump"
CMAKE_PARENT_LIST_FILE "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation/CMakeLists.txt"
CMAKE_PATCH_VERSION "20210331"
CMAKE_PCH_EXTENSION ".gch"
CMAKE_PCH_PROLOGUE "#pragma GCC system_header"
CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "/lib;/lib32;/lib64;/usr/lib;/usr/lib32;/usr/lib64"
CMAKE_PLATFORM_INFO_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation/CMakeFiles/3.20.20210331-gbd4ebf1"
CMAKE_PLATFORM_INFO_INITIALIZED "1"
CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME "1"
CMAKE_PROJECT_DESCRIPTION ""
CMAKE_PROJECT_HOMEPAGE_URL ""
CMAKE_PROJECT_NAME "DumpInformation"
CMAKE_RANLIB "/usr/bin/ranlib"
CMAKE_RANLIB "/usr/bin/ranlib"
CMAKE_READELF "/usr/bin/readelf"
CMAKE_ROOT "/home/zachary/cmake"
CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "-shared"
CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-shared"
CMAKE_SHARED_LIBRARY_CXX_FLAGS "-fPIC"
CMAKE_SHARED_LIBRARY_C_FLAGS "-fPIC"
CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "-rdynamic"
CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-rdynamic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_PREFIX "lib"
CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,"
CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,"
CMAKE_SHARED_LIBRARY_RPATH_ORIGIN_TOKEN "$ORIGIN"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ":"
CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP ":"
CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SUFFIX ".so"
CMAKE_SHARED_LINKER_FLAGS ""
CMAKE_SHARED_LINKER_FLAGS_DEBUG ""
CMAKE_SHARED_LINKER_FLAGS_INIT "  "
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ""
CMAKE_SHARED_LINKER_FLAGS_RELEASE ""
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS "-shared"
CMAKE_SHARED_MODULE_CREATE_C_FLAGS "-shared"
CMAKE_SHARED_MODULE_CXX_FLAGS "-fPIC"
CMAKE_SHARED_MODULE_C_FLAGS "-fPIC"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_PREFIX "lib"
CMAKE_SHARED_MODULE_SUFFIX ".so"
CMAKE_SIZEOF_VOID_P "8"
CMAKE_SKIP_INSTALL_RPATH "NO"
CMAKE_SKIP_RPATH "NO"
CMAKE_SOURCE_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
CMAKE_STATIC_LIBRARY_PREFIX "lib"
CMAKE_STATIC_LIBRARY_SUFFIX ".a"
CMAKE_STATIC_LINKER_FLAGS ""
CMAKE_STATIC_LINKER_FLAGS_DEBUG ""
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL ""
CMAKE_STATIC_LINKER_FLAGS_RELEASE ""
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_STRIP "/usr/bin/strip"
CMAKE_SYSTEM "Linux-5.8.0-45-generic"
CMAKE_SYSTEM_INCLUDE_PATH "/usr/include/X11"
CMAKE_SYSTEM_INFO_FILE "Platform/Linux"
CMAKE_SYSTEM_LIBRARY_PATH "/usr/lib/X11"
CMAKE_SYSTEM_LOADED "1"
CMAKE_SYSTEM_NAME "Linux"
CMAKE_SYSTEM_PREFIX_PATH "/usr/local;/usr;/;/home;/usr/local;/usr/X11R6;/usr/pkg;/opt"
CMAKE_SYSTEM_PROCESSOR "x86_64"
CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED "1"
CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED "1"
CMAKE_SYSTEM_VERSION "5.8.0-45-generic"
CMAKE_TWEAK_VERSION "0"
CMAKE_UNAME "/usr/bin/uname"
CMAKE_VERBOSE_MAKEFILE "FALSE"
CMAKE_VERSION "3.20.20210331-gbd4ebf1"
COMPILER_BASENAME "c++"
DumpInformation_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
DumpInformation_DESCRIPTION ""
DumpInformation_HOMEPAGE_URL ""
DumpInformation_IS_TOP_LEVEL "ON"
DumpInformation_SOURCE_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
MSVC_CXX_ARCHITECTURE_ID ""
MSVC_C_ARCHITECTURE_ID ""
NAME ""
PRESET_CMAKE_SYSTEM_NAME "FALSE"
PROJECT_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
PROJECT_DESCRIPTION ""
PROJECT_HOMEPAGE_URL ""
PROJECT_IS_TOP_LEVEL "ON"
PROJECT_NAME "DumpInformation"
PROJECT_SOURCE_DIR "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation"
RESULT_FILE "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation/results.txt"
RUN_CONFIGURE "ON"
TOOL ""
UNIX "1"
_CMAKE_CUDA_IMPLICIT_INCLUDE_DIRECTORIES_INIT "/usr/include"
_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT "/usr/include"
_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER "YES"
_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE "YES"
_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER "YES"
_CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES_INIT "/usr/include"
_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER "YES"
_CMAKE_C_IPO_SUPPORTED_BY_CMAKE "YES"
_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER "YES"
_CMAKE_INSTALL_DIR "/home"
_CMAKE_TOOLCHAIN_LOCATION "/usr/bin"
_INCLUDED_FILE "/home/zachary/cmake/Modules/Platform/Linux-GNU-CXX.cmake"
_INCLUDED_SYSTEM_INFO_FILE "/home/zachary/cmake/Modules/Platform/Linux.cmake"
_IN_TC "0"
_SET_CMAKE_CXX_COMPILER_ARCHITECTURE_ID ""
_SET_CMAKE_CXX_COMPILER_SYSROOT ""
_SET_CMAKE_C_COMPILER_ARCHITECTURE_ID ""
_SET_CMAKE_C_COMPILER_SYSROOT ""
__COMPILER_CMAKE_COMMON_COMPILER_MACROS "1"
__COMPILER_GNU "1"
__LINUX_COMPILER_GNU "1"
__UNIX_PATHS_INCLUDED "1"
__gcc_hints "/usr/bin"
__lto_flags "-flto;-fno-fat-lto-objects"
__pch_header_C "c-header"
__pch_header_CXX "c++-header"
__pch_header_OBJC "objective-c-header"
__pch_header_OBJCXX "objective-c++-header"
__version_x "9"
__version_x_y "9.3"
extension ""
incl "/home/zachary/oss/labs/lab-08/build/__cmake_systeminformation/This does not exists"
l ""
lang ""
type ""
val "0"
var "var"

=================================================================
=== COMMANDS
=================================================================
___cmake_include_compiler_wrapper
___determine_compiler_id_test
___resolve_tool_path
___testcompiler_restoretrycompiletargettype
___testcompiler_settrycompiletargettype
__cmake_find_compiler
__cmake_find_compiler_path
__cmake_find_compiler_sysroot
__cmake_include_compiler_wrapper
__compiler_check_default_language_standard
__compiler_gnu
__determine_compiler_id_test
__has_compiler_features
__has_compiler_features_c
__has_compiler_features_cuda
__has_compiler_features_cxx
__linux_compiler_gnu
__readfile
__record_compiler_features
__record_compiler_features_c
__record_compiler_features_cuda
__record_compiler_features_cxx
__resolve_tool_path
__testcompiler_restoretrycompiletargettype
__testcompiler_settrycompiletargettype
_cmake_determine_compile_features
_cmake_determine_compiler_abi
_cmake_determine_compiler_id
_cmake_determine_compiler_id_build
_cmake_determine_compiler_id_check
_cmake_determine_compiler_id_match_vendor
_cmake_determine_compiler_id_vendor
_cmake_determine_compiler_id_write
_cmake_determine_msvc_showincludes_prefix
_cmake_find_compiler
_cmake_find_compiler_path
_cmake_find_compiler_sysroot
_cmake_parse_implicit_include_info
_cmake_parse_implicit_include_line
_cmake_parse_implicit_link_info
_cmake_parse_library_architecture
_compiler_id_detection
_has_compiler_features
_has_compiler_features_c
_has_compiler_features_cuda
_has_compiler_features_cxx
_printtestcompilerresult
_printtestcompilerstatus
_readfile
_record_compiler_features
_record_compiler_features_c
_record_compiler_features_cuda
_record_compiler_features_cxx
add_compile_definitions
add_compile_options
add_custom_command
add_custom_target
add_definitions
add_dependencies
add_executable
add_library
add_link_options
add_subdirectory
add_test
aux_source_directory
break
build_command
build_name
cmake_determine_compile_features
cmake_determine_compiler_abi
cmake_determine_compiler_id
cmake_determine_compiler_id_build
cmake_determine_compiler_id_check
cmake_determine_compiler_id_match_vendor
cmake_determine_compiler_id_vendor
cmake_determine_compiler_id_write
cmake_determine_msvc_showincludes_prefix
cmake_host_system_information
cmake_initialize_per_config_variable
cmake_language
cmake_minimum_required
cmake_parse_arguments
cmake_parse_implicit_include_info
cmake_parse_implicit_include_line
cmake_parse_implicit_link_info
cmake_parse_library_architecture
cmake_path
cmake_policy
cmake_record_c_compile_features
cmake_record_cuda_compile_features
cmake_record_cxx_compile_features
compiler_id_detection
configure_file
continue
create_test_sourcelist
define_property
else
elseif
enable_language
enable_testing
endforeach
endfunction
endif
endmacro
endwhile
exec_program
execute_process
export
export_library_dependencies
file
find_file
find_library
find_package
find_path
find_program
fltk_wrap_ui
foreach
function
get_cmake_property
get_directory_property
get_filename_component
get_property
get_source_file_property
get_target_property
get_test_property
getdefaultwindowsprefixbase
if
include
include_directories
include_external_msproject
include_guard
include_regular_expression
install
install_files
install_programs
install_targets
link_directories
link_libraries
list
load_cache
load_command
macro
make_directory
mark_as_advanced
math
message
option
output_required_files
printtestcompilerresult
printtestcompilerstatus
project
qt_wrap_cpp
qt_wrap_ui
remove
remove_definitions
return
separate_arguments
set
set_directory_properties
set_property
set_source_files_properties
set_target_properties
set_tests_properties
site_name
source_group
string
subdir_depends
subdirs
target_compile_definitions
target_compile_features
target_compile_options
target_include_directories
target_link_directories
target_link_libraries
target_link_options
target_precompile_headers
target_sources
try_compile
try_run
unset
use_mangled_mesa
utility_source
variable_requires
variable_watch
while
write_file

=================================================================
=== MACROS
=================================================================
_cmake_find_compiler
_cmake_find_compiler_path
__determine_compiler_id_test
_cmake_find_compiler
_cmake_find_compiler_path
__determine_compiler_id_test
__cmake_include_compiler_wrapper
__compiler_check_default_language_standard
cmake_record_c_compile_features
cmake_record_cxx_compile_features
cmake_record_cuda_compile_features
__compiler_gnu
__linux_compiler_gnu
__TestCompiler_setTryCompileTargetType
__TestCompiler_restoreTryCompileTargetType
__TestCompiler_setTryCompileTargetType
__TestCompiler_restoreTryCompileTargetType
_record_compiler_features
_record_compiler_features_c
_record_compiler_features_cxx
_record_compiler_features_cuda
_has_compiler_features
_has_compiler_features_c
_has_compiler_features_cxx
_has_compiler_features_cuda
__cmake_include_compiler_wrapper
__TestCompiler_setTryCompileTargetType
__TestCompiler_restoreTryCompileTargetType
__TestCompiler_setTryCompileTargetType
__TestCompiler_restoreTryCompileTargetType
_record_compiler_features
_record_compiler_features_c
_record_compiler_features_cxx
_record_compiler_features_cuda
_has_compiler_features
_has_compiler_features_c
_has_compiler_features_cxx
_has_compiler_features_cuda

=================================================================
=== OTHER
=================================================================
INCLUDE_DIRECTORY: /home/zachary/oss/labs/lab-08/build/__cmake_systeminformation
INCLUDE_DIRECTORY: /home/zachary/oss/labs/lab-08/build/__cmake_systeminformation
INCLUDE_REGULAR_EXPRESSION: ^.*$

=================================================================
=== ../CMakeCache.txt
=================================================================
# This is the CMakeCache file.
# For build in directory: /home/zachary/oss/labs/lab-08/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build the CMake Curses Dialog ccmake
BUILD_CursesDialog:BOOL=ON

//Build Qt dialog for CMake
BUILD_QtDialog:BOOL=OFF

//Build the testing tree.
BUILD_TESTING:BOOL=ON

//Path to a program.
BZRCOMMAND:FILEPATH=BZRCOMMAND-NOTFOUND

//Path to a program.
BZR_EXECUTABLE:FILEPATH=BZR_EXECUTABLE-NOTFOUND

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Location under install prefix for bin (default "bin")
CMAKE_BIN_DIR:STRING=

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//Build with RPATH set to match install-tree RPATH.
CMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Location under install prefix for data (default "share/cmake-3.20")
CMAKE_DATA_DIR:STRING=

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Location under install prefix for docs (default "doc/cmake-3.20")
CMAKE_DOC_DIR:STRING=

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Value Computed by CMake
CMAKE_FORM_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Source/CursesDialog/form

//Value Computed by CMake
CMAKE_FORM_SOURCE_DIR:STATIC=/home/zachary/cmake/Source/CursesDialog/form

//Fortran compiler
CMAKE_Fortran_COMPILER:FILEPATH=NOTFOUND

//Fortran compiler Id
CMAKE_Fortran_COMPILER_ID:STRING=

//Fortran compiler supports F90
CMAKE_Fortran_COMPILER_SUPPORTS_F90:BOOL=OFF

//Fortran flags
CMAKE_Fortran_FLAGS:STRING=

//Location under install prefix for Info manual (default "info")
CMAKE_INFO_DIR:STRING=

//Install Microsoft runtime debug libraries with CMake.
CMAKE_INSTALL_DEBUG_LIBRARIES:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Install with RPATH set to find custom-built libraries.
CMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Location under install prefix for man pages (default "man")
CMAKE_MAN_DIR:STRING=

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=CMake

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

//Should the long tests be run (such as Bootstrap).
CMAKE_RUN_LONG_TESTS:BOOL=ON

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//Enable folder grouping of projects in IDEs.
CMAKE_USE_FOLDERS:BOOL=ON

//Use OpenSSL.
CMAKE_USE_OPENSSL:BOOL=ON

//Use system-installed bzip2
CMAKE_USE_SYSTEM_BZIP2:BOOL=OFF

//Use system-installed curl
CMAKE_USE_SYSTEM_CURL:BOOL=OFF

//Use system-installed expat
CMAKE_USE_SYSTEM_EXPAT:BOOL=OFF

//Use system-installed libform
CMAKE_USE_SYSTEM_FORM:BOOL=OFF

//Use system-installed jsoncpp
CMAKE_USE_SYSTEM_JSONCPP:BOOL=OFF

//Use system-installed KWIML
CMAKE_USE_SYSTEM_KWIML:BOOL=OFF

//Use system-installed libarchive
CMAKE_USE_SYSTEM_LIBARCHIVE:BOOL=OFF

//Use system-installed liblzma
CMAKE_USE_SYSTEM_LIBLZMA:BOOL=OFF

//Use system-installed librhash
CMAKE_USE_SYSTEM_LIBRHASH:BOOL=OFF

//Use system-installed libuv
CMAKE_USE_SYSTEM_LIBUV:BOOL=OFF

//Use system-installed nghttp2
CMAKE_USE_SYSTEM_NGHTTP2:BOOL=OFF

//Use system-installed zlib
CMAKE_USE_SYSTEM_ZLIB:BOOL=OFF

//Use system-installed zstd
CMAKE_USE_SYSTEM_ZSTD:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Location under install prefix for XDG specific files (default
// "share")
CMAKE_XDGDATA_DIR:STRING=

//Value Computed by CMake
CMLIBLZMA_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmliblzma

//Value Computed by CMake
CMLIBLZMA_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmliblzma

//Value Computed by CMake
CMZLIB_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmzlib

//Value Computed by CMake
CMZLIB_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmzlib

//Value Computed by CMake
CMakeDeveloperReference_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/Doxygen

//Value Computed by CMake
CMakeDeveloperReference_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/Doxygen

//Value Computed by CMake
CMakeHelp_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/Sphinx

//Value Computed by CMake
CMakeHelp_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/Sphinx

//Value Computed by CMake
CMake_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build

//Build CMake Developer Reference
CMake_BUILD_DEVELOPER_REFERENCE:BOOL=OFF

//Compile CMake with link-time optimization if supported
CMake_BUILD_LTO:BOOL=OFF

//Using components when installing
CMake_INSTALL_COMPONENTS:BOOL=OFF

//Whether to install 3rd-party runtime dependencies
CMake_INSTALL_DEPENDENCIES:BOOL=OFF

//Intermediate installation path (empty by default)
CMake_INSTALL_INFIX:STRING=

//Run clang-tidy with the compiler.
CMake_RUN_CLANG_TIDY:BOOL=OFF

//Run include-what-you-use with the compiler.
CMake_RUN_IWYU:BOOL=OFF

//Value Computed by CMake
CMake_SOURCE_DIR:STATIC=/home/zachary/cmake

//Test CMake Installation
CMake_TEST_INSTALL:BOOL=OFF

//Path to program used to compress files for transfer to the dart
// server
COMPRESSIONCOMMAND:FILEPATH=/usr/bin/gzip

//Path to the coverage program that CTest uses for performing coverage
// inspection
COVERAGE_COMMAND:FILEPATH=/usr/bin/gcov

//Extra command line flags to pass to the coverage tool
COVERAGE_EXTRA_FLAGS:STRING=-l

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build FreeBSD packages
CPACK_BINARY_FREEBSD:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//Enable to build TZ packages
CPACK_BINARY_TZ:BOOL=ON

//Add FreeBSD pkg(8) generator to CPack.
CPACK_ENABLE_FREEBSD_PKG:BOOL=OFF

//Enable to build RPM source packages
CPACK_SOURCE_RPM:BOOL=OFF

//Enable to build TBZ2 source packages
CPACK_SOURCE_TBZ2:BOOL=ON

//Enable to build TGZ source packages
CPACK_SOURCE_TGZ:BOOL=ON

//Enable to build TXZ source packages
CPACK_SOURCE_TXZ:BOOL=ON

//Enable to build TZ source packages
CPACK_SOURCE_TZ:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=OFF

//How many times to retry timed-out CTest submissions.
CTEST_SUBMIT_RETRY_COUNT:STRING=3

//How long to wait between timed-out CTest submissions.
CTEST_SUBMIT_RETRY_DELAY:STRING=5

//Should the tests that use '--build-target package' be run?
CTEST_TEST_CPACK:BOOL=ON

//Should the tests that run a full sub ctest process be run?
CTEST_TEST_CTEST:BOOL=OFF

//Value Computed by CMake
CURL_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmcurl

//Path to SSL CA Certificate Bundle
CURL_CA_BUNDLE:FILEPATH=

//Path to SSL CA Certificate Directory
CURL_CA_PATH:PATH=

//Value Computed by CMake
CURL_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmcurl

//Path to a library.
CURSES_CURSES_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libcurses.so

//Path to a library.
CURSES_FORM_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libform.so

//Path to a file.
CURSES_INCLUDE_PATH:PATH=/usr/include

//Path to a library.
CURSES_NCURSES_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libncurses.so

//Path to a program.
CVSCOMMAND:FILEPATH=CVSCOMMAND-NOTFOUND

//CVS command line client
CVS_EXECUTABLE:FILEPATH=CVS_EXECUTABLE-NOTFOUND

//Options passed to the cvs update command.
CVS_UPDATE_OPTIONS:STRING=-d -A -P

//Limit of reported errors, -1 reports all.
DART_BUILD_ERROR_REPORT_LIMIT:BOOL=OFF

//Limit of reported warnings, -1 reports all.
DART_BUILD_WARNING_REPORT_LIMIT:BOOL=OFF

//If you have Dart installed, where is it located?
DART_ROOT:PATH=DART_ROOT-NOTFOUND

//Maximum time allowed before CTest will kill the test.
DART_TESTING_TIMEOUT:STRING=1500

//Show the actual output of the build, or if off show a . for each
// 1024 bytes.
DART_VERBOSE_BUILD:BOOL=OFF

//Should Dart server send email when build errors are found in
// Continuous builds?
DELIVER_CONTINUOUS_EMAIL:BOOL=OFF

//Path to a program.
DPKG_EXECUTABLE:FILEPATH=/usr/bin/dpkg

//Path to a library.
EXECINFO_LIB:FILEPATH=EXECINFO_LIB-NOTFOUND

//Path to a program.
FAKEROOT_EXECUTABLE:FILEPATH=/usr/bin/fakeroot

//Path to a program.
GITCOMMAND:FILEPATH=/usr/bin/git

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Path to gunzip executable
GUNZIPCOMMAND:FILEPATH=/usr/bin/gunzip

//Path to a program.
GUNZIP_EXECUTABLE:FILEPATH=/usr/bin/gunzip

//Path to a program.
HGCOMMAND:FILEPATH=HGCOMMAND-NOTFOUND

//Path to a program.
HG_EXECUTABLE:FILEPATH=HG_EXECUTABLE-NOTFOUND

//Path to java command, used by the Dart server to create html.
JAVACOMMAND:FILEPATH=/usr/bin/java

//Path to a file.
JNI_H:FILEPATH=JNI_H-NOTFOUND

//Path to a program.
Java_IDLJ_EXECUTABLE:FILEPATH=Java_IDLJ_EXECUTABLE-NOTFOUND

//Path to a program.
Java_JARSIGNER_EXECUTABLE:FILEPATH=/usr/bin/jarsigner

//Path to a program.
Java_JAR_EXECUTABLE:FILEPATH=/usr/bin/jar

//Path to a program.
Java_JAVAC_EXECUTABLE:FILEPATH=/usr/bin/javac

//Path to a program.
Java_JAVADOC_EXECUTABLE:FILEPATH=/usr/bin/javadoc

//Path to a program.
Java_JAVAH_EXECUTABLE:FILEPATH=Java_JAVAH_EXECUTABLE-NOTFOUND

//Path to a program.
Java_JAVA_EXECUTABLE:FILEPATH=/usr/bin/java

//Value Computed by CMake
JsonCpp_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmjsoncpp

//Value Computed by CMake
JsonCpp_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmjsoncpp

//Command to build the project
MAKECOMMAND:STRING=/usr/bin/cmake --build . --config "${CTEST_CONFIGURATION_TYPE}"

//Path to the memory checking command, used for memory error detection.
MEMORYCHECK_COMMAND:FILEPATH=MEMORYCHECK_COMMAND-NOTFOUND

//File that contains suppressions for the memory checker
MEMORYCHECK_SUPPRESSIONS_FILE:FILEPATH=

//Path to a program.
MINGW_CC_LINUX2WIN_EXECUTABLE:FILEPATH=MINGW_CC_LINUX2WIN_EXECUTABLE-NOTFOUND

//Path to a program.
MINGW_CXX_LINUX2WIN_EXECUTABLE:FILEPATH=MINGW_CXX_LINUX2WIN_EXECUTABLE-NOTFOUND

//Path to a program.
MINGW_RC_LINUX2WIN_EXECUTABLE:FILEPATH=MINGW_RC_LINUX2WIN_EXECUTABLE-NOTFOUND

//makensis program location
NSIS_MAKENSIS_EXECUTABLE:FILEPATH=NSIS_MAKENSIS_EXECUTABLE-NOTFOUND

//Path to a program.
NUGET_EXECUTABLE:FILEPATH=NUGET_EXECUTABLE-NOTFOUND

//Path to a library.
OPENSSL_CRYPTO_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libcrypto.so

//Path to a file.
OPENSSL_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
OPENSSL_SSL_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libssl.so

//Path to a program.
P4COMMAND:FILEPATH=P4COMMAND-NOTFOUND

//Path to a program.
P4D_EXECUTABLE:FILEPATH=P4D_EXECUTABLE-NOTFOUND

//Path to a program.
P4_EXECUTABLE:FILEPATH=P4_EXECUTABLE-NOTFOUND

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3.8

QT_QMAKE_EXECUTABLE:FILEPATH=NOTFOUND

//The directory containing a CMake configuration file for Qt5Core.
Qt5Core_DIR:PATH=Qt5Core_DIR-NOTFOUND

//The directory containing a CMake configuration file for Qt5Widgets.
Qt5Widgets_DIR:PATH=Qt5Widgets_DIR-NOTFOUND

//Path to a file.
RANDOM_FILE:FILEPATH=/dev/urandom

//Path to a program.
READELF_EXECUTABLE:FILEPATH=/usr/bin/readelf

//Path to a program.
RPMBUILD_EXECUTABLE:FILEPATH=RPMBUILD_EXECUTABLE-NOTFOUND

//Path to a program.
RPM_EXECUTABLE:FILEPATH=RPM_EXECUTABLE-NOTFOUND

//Path to a program.
SDCC_EXECUTABLE:FILEPATH=SDCC_EXECUTABLE-NOTFOUND

//Path to a program.
SHLIBDEPS_EXECUTABLE:FILEPATH=/usr/bin/dpkg-shlibdeps

//Name of the computer/site where compile is being run
SITE:STRING=zachary-Blade

//Path to the SLURM sbatch executable
SLURM_SBATCH_COMMAND:FILEPATH=SLURM_SBATCH_COMMAND-NOTFOUND

//Path to the SLURM srun executable
SLURM_SRUN_COMMAND:FILEPATH=SLURM_SRUN_COMMAND-NOTFOUND

//Sphinx Documentation Builder (sphinx-doc.org)
SPHINX_EXECUTABLE:FILEPATH=SPHINX_EXECUTABLE-NOTFOUND

//Flags to pass to sphinx-build
SPHINX_FLAGS:STRING=

//Build html help with Sphinx
SPHINX_HTML:BOOL=OFF

//Build Info manual with Sphinx
SPHINX_INFO:BOOL=OFF

//Build PDF help with Sphinx using LaTeX
SPHINX_LATEXPDF:BOOL=OFF

//Build man pages with Sphinx
SPHINX_MAN:BOOL=OFF

//Build Qt help with Sphinx
SPHINX_QTHELP:BOOL=OFF

//Build html single page help with Sphinx
SPHINX_SINGLEHTML:BOOL=OFF

//Build text help with Sphinx (not installed)
SPHINX_TEXT:BOOL=OFF

//Path to a program.
SVNCOMMAND:FILEPATH=SVNCOMMAND-NOTFOUND

//subversion command line client
Subversion_SVN_EXECUTABLE:FILEPATH=Subversion_SVN_EXECUTABLE-NOTFOUND

//Value Computed by CMake
bzip2_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmbzip2

//Value Computed by CMake
bzip2_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmbzip2

//Value Computed by CMake
cmsys_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Source/kwsys

//Dependencies for the target
cmsys_LIB_DEPENDS:STATIC=general;dl;general;dl;

//Value Computed by CMake
cmsys_SOURCE_DIR:STATIC=/home/zachary/cmake/Source/kwsys

//Value Computed by CMake
libarchive_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmlibarchive

//Value Computed by CMake
libarchive_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmlibarchive

//Value Computed by CMake
librhash_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmlibrhash

//Value Computed by CMake
librhash_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmlibrhash

//Value Computed by CMake
libuv_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmlibuv

//Value Computed by CMake
libuv_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmlibuv

//Path to a library.
pkgcfg_lib_NCURSES_ncurses:FILEPATH=/usr/lib/x86_64-linux-gnu/libncurses.so

//Path to a library.
pkgcfg_lib_NCURSES_tinfo:FILEPATH=/usr/lib/x86_64-linux-gnu/libtinfo.so

//Path to a library.
pkgcfg_lib__OPENSSL_crypto:FILEPATH=/usr/lib/x86_64-linux-gnu/libcrypto.so

//Path to a library.
pkgcfg_lib__OPENSSL_ssl:FILEPATH=/usr/lib/x86_64-linux-gnu/libssl.so

//Value Computed by CMake
zstd_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmzstd

//Value Computed by CMake
zstd_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmzstd


########################
# INTERNAL cache entries
########################

//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_RMD160_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_RMD160_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_RMD160_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBC2:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBC3:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBC2:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBC3:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBC2:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBC3:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_OPENSSL:INTERNAL=FALSE
//Set to ON to build curl executable.
BUILD_CURL_EXE:INTERNAL=OFF
//No curl dashboard reports
BUILD_DASHBOARD_REPORTS:INTERNAL=OFF
//No curl release/debug dirs
BUILD_RELEASE_DEBUG_DIRS:INTERNAL=OFF
//Build shared libraries
BUILD_SHARED_LIBS:INTERNAL=OFF
//ADVANCED property for variable: BZRCOMMAND
BZRCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BZR_EXECUTABLE
BZR_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_BIN_DIR
CMAKE_BIN_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_BUILD_WITH_INSTALL_RPATH
CMAKE_BUILD_WITH_INSTALL_RPATH-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/zachary/oss/labs/lab-08/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=16
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//ADVANCED property for variable: CMAKE_CTEST_COMMAND
CMAKE_CTEST_COMMAND-ADVANCED:INTERNAL=1
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DATA_DIR
CMAKE_DATA_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DOC_DIR
CMAKE_DOC_DIR-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/cmake-gui
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//ADVANCED property for variable: CMAKE_Fortran_COMPILER
CMAKE_Fortran_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_Fortran_COMPILER_ID
CMAKE_Fortran_COMPILER_ID-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_Fortran_COMPILER_SUPPORTS_F90
CMAKE_Fortran_COMPILER_SUPPORTS_F90-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_Fortran_FLAGS
CMAKE_Fortran_FLAGS-ADVANCED:INTERNAL=1
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/zachary/cmake
//ADVANCED property for variable: CMAKE_INFO_DIR
CMAKE_INFO_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DEBUG_LIBRARIES
CMAKE_INSTALL_DEBUG_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RPATH_USE_LINK_PATH
CMAKE_INSTALL_RPATH_USE_LINK_PATH-ADVANCED:INTERNAL=1
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAN_DIR
CMAKE_MAN_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=35
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.16
//ADVANCED property for variable: CMAKE_RUN_LONG_TESTS
CMAKE_RUN_LONG_TESTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//Enable BearSSL for SSL/TLS
CMAKE_USE_BEARSSL:INTERNAL=OFF
//ADVANCED property for variable: CMAKE_USE_FOLDERS
CMAKE_USE_FOLDERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_USE_GSSAPI
CMAKE_USE_GSSAPI-ADVANCED:INTERNAL=1
//Use GSSAPI implementation (right now only Heimdal is supported
// with CMake build)
CMAKE_USE_GSSAPI:INTERNAL=OFF
//ADVANCED property for variable: CMAKE_USE_LIBSSH2
CMAKE_USE_LIBSSH2-ADVANCED:INTERNAL=1
//Use libSSH2
CMAKE_USE_LIBSSH2:INTERNAL=OFF
//Enable mbedTLS for SSL/TLS
CMAKE_USE_MBEDTLS:INTERNAL=OFF
//Enable NSS for SSL/TLS
CMAKE_USE_NSS:INTERNAL=OFF
//No curl OpenLDAP
CMAKE_USE_OPENLDAP:INTERNAL=OFF
//ADVANCED property for variable: CMAKE_USE_OPENSSL
CMAKE_USE_OPENSSL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_USE_SYSTEM_KWIML
CMAKE_USE_SYSTEM_KWIML-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_XDGDATA_DIR
CMAKE_XDGDATA_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMake_BUILD_DEVELOPER_REFERENCE
CMake_BUILD_DEVELOPER_REFERENCE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
CMake_C11_THREAD_LOCAL_WORKS:INTERNAL=TRUE
//Result of TRY_COMPILE
CMake_COMPILE_CXX_FILESYSTEM:INTERNAL=TRUE
//Result of TRY_COMPILE
CMake_CXX17_WORKS:INTERNAL=TRUE
//TRY_RUN
CMake_HAVE_CXX_FILESYSTEM:INTERNAL=ON
//Result of TRY_COMPILE
CMake_HAVE_CXX_MAKE_UNIQUE:INTERNAL=TRUE
//ADVANCED property for variable: CMake_INSTALL_COMPONENTS
CMake_INSTALL_COMPONENTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMake_INSTALL_DEPENDENCIES
CMake_INSTALL_DEPENDENCIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMake_INSTALL_INFIX
CMake_INSTALL_INFIX-ADVANCED:INTERNAL=1
//Result of TRY_RUN
CMake_RUN_CXX_FILESYSTEM:INTERNAL=0
//ADVANCED property for variable: CMake_TEST_INSTALL
CMake_TEST_INSTALL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPRESSIONCOMMAND
COMPRESSIONCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_COMMAND
COVERAGE_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_EXTRA_FLAGS
COVERAGE_EXTRA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_FREEBSD
CPACK_BINARY_FREEBSD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TZ
CPACK_BINARY_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_RPM
CPACK_SOURCE_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TBZ2
CPACK_SOURCE_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TGZ
CPACK_SOURCE_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TXZ
CPACK_SOURCE_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TZ
CPACK_SOURCE_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_COUNT
CTEST_SUBMIT_RETRY_COUNT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_DELAY
CTEST_SUBMIT_RETRY_DELAY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_TEST_CPACK
CTEST_TEST_CPACK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_TEST_CTEST
CTEST_TEST_CTEST-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURL_CA_BUNDLE
CURL_CA_BUNDLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURL_CA_PATH
CURL_CA_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURL_DISABLE_COOKIES
CURL_DISABLE_COOKIES-ADVANCED:INTERNAL=1
//to disable cookies support
CURL_DISABLE_COOKIES:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_CRYPTO_AUTH
CURL_DISABLE_CRYPTO_AUTH-ADVANCED:INTERNAL=1
//to disable cryptographic authentication
CURL_DISABLE_CRYPTO_AUTH:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_DICT
CURL_DISABLE_DICT-ADVANCED:INTERNAL=1
//disables DICT
CURL_DISABLE_DICT:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_FILE
CURL_DISABLE_FILE-ADVANCED:INTERNAL=1
//disables FILE
CURL_DISABLE_FILE:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_FTP
CURL_DISABLE_FTP-ADVANCED:INTERNAL=1
//disables FTP
CURL_DISABLE_FTP:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_GOPHER
CURL_DISABLE_GOPHER-ADVANCED:INTERNAL=1
//to disable Gopher
CURL_DISABLE_GOPHER:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_HTTP
CURL_DISABLE_HTTP-ADVANCED:INTERNAL=1
//disables HTTP
CURL_DISABLE_HTTP:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_IMAP
CURL_DISABLE_IMAP-ADVANCED:INTERNAL=1
//to disable IMAP
CURL_DISABLE_IMAP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_LDAP
CURL_DISABLE_LDAP-ADVANCED:INTERNAL=1
//disables LDAP
CURL_DISABLE_LDAP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_LDAPS
CURL_DISABLE_LDAPS-ADVANCED:INTERNAL=1
//to disable LDAPS
CURL_DISABLE_LDAPS:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_POP3
CURL_DISABLE_POP3-ADVANCED:INTERNAL=1
//to disable POP3
CURL_DISABLE_POP3:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_PROXY
CURL_DISABLE_PROXY-ADVANCED:INTERNAL=1
//to disable proxy
CURL_DISABLE_PROXY:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_RTSP
CURL_DISABLE_RTSP-ADVANCED:INTERNAL=1
//to disable RTSP
CURL_DISABLE_RTSP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_SMTP
CURL_DISABLE_SMTP-ADVANCED:INTERNAL=1
//to disable SMTP
CURL_DISABLE_SMTP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_TELNET
CURL_DISABLE_TELNET-ADVANCED:INTERNAL=1
//disables Telnet
CURL_DISABLE_TELNET:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_TFTP
CURL_DISABLE_TFTP-ADVANCED:INTERNAL=1
//disables TFTP
CURL_DISABLE_TFTP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_VERBOSE_STRINGS
CURL_DISABLE_VERBOSE_STRINGS-ADVANCED:INTERNAL=1
//to disable verbose strings
CURL_DISABLE_VERBOSE_STRINGS:INTERNAL=OFF
//No curl hidden symbols
CURL_HIDDEN_SYMBOLS:INTERNAL=OFF
//Turn on compiler Link Time Optimizations
CURL_LTO:INTERNAL=OFF
//Set to ON to build libcurl with static CRT on Windows (/MT).
CURL_STATIC_CRT:INTERNAL=OFF
//Turn compiler warnings into errors
CURL_WERROR:INTERNAL=OFF
//Have library /usr/lib/x86_64-linux-gnu/libcurses.so
CURSES_CURSES_HAS_WSYNCUP:INTERNAL=1
//ADVANCED property for variable: CURSES_CURSES_LIBRARY
CURSES_CURSES_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_FORM_LIBRARY
CURSES_FORM_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_INCLUDE_PATH
CURSES_INCLUDE_PATH-ADVANCED:INTERNAL=1
//Have library /usr/lib/x86_64-linux-gnu/libncurses.so
CURSES_NCURSES_HAS_CBREAK:INTERNAL=1
//ADVANCED property for variable: CURSES_NCURSES_LIBRARY
CURSES_NCURSES_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVSCOMMAND
CVSCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVS_EXECUTABLE
CVS_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVS_UPDATE_OPTIONS
CVS_UPDATE_OPTIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_BUILD_ERROR_REPORT_LIMIT
DART_BUILD_ERROR_REPORT_LIMIT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_BUILD_WARNING_REPORT_LIMIT
DART_BUILD_WARNING_REPORT_LIMIT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_ROOT
DART_ROOT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_TESTING_TIMEOUT
DART_TESTING_TIMEOUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_VERBOSE_BUILD
DART_VERBOSE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DELIVER_CONTINUOUS_EMAIL
DELIVER_CONTINUOUS_EMAIL-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(dev_t)
DEV_T:INTERNAL=8
//Curl can use thread-safe functions
DISABLED_THREADSAFE:INTERNAL=OFF
//Enable ACL support
ENABLE_ACL:INTERNAL=OFF
//Set to ON to enable c-ares support
ENABLE_ARES:INTERNAL=OFF
//Enable the use of the system BZip2 library if found
ENABLE_BZip2:INTERNAL=ON
//Enable the use of CNG(Crypto Next Generation)
ENABLE_CNG:INTERNAL=OFF
//Set to ON to build with TrackMemory feature enabled
ENABLE_CURLDEBUG:INTERNAL=OFF
//Set to ON to enable curl debug features
ENABLE_DEBUG:INTERNAL=OFF
//Enable the use of the system EXPAT library if found
ENABLE_EXPAT:INTERNAL=OFF
//Enable iconv support
ENABLE_ICONV:INTERNAL=OFF
//Set to OFF to prevent usage of inet_pton when building against
// modern SDKs while still requiring compatibility with older Windows
// versions, such as Windows XP, Windows Server 2003 etc.
ENABLE_INET_PTON:INTERNAL=OFF
//ADVANCED property for variable: ENABLE_IPV6
ENABLE_IPV6-ADVANCED:INTERNAL=1
//Define if you want to enable IPv6 support
ENABLE_IPV6:INTERNAL=ON
//Enable the use of the system LIBB2 library if found
ENABLE_LIBB2:INTERNAL=OFF
//Enable the use of the system libxml2 library if found
ENABLE_LIBXML2:INTERNAL=OFF
//Enable the use of the system LZ4 library if found
ENABLE_LZ4:INTERNAL=OFF
//Enable the use of the system LZMA library if found
ENABLE_LZMA:INTERNAL=ON
//Enable the use of the system LZO library if found
ENABLE_LZO:INTERNAL=OFF
//Enable the use of the system LibGCC library if found
ENABLE_LibGCC:INTERNAL=OFF
//No curl built-in manual
ENABLE_MANUAL:INTERNAL=OFF
//Enable use of mbed TLS
ENABLE_MBEDTLS:INTERNAL=OFF
//Enable use of Nettle
ENABLE_NETTLE:INTERNAL=OFF
//Enable use of OpenSSL
ENABLE_OPENSSL:INTERNAL=ON
//Enable the use of the system PCREPOSIX library if found
ENABLE_PCREPOSIX:INTERNAL=OFF
//No curl POSIX threaded DNS lookup
ENABLE_THREADED_RESOLVER:INTERNAL=OFF
//Define if you want Unix domain sockets support
ENABLE_UNIX_SOCKETS:INTERNAL=OFF
//Enable extended attribute support
ENABLE_XATTR:INTERNAL=OFF
//Enable the use of the system ZLIB library if found
ENABLE_ZLIB:INTERNAL=ON
//Enable the use of the system zstd library if found
ENABLE_ZSTD:INTERNAL=ON
//ADVANCED property for variable: EXECINFO_LIB
EXECINFO_LIB-ADVANCED:INTERNAL=1
//No configurable exe dir.
EXECUTABLE_OUTPUT_PATH:INTERNAL=
//Details about finding BZip2
FIND_PACKAGE_MESSAGE_DETAILS_BZip2:INTERNAL=[cmbzip2][/home/zachary/cmake/Utilities/cmbzip2][v1.0.8()]
//Details about finding Curses
FIND_PACKAGE_MESSAGE_DETAILS_Curses:INTERNAL=[/usr/lib/x86_64-linux-gnu/libncurses.so][/usr/include][v()]
//Details about finding LibLZMA
FIND_PACKAGE_MESSAGE_DETAILS_LibLZMA:INTERNAL=[cmliblzma][/home/zachary/cmake/Utilities/cmliblzma/liblzma/api][1][1][1][v5.2.4()]
//Details about finding NGHTTP2
FIND_PACKAGE_MESSAGE_DETAILS_NGHTTP2:INTERNAL=[cmnghttp2][/home/zachary/cmake/Utilities/cmnghttp2/lib/includes][v()]
//Details about finding OpenSSL
FIND_PACKAGE_MESSAGE_DETAILS_OpenSSL:INTERNAL=[/usr/lib/x86_64-linux-gnu/libcrypto.so][/usr/include][c ][v1.1.1f()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[cmzlib][/home/zachary/cmake/Utilities][v()]
//CHECK_TYPE_SIZE: sizeof(gid_t)
GID_T:INTERNAL=4
//ADVANCED property for variable: GITCOMMAND
GITCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GUNZIPCOMMAND
GUNZIPCOMMAND-ADVANCED:INTERNAL=1
//Have symbol alarm
HAVE_ALARM:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h
HAVE_ALLOCA_H:INTERNAL=1
//Have symbol arc4random
HAVE_ARC4RANDOM:INTERNAL=
//Have symbol arc4random_buf
HAVE_ARC4RANDOM_BUF:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h
HAVE_ARPA_INET_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h
HAVE_ARPA_TFTP_H:INTERNAL=1
//Have symbol basename
HAVE_BASENAME:INTERNAL=1
//Curl test 
HAVE_BOOL_T:INTERNAL=1
//Test HAVE_BSWAP_16
HAVE_BSWAP_16:INTERNAL=1
//Test HAVE_BSWAP_32
HAVE_BSWAP_32:INTERNAL=1
//Test HAVE_BSWAP_64
HAVE_BSWAP_64:INTERNAL=1
//Curl test 
HAVE_BUILTIN_AVAILABLE:INTERNAL=
//Have include byteswap.h
HAVE_BYTESWAP_H:INTERNAL=1
//Have function chflags
HAVE_CHFLAGS:INTERNAL=
//Have function chown
HAVE_CHOWN:INTERNAL=1
//Have function chroot
HAVE_CHROOT:INTERNAL=1
//Curl test 
HAVE_CLOCK_GETTIME_MONOTONIC:INTERNAL=1
//Have symbol closesocket
HAVE_CLOSESOCKET:INTERNAL=
//Have includes sys/types.h;ctype.h;copyfile.h
HAVE_COPYFILE_H:INTERNAL=
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;crypto.h
HAVE_CRYPTO_H:INTERNAL=
//Have function ctime_r
HAVE_CTIME_R:INTERNAL=1
//Have symbol use_default_colors
HAVE_CURSES_USE_DEFAULT_COLORS:INTERNAL=1
//Have function cygwin_conv_path
HAVE_CYGWIN_CONV_PATH:INTERNAL=
//Result of TRY_COMPILE
HAVE_DEV_T:INTERNAL=TRUE
//Have includes sys/types.h;ctype.h;direct.h
HAVE_DIRECT_H:INTERNAL=
//Test HAVE_DIRENT_H
HAVE_DIRENT_H:INTERNAL=1
//Test HAVE_DIRFD
HAVE_DIRFD:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have library dl;/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so;cmnghttp2
HAVE_DLOPEN:INTERNAL=
//Have symbol D_MD_ORDER
HAVE_D_MD_ORDER:INTERNAL=
//Have symbol EFTYPE
HAVE_EFTYPE:INTERNAL=
//Have symbol EILSEQ
HAVE_EILSEQ:INTERNAL=1
//Have include elf.h
HAVE_ELF_H:INTERNAL=1
//Have symbol environ
HAVE_ENVIRON_NOT_REQUIRE_PROTOTYPE:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h
HAVE_ERR_H:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;ext2fs/ext2_fs.h
HAVE_EXT2FS_EXT2_FS_H:INTERNAL=
//Have function fchdir
HAVE_FCHDIR:INTERNAL=1
//Have function fchflags
HAVE_FCHFLAGS:INTERNAL=
//Have function fchmod
HAVE_FCHMOD:INTERNAL=1
//Have function fchown
HAVE_FCHOWN:INTERNAL=1
//Have symbol fcntl
HAVE_FCNTL:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Curl test 
HAVE_FCNTL_O_NONBLOCK:INTERNAL=1
//Have function fdopendir
HAVE_FDOPENDIR:INTERNAL=1
//Curl test 
HAVE_FILE_OFFSET_BITS:INTERNAL=1
//Have symbol fork
HAVE_FORK:INTERNAL=1
//Have symbol freeaddrinfo
HAVE_FREEADDRINFO:INTERNAL=1
//Have symbol freeifaddrs
HAVE_FREEIFADDRS:INTERNAL=1
//Have function fseeko
HAVE_FSEEKO:INTERNAL=1
//Have symbol fsetxattr
HAVE_FSETXATTR:INTERNAL=1
//Curl test 
HAVE_FSETXATTR_5:INTERNAL=1
//Curl test 
HAVE_FSETXATTR_6:INTERNAL=
//Have function fstat
HAVE_FSTAT:INTERNAL=1
//Have function fstatat
HAVE_FSTATAT:INTERNAL=1
//Have function fstatfs
HAVE_FSTATFS:INTERNAL=1
//Have function fstatvfs
HAVE_FSTATVFS:INTERNAL=1
//Have symbol ftruncate
HAVE_FTRUNCATE:INTERNAL=1
//Have function futimens
HAVE_FUTIMENS:INTERNAL=1
//Have function futimes
HAVE_FUTIMES:INTERNAL=1
//Have function futimesat
HAVE_FUTIMESAT:INTERNAL=1
//Have symbol getaddrinfo
HAVE_GETADDRINFO:INTERNAL=1
//Have symbol geteuid
HAVE_GETEUID:INTERNAL=1
//Have function getgrgid_r
HAVE_GETGRGID_R:INTERNAL=1
//Have function getgrnam_r
HAVE_GETGRNAM_R:INTERNAL=1
//Have symbol gethostbyaddr
HAVE_GETHOSTBYADDR:INTERNAL=1
//Have symbol gethostbyaddr_r
HAVE_GETHOSTBYADDR_R:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYADDR_R_5:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_5_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_7:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_7_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_8:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYADDR_R_8_REENTRANT:INTERNAL=1
//Have symbol gethostbyname
HAVE_GETHOSTBYNAME:INTERNAL=1
//Have symbol gethostbyname_r
HAVE_GETHOSTBYNAME_R:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYNAME_R_3:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_3_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_5:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_5_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_6:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYNAME_R_6_REENTRANT:INTERNAL=1
//Have function gethostname
HAVE_GETHOSTNAME:INTERNAL=1
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=1
//Have symbol getpass_r
HAVE_GETPASS_R:INTERNAL=
//Have symbol getpeername
HAVE_GETPEERNAME:INTERNAL=1
//Have function getpid
HAVE_GETPID:INTERNAL=1
//Have symbol getprotobyname
HAVE_GETPROTOBYNAME:INTERNAL=1
//Have function getpwnam_r
HAVE_GETPWNAM_R:INTERNAL=1
//Have symbol getpwuid
HAVE_GETPWUID:INTERNAL=1
//Have symbol getpwuid_r
HAVE_GETPWUID_R:INTERNAL=1
//Have symbol getrandom
HAVE_GETRANDOM:INTERNAL=1
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=1
//Have symbol getsockname
HAVE_GETSOCKNAME:INTERNAL=1
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=1
//Have function getvfsbyname
HAVE_GETVFSBYNAME:INTERNAL=
//Result of TRY_COMPILE
HAVE_GID_T:INTERNAL=TRUE
//Curl test 
HAVE_GLIBC_STRERROR_R:INTERNAL=
//Have symbol gmtime_r
HAVE_GMTIME_R:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h
HAVE_GRP_H:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.

=================================================================
=== ../CMakeFiles/CMakeOutput.log
=================================================================
The system is: Linux - 5.8.0-45-generic - x86_64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is GNU, found in "/home/zachary/oss/labs/lab-08/build/CMakeFiles/3.16.3/CompilerIdC/a.out"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"

The CXX compiler identification is GNU, found in "/home/zachary/oss/labs/lab-08/build/CMakeFiles/3.16.3/CompilerIdCXX/a.out"

Determining if the C compiler works passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_08d9d/fast && /usr/bin/make -f CMakeFiles/cmTC_08d9d.dir/build.make CMakeFiles/cmTC_08d9d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_08d9d.dir/testCCompiler.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_08d9d.dir/testCCompiler.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_08d9d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_08d9d.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_08d9d.dir/testCCompiler.c.o  -o cmTC_08d9d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Detecting C compiler ABI info compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_55bdb/fast && /usr/bin/make -f CMakeFiles/cmTC_55bdb.dir/build.make CMakeFiles/cmTC_55bdb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o
/usr/bin/cc   -v -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccoP0iYN.s
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
 as -v --64 -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o /tmp/ccoP0iYN.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
Linking C executable cmTC_55bdb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_55bdb.dir/link.txt --verbose=1
/usr/bin/cc     -v CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o  -o cmTC_55bdb 
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_55bdb' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cchPEwWc.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_55bdb /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_55bdb' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Parsed C implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==> [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==> [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==> [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==> [/usr/include]
  implicit include dirs: [/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make cmTC_55bdb/fast && /usr/bin/make -f CMakeFiles/cmTC_55bdb.dir/build.make CMakeFiles/cmTC_55bdb.dir/build]
  ignore line: [make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp']
  ignore line: [Building C object CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o]
  ignore line: [/usr/bin/cc   -v -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccoP0iYN.s]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [ as -v --64 -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o /tmp/ccoP0iYN.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking C executable cmTC_55bdb]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_55bdb.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/cc     -v CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o  -o cmTC_55bdb ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_55bdb' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cchPEwWc.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_55bdb /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==> ignore
    arg [-plugin] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==> ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==> ignore
    arg [-plugin-opt=-fresolution=/tmp/cchPEwWc.res] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_x86_64] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
    arg [-pie] ==> ignore
    arg [-znow] ==> ignore
    arg [-zrelro] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_55bdb] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==> ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o] ==> ignore
    arg [-lgcc] ==> lib [gcc]
    arg [--push-state] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--pop-state] ==> ignore
    arg [-lc] ==> lib [c]
    arg [-lgcc] ==> lib [gcc]
    arg [--push-state] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--pop-state] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==> [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==> [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> [/usr/lib]
  implicit libs: [gcc;gcc_s;c;gcc;gcc_s]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Determining if the CXX compiler works passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_81861/fast && /usr/bin/make -f CMakeFiles/cmTC_81861.dir/build.make CMakeFiles/cmTC_81861.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_81861.dir/testCXXCompiler.cxx.o
/usr/bin/c++     -o CMakeFiles/cmTC_81861.dir/testCXXCompiler.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
Linking CXX executable cmTC_81861
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_81861.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_81861.dir/testCXXCompiler.cxx.o  -o cmTC_81861 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9a7e5/fast && /usr/bin/make -f CMakeFiles/cmTC_9a7e5.dir/build.make CMakeFiles/cmTC_9a7e5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o
/usr/bin/c++    -v -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccZLd1WL.s
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/include/c++/9
 /usr/include/x86_64-linux-gnu/c++/9
 /usr/include/c++/9/backward
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 as -v --64 -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccZLd1WL.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
Linking CXX executable cmTC_9a7e5
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9a7e5.dir/link.txt --verbose=1
/usr/bin/c++      -v CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_9a7e5 
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_9a7e5' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cclriZQb.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_9a7e5 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_9a7e5' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Parsed CXX implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/include/c++/9]
    add: [/usr/include/x86_64-linux-gnu/c++/9]
    add: [/usr/include/c++/9/backward]
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/include/c++/9] ==> [/usr/include/c++/9]
  collapse include dir [/usr/include/x86_64-linux-gnu/c++/9] ==> [/usr/include/x86_64-linux-gnu/c++/9]
  collapse include dir [/usr/include/c++/9/backward] ==> [/usr/include/c++/9/backward]
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==> [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==> [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==> [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==> [/usr/include]
  implicit include dirs: [/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed CXX implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make cmTC_9a7e5/fast && /usr/bin/make -f CMakeFiles/cmTC_9a7e5.dir/build.make CMakeFiles/cmTC_9a7e5.dir/build]
  ignore line: [make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp']
  ignore line: [Building CXX object CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o]
  ignore line: [/usr/bin/c++    -v -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/c++]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccZLd1WL.s]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ /usr/include/c++/9]
  ignore line: [ /usr/include/x86_64-linux-gnu/c++/9]
  ignore line: [ /usr/include/c++/9/backward]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ as -v --64 -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccZLd1WL.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking CXX executable cmTC_9a7e5]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9a7e5.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/c++      -v CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_9a7e5 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/c++]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_9a7e5' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cclriZQb.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_9a7e5 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==> ignore
    arg [-plugin] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==> ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==> ignore
    arg [-plugin-opt=-fresolution=/tmp/cclriZQb.res] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_x86_64] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
    arg [-pie] ==> ignore
    arg [-znow] ==> ignore
    arg [-zrelro] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_9a7e5] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==> ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
    arg [-lstdc++] ==> lib [stdc++]
    arg [-lm] ==> lib [m]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lc] ==> lib [c]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==> [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==> [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> [/usr/lib]
  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Determining if compiler supports C11 _Thread_local passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b3c5b/fast && /usr/bin/make -f CMakeFiles/cmTC_b3c5b.dir/build.make CMakeFiles/cmTC_b3c5b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b3c5b.dir/cm_c11_thread_local.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_b3c5b.dir/cm_c11_thread_local.c.o   -c /home/zachary/cmake/Source/Checks/cm_c11_thread_local.c
Linking C executable cmTC_b3c5b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b3c5b.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_b3c5b.dir/cm_c11_thread_local.c.o  -o cmTC_b3c5b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if compiler supports needed C++17 constructs passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0e5d7/fast && /usr/bin/make -f CMakeFiles/cmTC_0e5d7.dir/build.make CMakeFiles/cmTC_0e5d7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_0e5d7.dir/cm_cxx17_check.cpp.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_0e5d7.dir/cm_cxx17_check.cpp.o -c /home/zachary/cmake/Source/Checks/cm_cxx17_check.cpp
Linking CXX executable cmTC_0e5d7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0e5d7.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_0e5d7.dir/cm_cxx17_check.cpp.o  -o cmTC_0e5d7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if compiler supports C++ make_unique passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8e0c8/fast && /usr/bin/make -f CMakeFiles/cmTC_8e0c8.dir/build.make CMakeFiles/cmTC_8e0c8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_8e0c8.dir/cm_cxx_make_unique.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_8e0c8.dir/cm_cxx_make_unique.cxx.o -c /home/zachary/cmake/Source/Checks/cm_cxx_make_unique.cxx
Linking CXX executable cmTC_8e0c8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8e0c8.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_8e0c8.dir/cm_cxx_make_unique.cxx.o  -o cmTC_8e0c8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if compiler supports C++ filesystem passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7adaa/fast && /usr/bin/make -f CMakeFiles/cmTC_7adaa.dir/build.make CMakeFiles/cmTC_7adaa.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_7adaa.dir/cm_cxx_filesystem.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_7adaa.dir/cm_cxx_filesystem.cxx.o -c /home/zachary/cmake/Source/Checks/cm_cxx_filesystem.cxx
Linking CXX executable cmTC_7adaa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7adaa.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_7adaa.dir/cm_cxx_filesystem.cxx.o  -o cmTC_7adaa 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the unsetenv exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dcf06/fast && /usr/bin/make -f CMakeFiles/cmTC_dcf06.dir/build.make CMakeFiles/cmTC_dcf06.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dcf06.dir/CheckSymbolExists.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_dcf06.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_dcf06
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dcf06.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_dcf06.dir/CheckSymbolExists.c.o  -o cmTC_dcf06 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdlib.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef unsetenv
  return ((int*)(&unsetenv))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the include file pthread.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_104ea/fast && /usr/bin/make -f CMakeFiles/cmTC_104ea.dir/build.make CMakeFiles/cmTC_104ea.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_104ea.dir/CheckIncludeFile.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_104ea.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_104ea
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_104ea.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_104ea.dir/CheckIncludeFile.c.o  -o cmTC_104ea 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function pthread_create exists in the pthread passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_57f76/fast && /usr/bin/make -f CMakeFiles/cmTC

=================================================================
=== ../CMakeFiles/CMakeError.log
=================================================================
Determining if the environ exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_062bc/fast && /usr/bin/make -f CMakeFiles/cmTC_062bc.dir/build.make CMakeFiles/cmTC_062bc.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_062bc.dir/CheckSymbolExists.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_062bc.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘environ’ undeclared (first use in this function)
    8 |   return ((int*)(&environ))[argc];
      |                   ^~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_062bc.dir/build.make:66: CMakeFiles/cmTC_062bc.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_062bc/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdlib.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef environ
  return ((int*)(&environ))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6c3f6/fast && /usr/bin/make -f CMakeFiles/cmTC_6c3f6.dir/build.make CMakeFiles/cmTC_6c3f6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6c3f6.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD   -std=gnu11 -o CMakeFiles/cmTC_6c3f6.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_6c3f6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6c3f6.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD    CMakeFiles/cmTC_6c3f6.dir/src.c.o  -o cmTC_6c3f6 
/usr/bin/ld: CMakeFiles/cmTC_6c3f6.dir/src.c.o: in function `main':
src.c:(.text+0x46): undefined reference to `pthread_create'
/usr/bin/ld: src.c:(.text+0x52): undefined reference to `pthread_detach'
/usr/bin/ld: src.c:(.text+0x63): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_6c3f6.dir/build.make:87: cmTC_6c3f6] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6c3f6/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d53b7/fast && /usr/bin/make -f CMakeFiles/cmTC_d53b7.dir/build.make CMakeFiles/cmTC_d53b7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d53b7.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -std=gnu11 -o CMakeFiles/cmTC_d53b7.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_d53b7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d53b7.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTC_d53b7.dir/CheckFunctionExists.c.o  -o cmTC_d53b7  -lpthreads 
/usr/bin/ld: cannot find -lpthreads
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_d53b7.dir/build.make:87: cmTC_d53b7] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d53b7/fast] Error 2



Checking whether CXX compiler has environ in stdlib.h failed to compile with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5edc4/fast && /usr/bin/make -f CMakeFiles/cmTC_5edc4.dir/build.make CMakeFiles/cmTC_5edc4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_5edc4.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_ENVIRON_IN_STDLIB_H  -std=gnu++17 -o CMakeFiles/cmTC_5edc4.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx: In function ‘int main()’:
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx:53:13: error: ‘environ’ was not declared in this scope; did you mean ‘union’?
   53 |   char* e = environ[0];
      |             ^~~~~~~
      |             union
make[1]: *** [CMakeFiles/cmTC_5edc4.dir/build.make:66: CMakeFiles/cmTC_5edc4.dir/kwsysPlatformTestsCXX.cxx.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5edc4/fast] Error 2



Checking whether CXX compiler struct stat has st_mtimespec member failed to compile with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_64601/fast && /usr/bin/make -f CMakeFiles/cmTC_64601.dir/build.make CMakeFiles/cmTC_64601.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_64601.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_STAT_HAS_ST_MTIMESPEC  -std=gnu++17 -o CMakeFiles/cmTC_64601.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx: In function ‘int main()’:
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx:26:15: error: ‘struct stat’ has no member named ‘st_mtimespec’
   26 |   (void)stat1.st_mtimespec.tv_sec;
      |               ^~~~~~~~~~~~
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx:27:15: error: ‘struct stat’ has no member named ‘st_mtimespec’
   27 |   (void)stat1.st_mtimespec.tv_nsec;
      |               ^~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_64601.dir/build.make:66: CMakeFiles/cmTC_64601.dir/kwsysPlatformTestsCXX.cxx.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_64601/fast] Error 2



Determining if the function connect exists in the socket;dl failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7e8c9/fast && /usr/bin/make -f CMakeFiles/cmTC_7e8c9.dir/build.make CMakeFiles/cmTC_7e8c9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7e8c9.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=connect   -std=gnu11 -o CMakeFiles/cmTC_7e8c9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_7e8c9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7e8c9.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=connect    CMakeFiles/cmTC_7e8c9.dir/CheckFunctionExists.c.o  -o cmTC_7e8c9  -lsocket -ldl 
/usr/bin/ld: cannot find -lsocket
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_7e8c9.dir/build.make:87: cmTC_7e8c9] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7e8c9/fast] Error 2



Determining if the function recv exists in the network;dl failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c3f50/fast && /usr/bin/make -f CMakeFiles/cmTC_c3f50.dir/build.make CMakeFiles/cmTC_c3f50.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c3f50.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=recv   -std=gnu11 -o CMakeFiles/cmTC_c3f50.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_c3f50
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c3f50.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=recv    CMakeFiles/cmTC_c3f50.dir/CheckFunctionExists.c.o  -o cmTC_c3f50  -lnetwork -ldl 
/usr/bin/ld: cannot find -lnetwork
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_c3f50.dir/build.make:87: cmTC_c3f50] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_c3f50/fast] Error 2



Determining if the RAND_status exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_78100/fast && /usr/bin/make -f CMakeFiles/cmTC_78100.dir/build.make CMakeFiles/cmTC_78100.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_78100.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_78100.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: error: ‘RAND_status’ undeclared (first use in this function)
    7 |   return ((int*)(&RAND_status))[argc];
      |                   ^~~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_78100.dir/build.make:66: CMakeFiles/cmTC_78100.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_78100/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */

int main(int argc, char** argv)
{
  (void)argv;
#ifndef RAND_status
  return ((int*)(&RAND_status))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the RAND_screen exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ae321/fast && /usr/bin/make -f CMakeFiles/cmTC_ae321.dir/build.make CMakeFiles/cmTC_ae321.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ae321.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ae321.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: error: ‘RAND_screen’ undeclared (first use in this function)
    7 |   return ((int*)(&RAND_screen))[argc];
      |                   ^~~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_ae321.dir/build.make:66: CMakeFiles/cmTC_ae321.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ae321/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */

int main(int argc, char** argv)
{
  (void)argv;
#ifndef RAND_screen
  return ((int*)(&RAND_screen))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the RAND_egd exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0f099/fast && /usr/bin/make -f CMakeFiles/cmTC_0f099.dir/build.make CMakeFiles/cmTC_0f099.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0f099.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0f099.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: error: ‘RAND_egd’ undeclared (first use in this function)
    7 |   return ((int*)(&RAND_egd))[argc];
      |                   ^~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_0f099.dir/build.make:66: CMakeFiles/cmTC_0f099.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0f099/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */

int main(int argc, char** argv)
{
  (void)argv;
#ifndef RAND_egd
  return ((int*)(&RAND_egd))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the function dlopen exists in the dl;/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so;cmnghttp2 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6a12e/fast && /usr/bin/make -f CMakeFiles/cmTC_6a12e.dir/build.make CMakeFiles/cmTC_6a12e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6a12e.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=dlopen   -std=gnu11 -o CMakeFiles/cmTC_6a12e.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_6a12e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6a12e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=dlopen    CMakeFiles/cmTC_6a12e.dir/CheckFunctionExists.c.o  -o cmTC_6a12e  -ldl /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so -lcmnghttp2 
/usr/bin/ld: cannot find -lcmnghttp2
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_6a12e.dir/build.make:89: cmTC_6a12e] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6a12e/fast] Error 2



Determining if files stdio.h;inttypes.h;sys/filio.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e364a/fast && /usr/bin/make -f CMakeFiles/cmTC_e364a.dir/build.make CMakeFiles/cmTC_e364a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e364a.dir/HAVE_SYS_FILIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e364a.dir/HAVE_SYS_FILIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_FILIO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_FILIO_H.c:4:10: fatal error: sys/filio.h: No such file or directory
    4 | #include <sys/filio.h>
      |          ^~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_e364a.dir/build.make:66: CMakeFiles/cmTC_e364a.dir/HAVE_SYS_FILIO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e364a/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/filio.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/sockio.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6d8df/fast && /usr/bin/make -f CMakeFiles/cmTC_6d8df.dir/build.make CMakeFiles/cmTC_6d8df.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6d8df.dir/HAVE_SYS_SOCKIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_6d8df.dir/HAVE_SYS_SOCKIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SOCKIO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SOCKIO_H.c:10:10: fatal error: sys/sockio.h: No such file or directory
   10 | #include <sys/sockio.h>
      |          ^~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_6d8df.dir/build.make:66: CMakeFiles/cmTC_6d8df.dir/HAVE_SYS_SOCKIO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6d8df/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/sockio.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/utime.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d817a/fast && /usr/bin/make -f CMakeFiles/cmTC_d817a.dir/build.make CMakeFiles/cmTC_d817a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d817a.dir/HAVE_SYS_UTIME_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d817a.dir/HAVE_SYS_UTIME_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UTIME_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UTIME_H.c:15:10: fatal error: sys/utime.h: No such file or directory
   15 | #include <sys/utime.h>
      |          ^~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_d817a.dir/build.make:66: CMakeFiles/cmTC_d817a.dir/HAVE_SYS_UTIME_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d817a/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/utime.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;crypto.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7c3b8/fast && /usr/bin/make -f CMakeFiles/cmTC_7c3b8.dir/build.make CMakeFiles/cmTC_7c3b8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7c3b8.dir/HAVE_CRYPTO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_7c3b8.dir/HAVE_CRYPTO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_CRYPTO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_CRYPTO_H.c:20:10: fatal error: crypto.h: No such file or directory
   20 | #include <crypto.h>
      |          ^~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_7c3b8.dir/build.make:66: CMakeFiles/cmTC_7c3b8.dir/HAVE_CRYPTO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7c3b8/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <crypto.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;idn2.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_274df/fast && /usr/bin/make -f CMakeFiles/cmTC_274df.dir/build.make CMakeFiles/cmTC_274df.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_274df.dir/HAVE_IDN2_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_274df.dir/HAVE_IDN2_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IDN2_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IDN2_H.c:23:10: fatal error: idn2.h: No such file or directory
   23 | #include <idn2.h>
      |          ^~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_274df.dir/build.make:66: CMakeFiles/cmTC_274df.dir/HAVE_IDN2_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_274df/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <idn2.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;io.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_97704/fast && /usr/bin/make -f CMakeFiles/cmTC_97704.dir/build.make CMakeFiles/cmTC_97704.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_97704.dir/HAVE_IO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_97704.dir/HAVE_IO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IO_H.c:24:10: fatal error: io.h: No such file or directory
   24 | #include <io.h>
      |          ^~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_97704.dir/build.make:66: CMakeFiles/cmTC_97704.dir/HAVE_IO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_97704/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <io.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;krb.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0aa06/fast && /usr/bin/make -f CMakeFiles/cmTC_0aa06.dir/build.make CMakeFiles/cmTC_0aa06.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0aa06.dir/HAVE_KRB_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0aa06.dir/HAVE_KRB_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_KRB_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_KRB_H.c:24:10: fatal error: krb.h: No such file or directory
   24 | #include <krb.h>
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_0aa06.dir/build.make:66: CMakeFiles/cmTC_0aa06.dir/HAVE_KRB_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0aa06/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <krb.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;pem.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_87ef2/fast && /usr/bin/make -f CMakeFiles/cmTC_87ef2.dir/build.make CMakeFiles/cmTC_87ef2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_87ef2.dir/HAVE_PEM_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_87ef2.dir/HAVE_PEM_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PEM_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PEM_H.c:30:10: fatal error: pem.h: No such file or directory
   30 | #include <pem.h>
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_87ef2.dir/build.make:66: CMakeFiles/cmTC_87ef2.dir/HAVE_PEM_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_87ef2/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <pem.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;rsa.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_93fd2/fast && /usr/bin/make -f CMakeFiles/cmTC_93fd2.dir/build.make CMakeFiles/cmTC_93fd2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_93fd2.dir/HAVE_RSA_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_93fd2.dir/HAVE_RSA_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_RSA_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_RSA_H.c:32:10: fatal error: rsa.h: No such file or directory
   32 | #include <rsa.h>
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_93fd2.dir/build.make:66: CMakeFiles/cmTC_93fd2.dir/HAVE_RSA_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_93fd2/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <rsa.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;ssl.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5aa7e/fast && /usr/bin/make -f CMakeFiles/cmTC_5aa7e.dir/build.make CMakeFiles/cmTC_5aa7e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5aa7e.dir/HAVE_SSL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5aa7e.dir/HAVE_SSL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SSL_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SSL_H.c:35:10: fatal error: ssl.h: No such file or directory
   35 | #include <ssl.h>
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_5aa7e.dir/build.make:66: CMakeFiles/cmTC_5aa7e.dir/HAVE_SSL_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5aa7e/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <ssl.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;stropts.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5e6cf/fast && /usr/bin/make -f CMakeFiles/cmTC_5e6cf.dir/build.make CMakeFiles/cmTC_5e6cf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5e6cf.dir/HAVE_STROPTS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5e6cf.dir/HAVE_STROPTS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STROPTS_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STROPTS_H.c:41:10: fatal error: stropts.h: No such file or directory
   41 | #include <stropts.h>
      |          ^~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_5e6cf.dir/build.make:66: CMakeFiles/cmTC_5e6cf.dir/HAVE_STROPTS_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5e6cf/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <stropts.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;x509.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_24f68/fast && /usr/bin/make -f CMakeFiles/cmTC_24f68.dir/build.make CMakeFiles/cmTC_24f68.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_24f68.dir/HAVE_X509_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_24f68.dir/HAVE_X509_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_X509_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_X509_H.c:46:10: fatal error: x509.h: No such file or directory
   46 | #include <x509.h>
      |          ^~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_24f68.dir/build.make:66: CMakeFiles/cmTC_24f68.dir/HAVE_X509_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_24f68/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <termio.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <x509.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;process.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e07ad/fast && /usr/bin/make -f CMakeFiles/cmTC_e07ad.dir/build.make CMakeFiles/cmTC_e07ad.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e07ad.dir/HAVE_PROCESS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e07ad.dir/HAVE_PROCESS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PROCESS_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PROCESS_H.c:46:10: fatal error: process.h: No such file or directory
   46 | #include <process.h>
      |          ^~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_e07ad.dir/build.make:66: CMakeFiles/cmTC_e07ad.dir/HAVE_PROCESS_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e07ad/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <termio.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <process.h>


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h;stdint.h;sockio.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_522a5/fast && /usr/bin/make -f CMakeFiles/cmTC_522a5.dir/build.make CMakeFiles/cmTC_522a5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_522a5.dir/HAVE_SOCKIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_522a5.dir/HAVE_SOCKIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SOCKIO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SOCKIO_H.c:52:10: fatal error: sockio.h: No such file or directory
   52 | #include <sockio.h>
      |          ^~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_522a5.dir/build.make:66: CMakeFiles/cmTC_522a5.dir/HAVE_SOCKIO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_522a5/fast] Error 2


Source:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <termio.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <stddef.h>
#include <dlfcn.h>
#include <malloc.h>
#include <memory.h>
#include <netinet/if_ether.h>
#include <stdint.h>
#include <sockio.h>


int main(void){return 0;}

Determining if the stricmp exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b0d01/fast && /usr/bin/make -f CMakeFiles/cmTC_b0d01.dir/build.make CMakeFiles/cmTC_b0d01.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b0d01.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_b0d01.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘stricmp’ undeclared (first use in this function); did you mean ‘strncmp’?
   58 |   return ((int*)(&stricmp))[argc];
      |                   ^~~~~~~
      |                   strncmp
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_b0d01.dir/build.make:66: CMakeFiles/cmTC_b0d01.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b0d01/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <termio.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <stddef.h>
#include <dlfcn.h>
#include <malloc.h>
#include <memory.h>
#include <netinet/if_ether.h>
#include <stdint.h>
#include <sys/utsname.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef stricmp
  return ((int*)(&stricmp))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strcmpi exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_560e5/fast && /usr/bin/make -f CMakeFiles/cmTC_560e5.dir/build.make CMakeFiles/cmTC_560e5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_560e5.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_560e5.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘strcmpi’ undeclared (first use in this function); did you mean ‘strcmp’?
   58 |   return ((int*)(&strcmpi))[argc];
      |                   ^~~~~~~
      |                   strcmp
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_560e5.dir/build.make:66: CMakeFiles/cmTC_560e5.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_560e5/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/un.h>
#include <sys/xattr.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <arpa/tftp.h>
#include <assert.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <ifaddrs.h>
#include <libgen.h>
#include <locale.h>
#include <net/if.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <poll.h>
#include <pwd.h>
#include <setjmp.h>
#include <sgtty.h>
#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <termio.h>
#include <termios.h>
#include <time.h>
#include <unistd.h>
#include <utime.h>
#include <stddef.h>
#include <dlfcn.h>
#include <malloc.h>
#include <memory.h>
#include <netinet/if_ether.h>
#include <stdint.h>
#include <sys/utsname.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strcmpi
  return ((int*)(&strcmpi))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strncmpi exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5e384/fast && /usr/bin/make -f CMakeFiles/cmTC_5e384.dir/build.make CMakeFiles/cmTC_5e384.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5e384.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5e384.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘strncmpi’ undeclared (first use in this function); did you mean ‘strncmp’?
   58 |   return ((int*)(&strncmpi))[argc];
      |                   ^~~~~~~~
      |                   strncmp
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_5e384.dir/build.make:66: CMakeFiles/cmTC_5e384.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5e384/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <inttypes.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/poll.h>
#include <sys/resource.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"SystemInformationNew" end time: Mar 31 13:40 EDT
"SystemInformationNew" time elapsed: 00:00:00
----------------------------------------------------------

2/609 Testing: kwsys.testEncode
2/609 Test: kwsys.testEncode
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsC" "testEncode"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testEncode" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
md5sum 1: expected [8f146af46ed4f267921bb937d4d3500c]
               got [8f146af46ed4f267921bb937d4d3500c]
md5sum 2: expected [a2ad137b746138fae4e5adca9c85d3ae]
               got [a2ad137b746138fae4e5adca9c85d3ae]
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testEncode" end time: Mar 31 13:40 EDT
"kwsys.testEncode" time elapsed: 00:00:00
----------------------------------------------------------

3/609 Testing: kwsys.testTerminal
3/609 Test: kwsys.testTerminal
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsC" "testTerminal"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testTerminal" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Hello World!
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testTerminal" end time: Mar 31 13:40 EDT
"kwsys.testTerminal" time elapsed: 00:00:00
----------------------------------------------------------

4/609 Testing: kwsys.testConfigure
4/609 Test: kwsys.testConfigure
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testConfigure"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testConfigure" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testConfigure" end time: Mar 31 13:40 EDT
"kwsys.testConfigure" time elapsed: 00:00:00
----------------------------------------------------------

5/609 Testing: kwsys.testSystemTools
5/609 Test: kwsys.testSystemTools
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testSystemTools"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testSystemTools" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testSystemTools" end time: Mar 31 13:40 EDT
"kwsys.testSystemTools" time elapsed: 00:00:00
----------------------------------------------------------

6/609 Testing: kwsys.testCommandLineArguments
6/609 Test: kwsys.testCommandLineArguments
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testCommandLineArguments" "--another-bool-variable" "--long3=opt" "--set-bool-arg1" "-SSS" "ken" "brad" "bill" "andy" "--some-bool-variable=true" "--some-double-variable12.5" "--some-int-variable" "14" "--some-string-variable=test string with space" "--some-multi-argument" "5" "1" "8" "3" "7" "1" "3" "9" "7" "1" "-N" "12.5" "-SS=andy" "-N" "1.31" "-N" "22" "-SS=bill" "-BBtrue" "-SS=brad" "-BBtrue" "-BBfalse" "-SS=ken" "-A" "-C=test" "--long2" "hello"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testCommandLineArguments" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Got argument: "--long3" value: "opt"
Got argument: "-A" value: "(null)"
Got argument: "-C" value: "test"
Got argument: "--long2" value: "hello"
Help: 
  --another-bool-variable  Set some random bool variable 1

  --long3=opt  Same as -C but a bit different

  --set-bool-arg1  Test AddBooleanArgument 1

  --set-bool-arg2  Test AddBooleanArgument 2

  --some-bool-variable=opt  Set some random bool variable

  --some-double-variableopt  Set some random double variable

  --some-int-variable opt  Set some random int variable

  --some-multi-argument opt opt   Some multiple values variable

  --some-stl-string-variable=opt  Set some random stl string variable

  --some-string-variable=opt  Set some random string variable

  --long1  
  -A  Some option -A. This option has a multiline
                                  comment. It should demonstrate how the code
                                  splits lines.

  --long2 opt  
  -B opt  Option -B takes argument with space

  -BBopt  Some explicit multiple values variable

  --long4opt  
  -C=opt  Option -C takes argument after =

  -Dopt  This option takes concatenated argument

  -N opt  Some explicit multiple values variable

  -SS=opt  Some explicit multiple values variable

  -SSS opt opt ...  Some explicit multiple values variable

Some int variable was set to: 14
Some double variable was set to: 12.5
Some string variable was set to: test string with space
numbers_argument argument set: 5 1 8 3 7 1 3 9 7 1
doubles_argument argument set: 12.5 1.31 22
bools_argument argument set: 1 1 0
strings_argument argument set: andy bill brad ken
stl_strings_argument argument set: ken brad bill andy
Some STL String variable was set to: 
Some bool variable was set to: 1
Some bool variable was set to: 1
bool_arg1 variable was set to: 1
bool_arg2 variable was set to: 0

<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testCommandLineArguments" end time: Mar 31 13:40 EDT
"kwsys.testCommandLineArguments" time elapsed: 00:00:00
----------------------------------------------------------

7/609 Testing: kwsys.testCommandLineArguments1
7/609 Test: kwsys.testCommandLineArguments1
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testCommandLineArguments1" "--ignored" "-n" "24" "--second-ignored" "-m=test value" "third-ignored" "-p" "some" "junk" "at" "the" "end"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testCommandLineArguments1" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Value of N: 24
Value of M: test value
Value of P: 1
Unused argument[0] = [testCommandLineArguments1]
Unused argument[1] = [--ignored]
Unused argument[2] = [--second-ignored]
Unused argument[3] = [third-ignored]
Unused argument[4] = [some]
Unused argument[5] = [junk]
Unused argument[6] = [at]
Unused argument[7] = [the]
Unused argument[8] = [end]
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testCommandLineArguments1" end time: Mar 31 13:40 EDT
"kwsys.testCommandLineArguments1" time elapsed: 00:00:00
----------------------------------------------------------

8/609 Testing: kwsys.testDirectory
8/609 Test: kwsys.testDirectory
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testDirectory"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testDirectory" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testDirectory" end time: Mar 31 13:40 EDT
"kwsys.testDirectory" time elapsed: 00:00:00
----------------------------------------------------------

9/609 Testing: kwsys.testEncoding
9/609 Test: kwsys.testEncoding
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testEncoding"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testEncoding" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Locale: en_US.UTF-8
Hello World
こんにちは世界
مرحبا العالم
העלא וועלט
привет мир
Mundus salve
hujambo Dunia
Halló heimur
'ab c' (4)
'd  e' (4)
' f' (2)
'  gh' (4)
'ij ' (3)
'k  ' (3)
'    lmn    ' (11)
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testEncoding" end time: Mar 31 13:40 EDT
"kwsys.testEncoding" time elapsed: 00:00:00
----------------------------------------------------------

10/609 Testing: kwsys.testFStream
10/609 Test: kwsys.testFStream
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testFStream"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testFStream" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testFStream" end time: Mar 31 13:40 EDT
"kwsys.testFStream" time elapsed: 00:00:00
----------------------------------------------------------

11/609 Testing: kwsys.testConsoleBuf
11/609 Test: kwsys.testConsoleBuf
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testConsoleBuf"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testConsoleBuf" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testConsoleBuf" end time: Mar 31 13:40 EDT
"kwsys.testConsoleBuf" time elapsed: 00:00:00
----------------------------------------------------------

12/609 Testing: kwsys.testSystemInformation
12/609 Test: kwsys.testSystemInformation
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testSystemInformation"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testSystemInformation" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
CTEST_FULL_OUTPUT
GetOSName: Linux
GetOSIsLinux: 1
GetOSIsApple: 0
GetOSIsWindows: 0
GetHostname: zachary-Blade
GetFullyQualifiedDomainName: zachary-Blade
GetOSRelease: 5.8.0-45-generic
GetOSVersion: #51~20.04.1-Ubuntu SMP Tue Feb 23 13:46:31 UTC 2021
GetOSPlatform: x86_64
Is64Bits: 1
GetVendorString: GenuineIntel
GetVendorID: Intel Corporation
GetTypeID: 0
GetFamilyID: 6
GetModelID: 158
GetExtendedProcessorName: Unknown P6 family
GetSteppingCode: 9
GetProcessorSerialNumber: 
GetProcessorCacheSize: 6144 KB
GetLogicalProcessorsPerPhysical: 2
GetProcessorClockFrequency: 3618.07 MHz
GetNumberOfLogicalCPU: 8
GetNumberOfPhysicalCPU: 4
DoesCPUSupportCPUID: 0
GetProcessorAPICID: 0
GetTotalVirtualMemory: 1052 MB
GetAvailableVirtualMemory: 1052 MB
GetTotalPhysicalMemory: 15905 MB
GetAvailablePhysicalMemory: 13072 MB
GetHostMemoryTotal(): 16287332 KiB
GetHostMemoryAvailable("KWSHL"): 16287332 KiB
GetProcMemoryAvailable("KWSHL", "KWSPL"): 16287332 KiB
GetHostMemoryUsed(): 3416956 KiB
GetProcMemoryUsed(): 4644 KiB
GetLoadAverage: 1.29
CPU feature 0
CPU feature 2
CPU feature 3
CPU feature 10
CPU feature 13
CPU feature 14
CPU feature 15
CPU feature 16
CPU feature 17
CPU feature 18
CPU feature 23
Program Stack:
WARNING: The stack trace will not use advanced capabilities because this is a release build.
0x55eb610b619c : cmsys::SystemInformationImplementation::GetProgramStack[abi:cxx11](int, int) [(cmsysTestsCxx) ???:-1]
0x55eb610b0c71 : cmsys::SystemInformation::GetProgramStack[abi:cxx11](int, int) [(cmsysTestsCxx) ???:-1]
0x55eb6109253e : testSystemInformation(int, char**) [(cmsysTestsCxx) ???:-1]
0x55eb610807e3 : main [(cmsysTestsCxx) ???:-1]
0x7f376241d0b3 : __libc_start_main [(libc.so.6) ???:-1]
0x55eb610803de : _start [(cmsysTestsCxx) ???:-1]


<end of output>
Test time =   0.24 sec
----------------------------------------------------------
Test Passed.
"kwsys.testSystemInformation" end time: Mar 31 13:40 EDT
"kwsys.testSystemInformation" time elapsed: 00:00:00
----------------------------------------------------------

13/609 Testing: kwsys.testDynamicLoader
13/609 Test: kwsys.testDynamicLoader
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestsCxx" "testDynamicLoader"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testDynamicLoader" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Testing: azerty_
Testing: /home/zachary/cmake/Source/kwsys/testSystemTools.bin
Testing: foobar.lib
Testing: libdl.so
Testing: libdl.so
Testing: /home/zachary/oss/labs/lab-08/build/Source/kwsys/libcmsysTestDynload.so
Testing: /home/zachary/oss/labs/lab-08/build/Source/kwsys/libcmsysTestDynload.so
Testing: /home/zachary/oss/labs/lab-08/build/Source/kwsys/libcmsysTestDynload.so
Testing: /home/zachary/oss/labs/lab-08/build/Source/kwsys/libcmsysTestDynload.so
Testing: /home/zachary/oss/labs/lab-08/build/Source/kwsys/libcmsysTestDynload.so
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"kwsys.testDynamicLoader" end time: Mar 31 13:40 EDT
"kwsys.testDynamicLoader" time elapsed: 00:00:00
----------------------------------------------------------

14/609 Testing: kwsys.testProcess-1
14/609 Test: kwsys.testProcess-1
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "1"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-1" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Output on stderr before test 1.
Output on stdout before test 1.
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Output on stderr after test 1.
Subprocess exited with value = 0
Output on stdout after test 1.
<end of output>
Test time =   0.13 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-1" end time: Mar 31 13:40 EDT
"kwsys.testProcess-1" time elapsed: 00:00:00
----------------------------------------------------------

15/609 Testing: kwsys.testProcess-2
15/609 Test: kwsys.testProcess-2
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "2"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-2" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Output on stderr before test 2.
Output on stdout before test 2.
Output on stdout from test returning 123.
Output on stderr from test returning 123.
Output on stderr after test 2.
Subprocess exited with value = 123
Output on stdout after test 2.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-2" end time: Mar 31 13:40 EDT
"kwsys.testProcess-2" time elapsed: 00:00:00
----------------------------------------------------------

16/609 Testing: kwsys.testProcess-3
16/609 Test: kwsys.testProcess-3
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "3"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-3" start time: Mar 31 13:40 EDT
Output:
----------------------------------------------------------
Output on stderr before test 3.
Output on stdout before test 3.
Output before sleep on stdout from timeout test.
Output before sleep on stderr from timeout test.
Output on stderr after test 3.
Subprocess was killed when timeout expired.
Output on stdout after test 3.
<end of output>
Test time =  10.02 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-3" end time: Mar 31 13:41 EDT
"kwsys.testProcess-3" time elapsed: 00:00:10
----------------------------------------------------------

17/609 Testing: kwsys.testProcess-4
17/609 Test: kwsys.testProcess-4
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "4"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-4" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Output on stderr before test 4.
Output on stdout before test 4.
Output before crash on stdout from crash test.
Output before crash on stderr from crash test.
Output on stderr after test 4.
Subprocess terminated abnormally: Segmentation fault
Output on stdout after test 4.
<end of output>
Test time =   0.11 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-4" end time: Mar 31 13:41 EDT
"kwsys.testProcess-4" time elapsed: 00:00:00
----------------------------------------------------------

18/609 Testing: kwsys.testProcess-5
18/609 Test: kwsys.testProcess-5
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "5"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-5" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Output on stderr before test 5.
Output on stdout before test 5.
Output on stdout before recursive test.
Output on stderr before recursive test.
Output before crash on stdout from crash test.
Output before crash on stderr from crash test.
Subprocess terminated abnormally: Segmentation fault
Output on stdout after recursive test.
Output on stderr after recursive test.
Output on stderr after test 5.
Subprocess exited with value = 0
Output on stdout after test 5.
<end of output>
Test time =   0.11 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-5" end time: Mar 31 13:41 EDT
"kwsys.testProcess-5" time elapsed: 00:00:00
----------------------------------------------------------

19/609 Testing: kwsys.testProcess-6
19/609 Test: kwsys.testProcess-6
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "6"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-6" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Output on stderr before test 6.
Output on stdout before test 6.
Output on stderr after test 6.
Subprocess was killed when timeout expired.
Output on stdout after test 6.
<end of output>
Test time =  10.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-6" end time: Mar 31 13:41 EDT
"kwsys.testProcess-6" time elapsed: 00:00:10
----------------------------------------------------------

20/609 Testing: kwsys.testProcess-9
20/609 Test: kwsys.testProcess-9
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "9"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-9" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Output on stderr before test 9.
Output on stdout before test 9.
Output on stderr before grandchild test.
Output on stdout before grandchild test.
Output on stderr from grandchild before sleep.
Output on stdout from grandchild before sleep.
Output on stderr after test 9.
Subprocess was killed when timeout expired.
Output on stdout after test 9.
<end of output>
Test time =   6.02 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-9" end time: Mar 31 13:41 EDT
"kwsys.testProcess-9" time elapsed: 00:00:06
----------------------------------------------------------

21/609 Testing: kwsys.testProcess-10
21/609 Test: kwsys.testProcess-10
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestProcess" "10"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testProcess-10" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Output on stderr before test 10.
Output on stdout before test 10.
Output on stderr before grandchild test.
Output on stdout before grandchild test.
Output on stderr from grandchild before sleep.
Output on stdout from grandchild before sleep.
Output on stderr after test 10.
Subprocess terminated abnormally: User interrupt
Output on stdout after test 10.
<end of output>
Test time =   2.00 sec
----------------------------------------------------------
Test Passed.
"kwsys.testProcess-10" end time: Mar 31 13:41 EDT
"kwsys.testProcess-10" time elapsed: 00:00:02
----------------------------------------------------------

22/609 Testing: kwsys.testSharedForward
22/609 Test: kwsys.testSharedForward
Command: "/home/zachary/oss/labs/lab-08/build/Source/kwsys/cmsysTestSharedForward" "1"
Directory: /home/zachary/oss/labs/lab-08/build/Source/kwsys
"kwsys.testSharedForward" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Output on stderr before test 1.
Output on stdout before test 1.
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stdout from test returning 0.
Output on stderr from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Subprocess exited with value = 0
Output on stderr from test returning 0.
Output on stdout from test returning 0.
Output on stderr after test 1.
Subprocess exited with value = 0
Output on stdout after test 1.
<end of output>
Test time =   0.16 sec
----------------------------------------------------------
Test Passed.
"kwsys.testSharedForward" end time: Mar 31 13:41 EDT
"kwsys.testSharedForward" time elapsed: 00:00:00
----------------------------------------------------------

23/609 Testing: kwiml.test
23/609 Test: kwiml.test
Command: "/home/zachary/oss/labs/lab-08/build/Utilities/KWIML/test/kwiml_test"
Directory: /home/zachary/oss/labs/lab-08/build/Utilities/KWIML/test
"kwiml.test" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
C KWIML_ABI_ENDIAN_ID: expected [1234], got [1234], PASSED
C KWIML_INT_PRIi8: expected [-85], got [-85], PASSED
C KWIML_INT_SCNi8: expected [-85], got [-85], PASSED
C KWIML_INT_PRId8: expected [-85], got [-85], PASSED
C KWIML_INT_SCNd8: expected [-85], got [-85], PASSED
C KWIML_INT_PRIo8: expected [253], got [253], PASSED
C KWIML_INT_SCNo8: expected [253], got [253], PASSED
C KWIML_INT_PRIu8: expected [171], got [171], PASSED
C KWIML_INT_SCNu8: expected [171], got [171], PASSED
C KWIML_INT_PRIx8: expected [ab], got [ab], PASSED
C KWIML_INT_PRIX8: expected [AB], got [AB], PASSED
C KWIML_INT_SCNx8: expected [ab], got [ab], PASSED
C KWIML_INT_SCNx8: expected [AB], got [AB], PASSED
C KWIML_INT_PRIi16: expected [-21760], got [-21760], PASSED
C KWIML_INT_SCNi16: expected [-21760], got [-21760], PASSED
C KWIML_INT_PRId16: expected [-21760], got [-21760], PASSED
C KWIML_INT_SCNd16: expected [-21760], got [-21760], PASSED
C KWIML_INT_PRIo16: expected [125400], got [125400], PASSED
C KWIML_INT_SCNo16: expected [125400], got [125400], PASSED
C KWIML_INT_PRIu16: expected [43776], got [43776], PASSED
C KWIML_INT_SCNu16: expected [43776], got [43776], PASSED
C KWIML_INT_PRIx16: expected [ab00], got [ab00], PASSED
C KWIML_INT_SCNx16: expected [ab00], got [ab00], PASSED
C KWIML_INT_PRIX16: expected [AB00], got [AB00], PASSED
C KWIML_INT_SCNx16: expected [AB00], got [AB00], PASSED
C KWIML_INT_PRIi32: expected [-1426063360], got [-1426063360], PASSED
C KWIML_INT_SCNi32: expected [-1426063360], got [-1426063360], PASSED
C KWIML_INT_PRId32: expected [-1426063360], got [-1426063360], PASSED
C KWIML_INT_SCNd32: expected [-1426063360], got [-1426063360], PASSED
C KWIML_INT_PRIo32: expected [25300000000], got [25300000000], PASSED
C KWIML_INT_SCNo32: expected [25300000000], got [25300000000], PASSED
C KWIML_INT_PRIu32: expected [2868903936], got [2868903936], PASSED
C KWIML_INT_SCNu32: expected [2868903936], got [2868903936], PASSED
C KWIML_INT_PRIx32: expected [ab000000], got [ab000000], PASSED
C KWIML_INT_SCNx32: expected [ab000000], got [ab000000], PASSED
C KWIML_INT_PRIX32: expected [AB000000], got [AB000000], PASSED
C KWIML_INT_SCNx32: expected [AB000000], got [AB000000], PASSED
C KWIML_INT_PRIi64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_SCNi64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_PRId64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_SCNd64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_PRIo64: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C KWIML_INT_SCNo64: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C KWIML_INT_PRIu64: expected [12321848580485677056], got [12321848580485677056], PASSED
C KWIML_INT_SCNu64: expected [12321848580485677056], got [12321848580485677056], PASSED
C KWIML_INT_PRIx64: expected [ab00000000000000], got [ab00000000000000], PASSED
C KWIML_INT_PRIX64: expected [AB00000000000000], got [AB00000000000000], PASSED
C KWIML_INT_SCNx64: expected [ab00000000000000], got [ab00000000000000], PASSED
C KWIML_INT_SCNx64: expected [AB00000000000000], got [AB00000000000000], PASSED
C KWIML_INT_PRIiPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_SCNiPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_PRIdPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_SCNdPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C KWIML_INT_PRIoPTR: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C KWIML_INT_SCNoPTR: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C KWIML_INT_PRIuPTR: expected [12321848580485677056], got [12321848580485677056], PASSED
C KWIML_INT_SCNuPTR: expected [12321848580485677056], got [12321848580485677056], PASSED
C KWIML_INT_PRIxPTR: expected [ab00000000000000], got [ab00000000000000], PASSED
C KWIML_INT_SCNxPTR: expected [ab00000000000000], got [ab00000000000000], PASSED
C KWIML_INT_PRIXPTR: expected [AB00000000000000], got [AB00000000000000], PASSED
C KWIML_INT_SCNxPTR: expected [AB00000000000000], got [AB00000000000000], PASSED
C KWIML_INT_INT8_C: expression [-85], literal [-85], PASSED
C KWIML_INT_UINT8_C: expression [171], literal [171], PASSED
C KWIML_INT_INT16_C: expression [-21760], literal [-21760], PASSED
C KWIML_INT_UINT16_C: expression [43776], literal [43776], PASSED
C KWIML_INT_INT32_C: expression [-1426063360], literal [-1426063360], PASSED
C KWIML_INT_UINT32_C: expression [2868903936], literal [2868903936], PASSED
C KWIML_INT_INT64_C: expression [-6124895493223874560], literal [-6124895493223874560], PASSED
C KWIML_INT_UINT64_C: expression [12321848580485677056], literal [12321848580485677056], PASSED
C++ KWIML_ABI_ENDIAN_ID: expected [1234], got [1234], PASSED
C++ KWIML_INT_PRIi8: expected [-85], got [-85], PASSED
C++ KWIML_INT_SCNi8: expected [-85], got [-85], PASSED
C++ KWIML_INT_PRId8: expected [-85], got [-85], PASSED
C++ KWIML_INT_SCNd8: expected [-85], got [-85], PASSED
C++ KWIML_INT_PRIo8: expected [253], got [253], PASSED
C++ KWIML_INT_SCNo8: expected [253], got [253], PASSED
C++ KWIML_INT_PRIu8: expected [171], got [171], PASSED
C++ KWIML_INT_SCNu8: expected [171], got [171], PASSED
C++ KWIML_INT_PRIx8: expected [ab], got [ab], PASSED
C++ KWIML_INT_PRIX8: expected [AB], got [AB], PASSED
C++ KWIML_INT_SCNx8: expected [ab], got [ab], PASSED
C++ KWIML_INT_SCNx8: expected [AB], got [AB], PASSED
C++ KWIML_INT_PRIi16: expected [-21760], got [-21760], PASSED
C++ KWIML_INT_SCNi16: expected [-21760], got [-21760], PASSED
C++ KWIML_INT_PRId16: expected [-21760], got [-21760], PASSED
C++ KWIML_INT_SCNd16: expected [-21760], got [-21760], PASSED
C++ KWIML_INT_PRIo16: expected [125400], got [125400], PASSED
C++ KWIML_INT_SCNo16: expected [125400], got [125400], PASSED
C++ KWIML_INT_PRIu16: expected [43776], got [43776], PASSED
C++ KWIML_INT_SCNu16: expected [43776], got [43776], PASSED
C++ KWIML_INT_PRIx16: expected [ab00], got [ab00], PASSED
C++ KWIML_INT_SCNx16: expected [ab00], got [ab00], PASSED
C++ KWIML_INT_PRIX16: expected [AB00], got [AB00], PASSED
C++ KWIML_INT_SCNx16: expected [AB00], got [AB00], PASSED
C++ KWIML_INT_PRIi32: expected [-1426063360], got [-1426063360], PASSED
C++ KWIML_INT_SCNi32: expected [-1426063360], got [-1426063360], PASSED
C++ KWIML_INT_PRId32: expected [-1426063360], got [-1426063360], PASSED
C++ KWIML_INT_SCNd32: expected [-1426063360], got [-1426063360], PASSED
C++ KWIML_INT_PRIo32: expected [25300000000], got [25300000000], PASSED
C++ KWIML_INT_SCNo32: expected [25300000000], got [25300000000], PASSED
C++ KWIML_INT_PRIu32: expected [2868903936], got [2868903936], PASSED
C++ KWIML_INT_SCNu32: expected [2868903936], got [2868903936], PASSED
C++ KWIML_INT_PRIx32: expected [ab000000], got [ab000000], PASSED
C++ KWIML_INT_SCNx32: expected [ab000000], got [ab000000], PASSED
C++ KWIML_INT_PRIX32: expected [AB000000], got [AB000000], PASSED
C++ KWIML_INT_SCNx32: expected [AB000000], got [AB000000], PASSED
C++ KWIML_INT_PRIi64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_SCNi64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_PRId64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_SCNd64: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_PRIo64: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C++ KWIML_INT_SCNo64: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C++ KWIML_INT_PRIu64: expected [12321848580485677056], got [12321848580485677056], PASSED
C++ KWIML_INT_SCNu64: expected [12321848580485677056], got [12321848580485677056], PASSED
C++ KWIML_INT_PRIx64: expected [ab00000000000000], got [ab00000000000000], PASSED
C++ KWIML_INT_PRIX64: expected [AB00000000000000], got [AB00000000000000], PASSED
C++ KWIML_INT_SCNx64: expected [ab00000000000000], got [ab00000000000000], PASSED
C++ KWIML_INT_SCNx64: expected [AB00000000000000], got [AB00000000000000], PASSED
C++ KWIML_INT_PRIiPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_SCNiPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_PRIdPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_SCNdPTR: expected [-6124895493223874560], got [-6124895493223874560], PASSED
C++ KWIML_INT_PRIoPTR: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C++ KWIML_INT_SCNoPTR: expected [1254000000000000000000], got [1254000000000000000000], PASSED
C++ KWIML_INT_PRIuPTR: expected [12321848580485677056], got [12321848580485677056], PASSED
C++ KWIML_INT_SCNuPTR: expected [12321848580485677056], got [12321848580485677056], PASSED
C++ KWIML_INT_PRIxPTR: expected [ab00000000000000], got [ab00000000000000], PASSED
C++ KWIML_INT_SCNxPTR: expected [ab00000000000000], got [ab00000000000000], PASSED
C++ KWIML_INT_PRIXPTR: expected [AB00000000000000], got [AB00000000000000], PASSED
C++ KWIML_INT_SCNxPTR: expected [AB00000000000000], got [AB00000000000000], PASSED
C++ KWIML_INT_INT8_C: expression [-85], literal [-85], PASSED
C++ KWIML_INT_UINT8_C: expression [171], literal [171], PASSED
C++ KWIML_INT_INT16_C: expression [-21760], literal [-21760], PASSED
C++ KWIML_INT_UINT16_C: expression [43776], literal [43776], PASSED
C++ KWIML_INT_INT32_C: expression [-1426063360], literal [-1426063360], PASSED
C++ KWIML_INT_UINT32_C: expression [2868903936], literal [2868903936], PASSED
C++ KWIML_INT_INT64_C: expression [-6124895493223874560], literal [-6124895493223874560], PASSED
C++ KWIML_INT_UINT64_C: expression [12321848580485677056], literal [12321848580485677056], PASSED
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"kwiml.test" end time: Mar 31 13:41 EDT
"kwiml.test" time elapsed: 00:00:00
----------------------------------------------------------

24/609 Testing: curl
24/609 Test: curl
Command: "/home/zachary/oss/labs/lab-08/build/Utilities/cmcurl/curltest" "http://open.cdash.org/user.php"
Directory: /home/zachary/oss/labs/lab-08/build/Utilities/cmcurl
"curl" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
*   Trying 66.194.253.26:80...
* Connected to open.cdash.org (66.194.253.26) port 80 (#0)
> GET /user.php HTTP/1.1
Host: open.cdash.org
Accept: */*

* Mark bundle as not supporting multiuse
< HTTP/1.1 301 Moved Permanently
< Date: Wed, 31 Mar 2021 17:41:21 GMT
< Server: Apache
< X-Frame-Options: SAMEORIGIN
< Location: https://open.cdash.org/user.php
< Content-Length: 239
< Content-Type: text/html; charset=iso-8859-1
< 
* Connection #0 to host open.cdash.org left intact
HTTP/1.1 301 Moved Permanently
Date: Wed, 31 Mar 2021 17:41:21 GMT
Server: Apache
X-Frame-Options: SAMEORIGIN
Location: https://open.cdash.org/user.php
Content-Length: 239
Content-Type: text/html; charset=iso-8859-1

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>301 Moved Permanently</title>
</head><body>
<h1>Moved Permanently</h1>
<p>The document has moved <a href="https://open.cdash.org/user.php">here</a>.</p>
</body></html>
<end of output>
Test time =   0.31 sec
----------------------------------------------------------
Test Passed.
"curl" end time: Mar 31 13:41 EDT
"curl" time elapsed: 00:00:00
----------------------------------------------------------

25/609 Testing: CMake.Copyright
25/609 Test: CMake.Copyright
Command: "/home/zachary/oss/labs/lab-08/build/bin/cmake" "-P" "/home/zachary/cmake/Tests/CMakeCopyright.cmake"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"CMake.Copyright" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
-- PASSED: Copyright.txt contains
 Copyright 2000-2021 Kitware, Inc. and Contributors
and the current version year is 2021.
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"CMake.Copyright" end time: Mar 31 13:41 EDT
"CMake.Copyright" time elapsed: 00:00:00
----------------------------------------------------------

26/609 Testing: CommandLineTest
26/609 Test: CommandLineTest
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/CommandLineTest" "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "CommandLineTest" "--build-options" "--test-command" "CommandLineTest"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"CommandLineTest" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E chdir "/home/zachary/cmake/Tests/CommandLineTest" "/home/zachary/oss/labs/lab-08/build/bin/cmake" -E echo "Hello World"  2>&1
Hello World
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -L /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002839 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -LA /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002818 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -LH /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002704 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -LAH /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002804 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help  2>&1
Usage

  cmake [options] <path-to-source>
  cmake [options] <path-to-existing-build>
  cmake [options] -S <path-to-source> -B <path-to-build>

Specify a source directory to (re-)generate a build system for it in the
current working directory.  Specify an existing build directory to
re-generate its build system.

Options
  -S <path-to-source>          = Explicitly specify a source directory.
  -B <path-to-build>           = Explicitly specify a build directory.
  -C <initial-cache>           = Pre-load a script to populate the cache.
  -D <var>[:<type>]=<value>    = Create or update a cmake cache entry.
  -U <globbing_expr>           = Remove matching entries from CMake cache.
  -G <generator-name>          = Specify a build system generator.
  -T <toolset-name>            = Specify toolset name if supported by
                                 generator.
  -A <platform-name>           = Specify platform name if supported by
                                 generator.
  --install-prefix <directory> = Specify install directory
                                 [CMAKE_INSTALL_PREFIX].
  -Wdev                        = Enable developer warnings.
  -Wno-dev                     = Suppress developer warnings.
  -Werror=dev                  = Make developer warnings errors.
  -Wno-error=dev               = Make developer warnings not errors.
  -Wdeprecated                 = Enable deprecation warnings.
  -Wno-deprecated              = Suppress deprecation warnings.
  -Werror=deprecated           = Make deprecated macro and function warnings
                                 errors.
  -Wno-error=deprecated        = Make deprecated macro and function warnings
                                 not errors.
  --preset <preset>,--preset=<preset>
                               = Specify a configure preset.
  --list-presets               = List available presets.
  -E                           = CMake command mode.
  -L[A][H]                     = List non-advanced cached variables.
  --build <dir>                = Build a CMake-generated project binary tree.
  --install <dir>              = Install a CMake-generated project binary
                                 tree.
  --open <dir>                 = Open generated project in the associated
                                 application.
  -N                           = View mode only.
  -P <file>                    = Process script mode.
  --find-package               = Legacy pkg-config like mode.  Do not use.
  --graphviz=[file]            = Generate graphviz of dependencies, see
                                 CMakeGraphVizOptions.cmake for more.
  --system-information [file]  = Dump information about this system.
  --log-level=<ERROR|WARNING|NOTICE|STATUS|VERBOSE|DEBUG|TRACE>
                               = Set the verbosity of messages from CMake
                                 files.  --loglevel is also accepted for
                                 backward compatibility reasons.
  --log-context                = Prepend log messages with context, if given
  --debug-trycompile           = Do not delete the try_compile build tree.
                                 Only useful on one try_compile at a time.
  --debug-output               = Put cmake in a debug mode.
  --debug-find                 = Put cmake find in a debug mode.
  --trace                      = Put cmake in trace mode.
  --trace-expand               = Put cmake in trace mode with variable
                                 expansion.
  --trace-format=<human|json-v1>
                               = Set the output format of the trace.
  --trace-source=<file>        = Trace only this CMake file/module.  Multiple
                                 options allowed.
  --trace-redirect=<file>      = Redirect trace output to a file instead of
                                 stderr.
  --warn-uninitialized         = Warn about uninitialized values.
  --no-warn-unused-cli         = Don't warn about command line options.
  --check-system-vars          = Find problems with variable usage in system
                                 files.
  --profiling-format=<fmt>     = Output data for profiling CMake scripts.
                                 Supported formats: google-trace
  --profiling-output=<file>    = Select an output path for the profiling data
                                 enabled through --profiling-format.
  --help,-help,-usage,-h,-H,/? = Print usage information and exit.
  --version,-version,/V [<f>]  = Print version number and exit.
  --help-full [<f>]            = Print all help manuals and exit.
  --help-manual <man> [<f>]    = Print one help manual and exit.
  --help-manual-list [<f>]     = List help manuals available and exit.
  --help-command <cmd> [<f>]   = Print help for one command and exit.
  --help-command-list [<f>]    = List commands with help available and exit.
  --help-commands [<f>]        = Print cmake-commands manual and exit.
  --help-module <mod> [<f>]    = Print help for one module and exit.
  --help-module-list [<f>]     = List modules with help available and exit.
  --help-modules [<f>]         = Print cmake-modules manual and exit.
  --help-policy <cmp> [<f>]    = Print help for one policy and exit.
  --help-policy-list [<f>]     = List policies with help available and exit.
  --help-policies [<f>]        = Print cmake-policies manual and exit.
  --help-property <prop> [<f>] = Print help for one property and exit.
  --help-property-list [<f>]   = List properties with help available and
                                 exit.
  --help-properties [<f>]      = Print cmake-properties manual and exit.
  --help-variable var [<f>]    = Print help for one variable and exit.
  --help-variable-list [<f>]   = List variables with help available and exit.
  --help-variables [<f>]       = Print cmake-variables manual and exit.

Generators

The following generators are available on this platform (* marks default):
  Green Hills MULTI            = Generates Green Hills MULTI files
                                 (experimental, work-in-progress).
* Unix Makefiles               = Generates standard UNIX makefiles.
  Ninja                        = Generates build.ninja files.
  Ninja Multi-Config           = Generates build-<Config>.ninja files.
  Watcom WMake                 = Generates Watcom WMake makefiles.
  CodeBlocks - Ninja           = Generates CodeBlocks project files.
  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.
  CodeLite - Ninja             = Generates CodeLite project files.
  CodeLite - Unix Makefiles    = Generates CodeLite project files.
  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.
  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.
  Kate - Ninja                 = Generates Kate project files.
  Kate - Unix Makefiles        = Generates Kate project files.
  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.
  Sublime Text 2 - Unix Makefiles
                               = Generates Sublime Text 2 project files.

running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-command-list  2>&1
add_compile_definitions
add_compile_options
add_custom_command
add_custom_target
add_definitions
add_dependencies
add_executable
add_library
add_link_options
add_subdirectory
add_test
aux_source_directory
break
build_command
build_name
cmake_host_system_information
cmake_language
cmake_minimum_required
cmake_parse_arguments
cmake_path
cmake_policy
configure_file
continue
create_test_sourcelist
ctest_build
ctest_configure
ctest_coverage
ctest_empty_binary_directory
ctest_memcheck
ctest_read_custom_files
ctest_run_script
ctest_sleep
ctest_start
ctest_submit
ctest_test
ctest_update
ctest_upload
define_property
else
elseif
enable_language
enable_testing
endforeach
endfunction
endif
endmacro
endwhile
exec_program
execute_process
export
export_library_dependencies
file
find_file
find_library
find_package
find_path
find_program
fltk_wrap_ui
foreach
function
get_cmake_property
get_directory_property
get_filename_component
get_property
get_source_file_property
get_target_property
get_test_property
if
include
include_directories
include_external_msproject
include_guard
include_regular_expression
install
install_files
install_programs
install_targets
link_directories
link_libraries
list
load_cache
load_command
macro
make_directory
mark_as_advanced
math
message
option
output_required_files
project
qt_wrap_cpp
qt_wrap_ui
remove
remove_definitions
return
separate_arguments
set
set_directory_properties
set_property
set_source_files_properties
set_target_properties
set_tests_properties
site_name
source_group
string
subdir_depends
subdirs
target_compile_definitions
target_compile_features
target_compile_options
target_include_directories
target_link_directories
target_link_libraries
target_link_options
target_precompile_headers
target_sources
try_compile
try_run
unset
use_mangled_mesa
utility_source
variable_requires
variable_watch
while
write_file
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help add_executable  2>&1
add_executable
--------------

Add an executable to the project using the specified source files.

Normal Executables
^^^^^^^^^^^^^^^^^^

 add_executable(<name> [WIN32] [MACOSX_BUNDLE]
                [EXCLUDE_FROM_ALL]
                [source1] [source2 ...])

Adds an executable target called ``<name>`` to be built from the source
files listed in the command invocation.  The
``<name>`` corresponds to the logical target name and must be globally
unique within a project.  The actual file name of the executable built is
constructed based on conventions of the native platform (such as
``<name>.exe`` or just ``<name>``).

By default the executable file will be created in the build tree
directory corresponding to the source tree directory in which the
command was invoked.  See documentation of the
``RUNTIME_OUTPUT_DIRECTORY`` target property to change this
location.  See documentation of the ``OUTPUT_NAME`` target property
to change the ``<name>`` part of the final file name.

If ``WIN32`` is given the property ``WIN32_EXECUTABLE`` will be
set on the target created.  See documentation of that target property for
details.

If ``MACOSX_BUNDLE`` is given the corresponding property will be set on
the created target.  See documentation of the ``MACOSX_BUNDLE``
target property for details.

If ``EXCLUDE_FROM_ALL`` is given the corresponding property will be set on
the created target.  See documentation of the ``EXCLUDE_FROM_ALL``
target property for details.

See the ``cmake-buildsystem(7)`` manual for more on defining
buildsystem properties.

See also ``HEADER_FILE_ONLY`` on what to do if some sources are
pre-processed, and you want to have the original sources reachable from
within IDE.

Imported Executables
^^^^^^^^^^^^^^^^^^^^

 add_executable(<name> IMPORTED [GLOBAL])

An :ref:`IMPORTED executable target <Imported Targets>` references an
executable file located outside the project.  No rules are generated to
build it, and the ``IMPORTED`` target property is ``True``.  The
target name has scope in the directory in which it is created and below, but
the ``GLOBAL`` option extends visibility.  It may be referenced like any
target built within the project.  ``IMPORTED`` executables are useful
for convenient reference from commands like ``add_custom_command()``.
Details about the imported executable are specified by setting properties
whose names begin in ``IMPORTED_``.  The most important such property is
``IMPORTED_LOCATION`` (and its per-configuration version
``IMPORTED_LOCATION_<CONFIG>``) which specifies the location of
the main executable file on disk.  See documentation of the ``IMPORTED_*``
properties for more information.

Alias Executables
^^^^^^^^^^^^^^^^^

 add_executable(<name> ALIAS <target>)

Creates an :ref:`Alias Target <Alias Targets>`, such that ``<name>`` can
be used to refer to ``<target>`` in subsequent commands.  The ``<name>``
does not appear in the generated buildsystem as a make target.  The
``<target>`` may not be an ``ALIAS``.

``ALIAS`` targets can be used as targets to read properties
from, executables for custom commands and custom targets.  They can also be
tested for existence with the regular ``if(TARGET)`` subcommand.
The ``<name>`` may not be used to modify properties of ``<target>``, that
is, it may not be used as the operand of ``set_property()``,
``set_target_properties()``, ``target_link_libraries()`` etc.
An ``ALIAS`` target may not be installed or exported.
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-command add_executable  2>&1
add_executable
--------------

Add an executable to the project using the specified source files.

Normal Executables
^^^^^^^^^^^^^^^^^^

 add_executable(<name> [WIN32] [MACOSX_BUNDLE]
                [EXCLUDE_FROM_ALL]
                [source1] [source2 ...])

Adds an executable target called ``<name>`` to be built from the source
files listed in the command invocation.  The
``<name>`` corresponds to the logical target name and must be globally
unique within a project.  The actual file name of the executable built is
constructed based on conventions of the native platform (such as
``<name>.exe`` or just ``<name>``).

By default the executable file will be created in the build tree
directory corresponding to the source tree directory in which the
command was invoked.  See documentation of the
``RUNTIME_OUTPUT_DIRECTORY`` target property to change this
location.  See documentation of the ``OUTPUT_NAME`` target property
to change the ``<name>`` part of the final file name.

If ``WIN32`` is given the property ``WIN32_EXECUTABLE`` will be
set on the target created.  See documentation of that target property for
details.

If ``MACOSX_BUNDLE`` is given the corresponding property will be set on
the created target.  See documentation of the ``MACOSX_BUNDLE``
target property for details.

If ``EXCLUDE_FROM_ALL`` is given the corresponding property will be set on
the created target.  See documentation of the ``EXCLUDE_FROM_ALL``
target property for details.

See the ``cmake-buildsystem(7)`` manual for more on defining
buildsystem properties.

See also ``HEADER_FILE_ONLY`` on what to do if some sources are
pre-processed, and you want to have the original sources reachable from
within IDE.

Imported Executables
^^^^^^^^^^^^^^^^^^^^

 add_executable(<name> IMPORTED [GLOBAL])

An :ref:`IMPORTED executable target <Imported Targets>` references an
executable file located outside the project.  No rules are generated to
build it, and the ``IMPORTED`` target property is ``True``.  The
target name has scope in the directory in which it is created and below, but
the ``GLOBAL`` option extends visibility.  It may be referenced like any
target built within the project.  ``IMPORTED`` executables are useful
for convenient reference from commands like ``add_custom_command()``.
Details about the imported executable are specified by setting properties
whose names begin in ``IMPORTED_``.  The most important such property is
``IMPORTED_LOCATION`` (and its per-configuration version
``IMPORTED_LOCATION_<CONFIG>``) which specifies the location of
the main executable file on disk.  See documentation of the ``IMPORTED_*``
properties for more information.

Alias Executables
^^^^^^^^^^^^^^^^^

 add_executable(<name> ALIAS <target>)

Creates an :ref:`Alias Target <Alias Targets>`, such that ``<name>`` can
be used to refer to ``<target>`` in subsequent commands.  The ``<name>``
does not appear in the generated buildsystem as a make target.  The
``<target>`` may not be an ``ALIAS``.

``ALIAS`` targets can be used as targets to read properties
from, executables for custom commands and custom targets.  They can also be
tested for existence with the regular ``if(TARGET)`` subcommand.
The ``<name>`` may not be used to modify properties of ``<target>``, that
is, it may not be used as the operand of ``set_property()``,
``set_target_properties()``, ``target_link_libraries()`` etc.
An ``ALIAS`` target may not be installed or exported.
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-full "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/cmake.txt"  2>&1
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-man "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/cmake.man"  2>&1
Warning: --help-man no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-html "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/cmake.html"  2>&1
Warning: --help-html no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/cmake --copyright "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/Copyright.txt"  2>&1
Warning: --copyright no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/cmake --version "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/version.txt"  2>&1
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: Simple
  Test  #36: PreOrder
  Test  #37: MissingSourceFile
  Test  #38: COnly
  Test  #39: CxxOnly
  Test  #40: CxxSubdirC
  Test  #41: OutDir
  Test  #42: OutName
  Test  #43: ObjectLibrary
  Test  #44: NewlineArgs
  Test  #45: SetLang
  Test  #46: EmptyProperty
  Test  #47: ExternalOBJ
  Test  #48: LoadCommand
  Test  #49: LinkDirectory
  Test  #50: LinkLanguage
  Test  #51: LinkLine
  Test  #52: MacroTest
  Test  #53: FunctionTest
  Test  #54: ReturnTest
  Test  #55: Properties
  Test  #56: Assembler
  Test  #57: SourceGroups
  Test  #58: Preprocess
  Test  #59: ExportImport
  Test  #60: Unset
  Test  #61: PolicyScope
  Test  #62: EmptyLibrary
  Test  #63: CompileDefinitions
  Test  #64: CompileOptions
  Test  #65: CompatibleInterface
  Test  #66: AliasTarget
  Test  #67: StagingPrefix
  Test  #68: ImportedSameName
  Test  #69: InterfaceLibrary
  Test  #70: ConfigSources
  Test  #71: SourcesProperty
  Test  #72: SourceFileProperty
  Test  #73: SourceFileIncludeDirProperty
  Test  #74: CxxDialect
  Test  #75: CrossCompile
  Test  #76: Policy0002
  Test  #77: BundleUtilities
  Test  #78: CMakeBuildTest
  Test  #79: CMakeDoubleProject
  Test  #80: Module.CheckTypeSize
  Test  #81: Module.CheckIPOSupported-C
  Test  #82: Module.CheckIPOSupported-CXX
  Test  #83: Module.ExternalData
  Test  #84: Module.FindDependency
  Test  #85: Module.WriteCompilerDetectionHeader
  Test  #86: PositionIndependentTargets
  Test  #87: Visibility
  Test  #88: LinkFlags-prepare
  Test  #89: LinkFlags-lib
  Test  #90: LinkFlags-dll
  Test  #91: LinkFlags-mod
  Test  #92: LinkFlags-exe
  Test  #93: LinkFlags-lib_config
  Test  #94: LinkFlags-dll_config
  Test  #95: LinkFlags-mod_config
  Test  #96: LinkFlags-exe_config
  Test  #97: LinkFlags-lib_flags
  Test  #98: LinkFlags-dll_flags
  Test  #99: LinkFlags-mod_flags
  Test #100: LinkFlags-exe_flags
  Test #101: LinkFlags-lib_flags_config
  Test #102: LinkFlags-dll_flags_config
  Test #103: LinkFlags-mod_flags_config
  Test #104: LinkFlags-exe_flags_config
  Test #105: Simple_CodeBlocksGenerator
  Test #106: Simple_CodeLiteGenerator
  Test #107: Simple_EclipseCDT4Generator
  Test #108: Simple_KateGenerator
  Test #109: Simple_SublimeText2Generator
  Test #110: SubProject
  Test #111: SubProject-Stage2
  Test #112: Framework
  Test #113: TargetName
  Test #114: LibName
  Test #115: CustComDepend
  Test #116: ArgumentExpansion
  Test #117: GeneratorExpression
  Test #118: CustomCommand
  Test #119: CustomCommandByproducts
  Test #120: CommandLength
  Test #121: EmptyDepends
  Test #122: CustomCommandWorkingDirectory
  Test #123: OutOfSource
  Test #124: BuildDepends
  Test #125: MissingInstall
  Test #126: CPackUseDefaultVersion
  Test #127: CPackUseProjectVersion
  Test #128: CPackUseShortProjectVersion
  Test #129: CPackComponents
  Test #130: CPackComponentsForAll-DEB-default
  Test #131: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #132: CPackComponentsForAll-DEB-IgnoreGroup
  Test #133: CPackComponentsForAll-DEB-AllInOne
  Test #134: CPackComponentsForAll-ZIP-default
  Test #135: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #136: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #137: CPackComponentsForAll-ZIP-AllInOne
  Test #138: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #139: CPackComponentsDEB-components-description1
  Test #140: CPackComponentsDEB-components-description2
  Test #141: CPackComponentsDEB-components-source
  Test #142: CPackComponentsDEB-components-shlibdeps1
  Test #143: CPackComponentsDEB-components-depend1
  Test #144: CPackComponentsDEB-components-depend2
  Test #145: CPackComponentsDEB-compression
  Test #146: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #147: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #148: CPackTestAllGenerators
  Test #149: CPackComponentsPrefix
  Test #150: X11
  Test #151: CMakeTestAllGenerators
  Test #152: LoadedCommandOneConfig
  Test #153: complex
  Test #154: complexOneConfig
  Test #155: Environment
  Test #156: QtAutomocNoQt
  Test #157: ExternalProject
  Test #158: ExternalProjectSubdir
  Test #159: ExternalProjectSourceSubdir
  Test #160: ExternalProjectSourceSubdirNotCMake
  Test #161: ExternalProjectLocal
  Test #162: ExternalProjectUpdateSetup
  Test #163: ExternalProjectUpdate
  Test #164: TutorialStep2
  Test #165: TutorialStep3
  Test #166: TutorialStep4
  Test #167: TutorialStep5
  Test #168: TutorialStep6
  Test #169: TutorialStep7
  Test #170: TutorialStep8
  Test #171: TutorialStep9
  Test #172: TutorialStep10
  Test #173: TutorialStep11
  Test #174: TutorialStep12
  Test #175: TutorialComplete
  Test #176: TutorialStep3_MYMATH
  Test #177: TutorialStep4_MYMATH
  Test #178: TutorialStep5_MYMATH
  Test #179: TutorialStep6_MYMATH
  Test #180: TutorialStep7_MYMATH
  Test #181: TutorialStep8_MYMATH
  Test #182: TutorialStep9_MYMATH
  Test #183: TutorialStep10_MYMATH
  Test #184: TutorialStep11_MYMATH
  Test #185: TutorialStep12_MYMATH
  Test #186: TutorialComplete_MYMATH
  Test #187: Guide.ImportExport.MyExe
  Test #188: Guide.ImportExport.Importing
  Test #189: Guide.ImportExport.MathFunctions
  Test #190: Guide.ImportExport.Downstream
  Test #191: Guide.ImportExport.MathFunctionsComponents
  Test #192: Guide.ImportExport.DownstreamComponents
  Test #193: testing
  Test #194: wrapping
  Test #195: qtwrapping
  Test #196: testdriver1
  Test #197: testdriver2
  Test #198: testdriver3
  Test #199: Dependency
  Test #200: JumpWithLibOut
  Test #201: JumpNoLibOut
  Test #202: Plugin
  Test #203: RuntimePath
  Test #204: linkorder1
  Test #205: linkorder2
  Test #206: SubDirSpaces
  Test #207: SubDir
  Test #208: CheckCompilerRelatedVariables
  Test #209: MakeClean
  Test #210: WarnUnusedCliUnused
  Test #211: WarnUnusedCliUsed
  Test #212: WarnUninitialized
  Test #213: TestsWorkingDirectory
  Test #214: CTest.NoNewline
  Test #215: CTest.BuildCommand.ProjectInSubdir
  Test #216: CTest.UpdateGIT
  Test #217: CTestTestNoBuild
  Test #218: CTestTestNoExe
  Test #219: CTestTestUpload
  Test #220: CTestCoverageCollectGCOV
  Test #221: CTestTestEmptyBinaryDirectory
  Test #222: CTestGTMCoverage
  Test #223: CTestCacheCoverage
  Test #224: CTestPythonCoverage
  Test #225: CTestCoberturaCoverage
  Test #226: CTestJacocoCoverage
  Test #227: CTestJavascriptCoverage
  Test #228: CTestDelphiCoverage
  Test #229: CTestConfig.Script.Debug
  Test #230: CTestConfig.Dashboard.Debug
  Test #231: CTestConfig.Script.MinSizeRel
  Test #232: CTestConfig.Dashboard.MinSizeRel
  Test #233: CTestConfig.Script.Release
  Test #234: CTestConfig.Dashboard.Release
  Test #235: CTestConfig.Script.RelWithDebInfo
  Test #236: CTestConfig.Dashboard.RelWithDebInfo
  Test #237: CTestConfig.ScriptWithArgs
  Test #238: CMakeCommands.add_compile_definitions
  Test #239: CMakeCommands.add_compile_options
  Test #240: CMakeCommands.target_link_libraries
  Test #241: CMakeCommands.target_include_directories
  Test #242: CMakeCommands.target_compile_definitions
  Test #243: CMakeCommands.target_compile_options
  Test #244: CMakeCommands.target_sources
  Test #245: CMakeCommands.add_link_options
  Test #246: CMakeCommands.target_link_options
  Test #247: CMakeCommands.link_directories
  Test #248: CMakeCommands.target_link_directories
  Test #249: CTestTestCrash
  Test #250: CTestTestBadExe
  Test #251: CTestTestBadGenerator
  Test #252: CTestTestParallel
  Test #253: CTestTestVerboseOutput
  Test #254: CTestTestSkipReturnCode
  Test #255: CTestTestSerialInDepends
  Test #256: CTestTestMissingDependsExe
  Test #257: CTestTestSerialOrder
  Test #258: CTestLimitDashJ
  Test #259: CTestTestPrintLabels
  Test #260: CTestTestLabelRegExp
  Test #261: CTestTestResourceLock
  Test #262: CTestTestScheduler
  Test #263: CTestTestCostSerial
  Test #264: CTestTestStopTime
  Test #265: CTestTestSubdir
  Test #266: CTestTestTimeout
  Test #267: CTestTestRerunFailed
  Test #268: CTestTestZeroTimeout
  Test #269: CTestTestDepends
  Test #270: CTestTestCycle
  Test #271: CTestTestRunScript
  Test #272: CTestTestShowOnly
  Test #273: CTestTestFdSetSize
  Test #274: BootstrapTest
  Test #275: JavaExportImport
  Test #276: CompileCommandOutput
  Test #277: IncludeDirectories
  Test #278: IncludeDirectoriesCPATH
  Test #279: InterfaceLinkLibraries
  Test #280: CMakeLib.testArgumentParser
  Test #281: CMakeLib.testCTestBinPacker
  Test #282: CMakeLib.testCTestResourceAllocator
  Test #283: CMakeLib.testCTestResourceSpec
  Test #284: CMakeLib.testCTestResourceGroups
  Test #285: CMakeLib.testGccDepfileReader
  Test #286: CMakeLib.testGeneratedFileStream
  Test #287: CMakeLib.testJSONHelpers
  Test #288: CMakeLib.testRST
  Test #289: CMakeLib.testRange
  Test #290: CMakeLib.testOptional
  Test #291: CMakeLib.testString
  Test #292: CMakeLib.testStringAlgorithms
  Test #293: CMakeLib.testSystemTools
  Test #294: CMakeLib.testUTF8
  Test #295: CMakeLib.testXMLParser
  Test #296: CMakeLib.testXMLSafe
  Test #297: CMakeLib.testFindPackageCommand
  Test #298: CMakeLib.testUVProcessChain
  Test #299: CMakeLib.testUVRAII
  Test #300: CMakeLib.testUVStreambuf
  Test #301: CMakeLib.testCMExtMemory
  Test #302: CMakeLib.testCMExtAlgorithm
  Test #303: CMakeOnly.LinkInterfaceLoop
  Test #304: CMakeOnly.CheckSymbolExists
  Test #305: CMakeOnly.CheckCXXSymbolExists
  Test #306: CMakeOnly.CheckCXXCompilerFlag
  Test #307: CMakeOnly.CheckLanguage
  Test #308: CMakeOnly.CheckStructHasMember
  Test #309: CMakeOnly.CompilerIdC
  Test #310: CMakeOnly.CompilerIdCXX
  Test #311: CMakeOnly.AllFindModules
  Test #312: CMakeOnly.SelectLibraryConfigurations
  Test #313: CMakeOnly.TargetScope
  Test #314: CMakeOnly.find_library
  Test #315: CMakeOnly.find_path
  Test #316: CMakeOnly.ProjectInclude
  Test #317: CMakeOnly.ProjectIncludeAny
  Test #318: CMakeOnly.ProjectIncludeBefore
  Test #319: CMakeOnly.ProjectIncludeBeforeAny
  Test #320: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #321: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #322: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #323: CMakeOnly.MajorVersionSelection-Qt_3
  Test #324: CMakeOnly.MajorVersionSelection-Qt_4
  Test #325: RunCMake.CMP0019
  Test #326: RunCMake.CMP0022
  Test #327: RunCMake.CMP0026
  Test #328: RunCMake.CMP0027
  Test #329: RunCMake.CMP0028
  Test #330: RunCMake.CMP0037
  Test #331: RunCMake.CMP0038
  Test #332: RunCMake.CMP0039
  Test #333: RunCMake.CMP0040
  Test #334: RunCMake.CMP0041
  Test #335: RunCMake.CMP0043
  Test #336: RunCMake.CMP0045
  Test #337: RunCMake.CMP0046
  Test #338: RunCMake.CMP0049
  Test #339: RunCMake.CMP0050
  Test #340: RunCMake.CMP0051
  Test #341: RunCMake.CMP0053
  Test #342: RunCMake.CMP0054
  Test #343: RunCMake.CMP0055
  Test #344: RunCMake.CMP0057
  Test #345: RunCMake.CMP0059
  Test #346: RunCMake.CMP0060
  Test #347: RunCMake.CMP0064
  Test #348: RunCMake.CMP0069
  Test #349: RunCMake.CMP0081
  Test #350: RunCMake.CMP0102
  Test #351: RunCMake.CMP0106
  Test #352: RunCMake.CMP0111
  Test #353: RunCMake.CMP0115
  Test #354: RunCMake.CMP0118
  Test #355: RunCMake.CMP0119
  Test #356: RunCMake.CMP0121
  Test #357: RunCMake.CMP0065
  Test #358: RunCMake.Make
  Test #359: RunCMake.CTest
  Test #360: RunCMake.ctest_memcheck
  Test #361: RunCMake.ABI
  Test #362: RunCMake.AndroidTestUtilities
  Test #363: RunCMake.Autogen
  Test #364: RunCMake.ArtifactOutputDirs
  Test #365: RunCMake.BuildDepends
  Test #366: RunCMake.Byproducts
  Test #367: RunCMake.CMakeRoleGlobalProperty
  Test #368: RunCMake.CompilerChange
  Test #369: RunCMake.CompilerNotFound
  Test #370: RunCMake.Configure
  Test #371: RunCMake.DisallowedCommands
  Test #372: RunCMake.ExportCompileCommands
  Test #373: RunCMake.ExcludeFromAll
  Test #374: RunCMake.ExternalData
  Test #375: RunCMake.FeatureSummary
  Test #376: RunCMake.FPHSA
  Test #377: RunCMake.FileAPI
  Test #378: RunCMake.FindBoost
  Test #379: RunCMake.FindLua
  Test #380: RunCMake.FindOpenGL
  Test #381: RunCMake.GenerateExportHeader
  Test #382: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #383: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #384: RunCMake.GenEx-LINK_LANGUAGE
  Test #385: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #386: RunCMake.GenEx-HOST_LINK
  Test #387: RunCMake.GenEx-DEVICE_LINK
  Test #388: RunCMake.GenEx-TARGET_FILE
  Test #389: RunCMake.GenEx-GENEX_EVAL
  Test #390: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #391: RunCMake.GeneratorExpression
  Test #392: RunCMake.GeneratorInstance
  Test #393: RunCMake.GeneratorPlatform
  Test #394: RunCMake.GeneratorToolset
  Test #395: RunCMake.GetPrerequisites
  Test #396: RunCMake.GNUInstallDirs
  Test #397: RunCMake.GoogleTest
  Test #398: RunCMake.Graphviz
  Test #399: RunCMake.TargetPropertyGeneratorExpressions
  Test #400: RunCMake.Languages
  Test #401: RunCMake.LinkStatic
  Test #402: RunCMake.ObjectLibrary
  Test #403: RunCMake.ParseImplicitIncludeInfo
  Test #404: RunCMake.ParseImplicitLinkInfo
  Test #405: RunCMake.RuntimePath
  Test #406: RunCMake.ScriptMode
  Test #407: RunCMake.Swift
  Test #408: RunCMake.TargetObjects
  Test #409: RunCMake.TargetSources
  Test #410: RunCMake.TargetProperties
  Test #411: RunCMake.ToolchainFile
  Test #412: RunCMake.find_dependency
  Test #413: RunCMake.CompileDefinitions
  Test #414: RunCMake.CompileFeatures
  Test #415: RunCMake.Policy
  Test #416: RunCMake.PolicyScope
  Test #417: RunCMake.WriteBasicConfigVersionFile
  Test #418: RunCMake.WriteCompilerDetectionHeader
  Test #419: RunCMake.SourceProperties
  Test #420: RunCMake.PositionIndependentCode
  Test #421: RunCMake.VisibilityPreset
  Test #422: RunCMake.CompatibleInterface
  Test #423: RunCMake.Syntax
  Test #424: RunCMake.WorkingDirectory
  Test #425: RunCMake.MaxRecursionDepth
  Test #426: RunCMake.add_custom_command
  Test #427: RunCMake.add_custom_target
  Test #428: RunCMake.add_dependencies
  Test #429: RunCMake.add_executable
  Test #430: RunCMake.add_library
  Test #431: RunCMake.add_subdirectory
  Test #432: RunCMake.add_test
  Test #433: RunCMake.build_command
  Test #434: RunCMake.execute_process
  Test #435: RunCMake.export
  Test #436: RunCMake.cmake_language
  Test #437: RunCMake.cmake_minimum_required
  Test #438: RunCMake.cmake_parse_arguments
  Test #439: RunCMake.cmake_path
  Test #440: RunCMake.continue
  Test #441: RunCMake.ctest_build
  Test #442: RunCMake.ctest_cmake_error
  Test #443: RunCMake.ctest_configure
  Test #444: RunCMake.ctest_coverage
  Test #445: RunCMake.ctest_start
  Test #446: RunCMake.ctest_submit
  Test #447: RunCMake.ctest_test
  Test #448: RunCMake.ctest_disabled_test
  Test #449: RunCMake.ctest_skipped_test
  Test #450: RunCMake.ctest_update
  Test #451: RunCMake.ctest_upload
  Test #452: RunCMake.ctest_fixtures
  Test #453: RunCMake.file
  Test #454: RunCMake.file-CHMOD
  Test #455: RunCMake.file-RPATH
  Test #456: RunCMake.find_file
  Test #457: RunCMake.find_library
  Test #458: RunCMake.find_package
  Test #459: RunCMake.find_path
  Test #460: RunCMake.find_program
  Test #461: RunCMake.foreach
  Test #462: RunCMake.function
  Test #463: RunCMake.get_filename_component
  Test #464: RunCMake.get_property
  Test #465: RunCMake.if
  Test #466: RunCMake.include
  Test #467: RunCMake.include_directories
  Test #468: RunCMake.include_guard
  Test #469: RunCMake.list
  Test #470: RunCMake.load_cache
  Test #471: RunCMake.math
  Test #472: RunCMake.message
  Test #473: RunCMake.option
  Test #474: RunCMake.project
  Test #475: RunCMake.project_injected
  Test #476: RunCMake.return
  Test #477: RunCMake.separate_arguments
  Test #478: RunCMake.set_property
  Test #479: RunCMake.string
  Test #480: RunCMake.test_include_dirs
  Test #481: RunCMake.BundleUtilities
  Test #482: RunCMake.try_compile
  Test #483: RunCMake.try_run
  Test #484: RunCMake.set
  Test #485: RunCMake.variable_watch
  Test #486: RunCMake.while
  Test #487: RunCMake.CMP0004
  Test #488: RunCMake.TargetPolicies
  Test #489: RunCMake.alias_targets
  Test #490: RunCMake.InterfaceLibrary
  Test #491: RunCMake.no_install_prefix
  Test #492: RunCMake.configure_file
  Test #493: RunCMake.CTestTimeout
  Test #494: RunCMake.CTestTimeoutAfterMatch
  Test #495: RunCMake.DependencyGraph
  Test #496: RunCMake.CTestResourceAllocation
  Test #497: RunCMake.SymlinkTrees
  Test #498: RunCMake.FindPkgConfig
  Test #499: RunCMake.File_Archive
  Test #500: RunCMake.File_Configure
  Test #501: RunCMake.File_Generate
  Test #502: RunCMake.ExportWithoutLanguage
  Test #503: RunCMake.target_link_directories
  Test #504: RunCMake.target_link_libraries
  Test #505: RunCMake.target_link_libraries-ALIAS
  Test #506: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #507: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #508: RunCMake.add_link_options
  Test #509: RunCMake.target_link_options
  Test #510: RunCMake.target_compile_definitions
  Test #511: RunCMake.target_compile_features
  Test #512: RunCMake.target_compile_options
  Test #513: RunCMake.target_include_directories
  Test #514: RunCMake.target_sources
  Test #515: RunCMake.CheckCompilerFlag
  Test #516: RunCMake.CheckSourceCompiles
  Test #517: RunCMake.CheckSourceRuns
  Test #518: RunCMake.CheckModules
  Test #519: RunCMake.CheckIPOSupported
  Test #520: RunCMake.CheckLinkerFlag
  Test #521: RunCMake.CommandLine
  Test #522: RunCMake.CommandLineTar
  Test #523: RunCMake.install
  Test #524: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #525: RunCMake.CPackCommandLine
  Test #526: RunCMake.CPackConfig
  Test #527: RunCMake.CPackInstallProperties
  Test #528: RunCMake.ExternalProject
  Test #529: RunCMake.FetchContent
  Test #530: RunCMake.CTestCommandLine
  Test #531: RunCMake.CacheNewline
  Test #532: RunCMake.CPackSymlinks
  Test #533: RunCMake.IfacePaths_INCDIRS
  Test #534: RunCMake.IfacePaths_SOURCES
  Test #535: RunCMake.CrosscompilingEmulator
  Test #536: RunCMake.LinkWhatYouUse
  Test #537: RunCMake.ClangTidy
  Test #538: RunCMake.IncludeWhatYouUse
  Test #539: RunCMake.Cpplint
  Test #540: RunCMake.Cppcheck
  Test #541: RunCMake.MultiLint
  Test #542: RunCMake.CompilerLauncher
  Test #543: RunCMake.ctest_labels_for_subprojects
  Test #544: RunCMake.CompilerArgs
  Test #545: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #546: RunCMake.CPack_DEB.DEBUGINFO
  Test #547: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #548: RunCMake.CPack_DEB.DEPENDENCIES
  Test #549: RunCMake.CPack_DEB.EMPTY_DIR
  Test #550: RunCMake.CPack_DEB.VERSION
  Test #551: RunCMake.CPack_DEB.EXTRA
  Test #552: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #553: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #554: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #555: RunCMake.CPack_DEB.MINIMAL
  Test #556: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #557: RunCMake.CPack_DEB.TIMESTAMPS
  Test #558: RunCMake.CPack_DEB.MD5SUMS
  Test #559: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #560: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #561: RunCMake.CPack_DEB.PROJECT_META
  Test #562: RunCMake.CPack_7Z
  Test #563: RunCMake.CPack_TBZ2
  Test #564: RunCMake.CPack_TGZ
  Test #565: RunCMake.CPack_TXZ
  Test #566: RunCMake.CPack_TZ
  Test #567: RunCMake.CPack_ZIP
  Test #568: RunCMake.CPack_STGZ
  Test #569: RunCMake.CPack_External
  Test #570: RunCMake.AutoExportDll
  Test #571: RunCMake.AndroidMK
  Test #572: RunCMake.CTestCommandExpandLists
  Test #573: RunCMake.PrecompileHeaders
  Test #574: RunCMake.UnityBuild
  Test #575: RunCMake.CMakePresets
  Test #576: RunCMake.CMakePresetsBuild
  Test #577: RunCMake.CMakePresetsTest
  Test #578: RunCMake.TransformDepfile
  Test #579: FindPackageModeMakefileTest
  Test #580: FindThreads.C-only
  Test #581: FindThreads.CXX-only
  Test #582: CMake.List
  Test #583: CMake.VariableWatch
  Test #584: CMake.Include
  Test #585: CMake.FindBase
  Test #586: CMake.Toolchain
  Test #587: CMake.GetFilenameComponentRealpath
  Test #588: CMake.Version
  Test #589: CMake.Message
  Test #590: CMake.File
  Test #591: CMake.ImplicitLinkInfo
  Test #592: CMake.ModuleNotices
  Test #593: CMake.GetProperty
  Test #594: CMake.If
  Test #595: CMake.String
  Test #596: CMake.Math
  Test #597: CMake.CMakeMinimumRequired
  Test #598: CMake.CompilerIdVendor
  Test #599: CMake.ProcessorCount
  Test #600: CMake.PushCheckState
  Test #601: CMake.While
  Test #602: CMake.CMakeHostSystemInformation
  Test #603: CMake.FileDownload
  Test #604: CMake.FileDownloadBadHash
  Test #605: CMake.FileUpload
  Test #606: CMake.EndStuff
  Test #607: CMake.GetPrerequisites
  Test #608: CMake.PolicyCheck
  Test #609: CMake.CheckSourceTree

Total Tests: 609
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -R complex -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test #153: complex
  Test #154: complexOneConfig

Total Tests: 2
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -E Simple -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: PreOrder
  Test  #36: MissingSourceFile
  Test  #37: COnly
  Test  #38: CxxOnly
  Test  #39: CxxSubdirC
  Test  #40: OutDir
  Test  #41: OutName
  Test  #42: ObjectLibrary
  Test  #43: NewlineArgs
  Test  #44: SetLang
  Test  #45: EmptyProperty
  Test  #46: ExternalOBJ
  Test  #47: LoadCommand
  Test  #48: LinkDirectory
  Test  #49: LinkLanguage
  Test  #50: LinkLine
  Test  #51: MacroTest
  Test  #52: FunctionTest
  Test  #53: ReturnTest
  Test  #54: Properties
  Test  #55: Assembler
  Test  #56: SourceGroups
  Test  #57: Preprocess
  Test  #58: ExportImport
  Test  #59: Unset
  Test  #60: PolicyScope
  Test  #61: EmptyLibrary
  Test  #62: CompileDefinitions
  Test  #63: CompileOptions
  Test  #64: CompatibleInterface
  Test  #65: AliasTarget
  Test  #66: StagingPrefix
  Test  #67: ImportedSameName
  Test  #68: InterfaceLibrary
  Test  #69: ConfigSources
  Test  #70: SourcesProperty
  Test  #71: SourceFileProperty
  Test  #72: SourceFileIncludeDirProperty
  Test  #73: CxxDialect
  Test  #74: CrossCompile
  Test  #75: Policy0002
  Test  #76: BundleUtilities
  Test  #77: CMakeBuildTest
  Test  #78: CMakeDoubleProject
  Test  #79: Module.CheckTypeSize
  Test  #80: Module.CheckIPOSupported-C
  Test  #81: Module.CheckIPOSupported-CXX
  Test  #82: Module.ExternalData
  Test  #83: Module.FindDependency
  Test  #84: Module.WriteCompilerDetectionHeader
  Test  #85: PositionIndependentTargets
  Test  #86: Visibility
  Test  #87: LinkFlags-prepare
  Test  #88: LinkFlags-lib
  Test  #89: LinkFlags-dll
  Test  #90: LinkFlags-mod
  Test  #91: LinkFlags-exe
  Test  #92: LinkFlags-lib_config
  Test  #93: LinkFlags-dll_config
  Test  #94: LinkFlags-mod_config
  Test  #95: LinkFlags-exe_config
  Test  #96: LinkFlags-lib_flags
  Test  #97: LinkFlags-dll_flags
  Test  #98: LinkFlags-mod_flags
  Test  #99: LinkFlags-exe_flags
  Test #100: LinkFlags-lib_flags_config
  Test #101: LinkFlags-dll_flags_config
  Test #102: LinkFlags-mod_flags_config
  Test #103: LinkFlags-exe_flags_config
  Test #104: SubProject
  Test #105: SubProject-Stage2
  Test #106: Framework
  Test #107: TargetName
  Test #108: LibName
  Test #109: CustComDepend
  Test #110: ArgumentExpansion
  Test #111: GeneratorExpression
  Test #112: CustomCommand
  Test #113: CustomCommandByproducts
  Test #114: CommandLength
  Test #115: EmptyDepends
  Test #116: CustomCommandWorkingDirectory
  Test #117: OutOfSource
  Test #118: BuildDepends
  Test #119: MissingInstall
  Test #120: CPackUseDefaultVersion
  Test #121: CPackUseProjectVersion
  Test #122: CPackUseShortProjectVersion
  Test #123: CPackComponents
  Test #124: CPackComponentsForAll-DEB-default
  Test #125: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #126: CPackComponentsForAll-DEB-IgnoreGroup
  Test #127: CPackComponentsForAll-DEB-AllInOne
  Test #128: CPackComponentsForAll-ZIP-default
  Test #129: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #130: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #131: CPackComponentsForAll-ZIP-AllInOne
  Test #132: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #133: CPackComponentsDEB-components-description1
  Test #134: CPackComponentsDEB-components-description2
  Test #135: CPackComponentsDEB-components-source
  Test #136: CPackComponentsDEB-components-shlibdeps1
  Test #137: CPackComponentsDEB-components-depend1
  Test #138: CPackComponentsDEB-components-depend2
  Test #139: CPackComponentsDEB-compression
  Test #140: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #141: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #142: CPackTestAllGenerators
  Test #143: CPackComponentsPrefix
  Test #144: X11
  Test #145: CMakeTestAllGenerators
  Test #146: LoadedCommandOneConfig
  Test #147: complex
  Test #148: complexOneConfig
  Test #149: Environment
  Test #150: QtAutomocNoQt
  Test #151: ExternalProject
  Test #152: ExternalProjectSubdir
  Test #153: ExternalProjectSourceSubdir
  Test #154: ExternalProjectSourceSubdirNotCMake
  Test #155: ExternalProjectLocal
  Test #156: ExternalProjectUpdateSetup
  Test #157: ExternalProjectUpdate
  Test #158: TutorialStep2
  Test #159: TutorialStep3
  Test #160: TutorialStep4
  Test #161: TutorialStep5
  Test #162: TutorialStep6
  Test #163: TutorialStep7
  Test #164: TutorialStep8
  Test #165: TutorialStep9
  Test #166: TutorialStep10
  Test #167: TutorialStep11
  Test #168: TutorialStep12
  Test #169: TutorialComplete
  Test #170: TutorialStep3_MYMATH
  Test #171: TutorialStep4_MYMATH
  Test #172: TutorialStep5_MYMATH
  Test #173: TutorialStep6_MYMATH
  Test #174: TutorialStep7_MYMATH
  Test #175: TutorialStep8_MYMATH
  Test #176: TutorialStep9_MYMATH
  Test #177: TutorialStep10_MYMATH
  Test #178: TutorialStep11_MYMATH
  Test #179: TutorialStep12_MYMATH
  Test #180: TutorialComplete_MYMATH
  Test #181: Guide.ImportExport.MyExe
  Test #182: Guide.ImportExport.Importing
  Test #183: Guide.ImportExport.MathFunctions
  Test #184: Guide.ImportExport.Downstream
  Test #185: Guide.ImportExport.MathFunctionsComponents
  Test #186: Guide.ImportExport.DownstreamComponents
  Test #187: testing
  Test #188: wrapping
  Test #189: qtwrapping
  Test #190: testdriver1
  Test #191: testdriver2
  Test #192: testdriver3
  Test #193: Dependency
  Test #194: JumpWithLibOut
  Test #195: JumpNoLibOut
  Test #196: Plugin
  Test #197: RuntimePath
  Test #198: linkorder1
  Test #199: linkorder2
  Test #200: SubDirSpaces
  Test #201: SubDir
  Test #202: CheckCompilerRelatedVariables
  Test #203: MakeClean
  Test #204: WarnUnusedCliUnused
  Test #205: WarnUnusedCliUsed
  Test #206: WarnUninitialized
  Test #207: TestsWorkingDirectory
  Test #208: CTest.NoNewline
  Test #209: CTest.BuildCommand.ProjectInSubdir
  Test #210: CTest.UpdateGIT
  Test #211: CTestTestNoBuild
  Test #212: CTestTestNoExe
  Test #213: CTestTestUpload
  Test #214: CTestCoverageCollectGCOV
  Test #215: CTestTestEmptyBinaryDirectory
  Test #216: CTestGTMCoverage
  Test #217: CTestCacheCoverage
  Test #218: CTestPythonCoverage
  Test #219: CTestCoberturaCoverage
  Test #220: CTestJacocoCoverage
  Test #221: CTestJavascriptCoverage
  Test #222: CTestDelphiCoverage
  Test #223: CTestConfig.Script.Debug
  Test #224: CTestConfig.Dashboard.Debug
  Test #225: CTestConfig.Script.MinSizeRel
  Test #226: CTestConfig.Dashboard.MinSizeRel
  Test #227: CTestConfig.Script.Release
  Test #228: CTestConfig.Dashboard.Release
  Test #229: CTestConfig.Script.RelWithDebInfo
  Test #230: CTestConfig.Dashboard.RelWithDebInfo
  Test #231: CTestConfig.ScriptWithArgs
  Test #232: CMakeCommands.add_compile_definitions
  Test #233: CMakeCommands.add_compile_options
  Test #234: CMakeCommands.target_link_libraries
  Test #235: CMakeCommands.target_include_directories
  Test #236: CMakeCommands.target_compile_definitions
  Test #237: CMakeCommands.target_compile_options
  Test #238: CMakeCommands.target_sources
  Test #239: CMakeCommands.add_link_options
  Test #240: CMakeCommands.target_link_options
  Test #241: CMakeCommands.link_directories
  Test #242: CMakeCommands.target_link_directories
  Test #243: CTestTestCrash
  Test #244: CTestTestBadExe
  Test #245: CTestTestBadGenerator
  Test #246: CTestTestParallel
  Test #247: CTestTestVerboseOutput
  Test #248: CTestTestSkipReturnCode
  Test #249: CTestTestSerialInDepends
  Test #250: CTestTestMissingDependsExe
  Test #251: CTestTestSerialOrder
  Test #252: CTestLimitDashJ
  Test #253: CTestTestPrintLabels
  Test #254: CTestTestLabelRegExp
  Test #255: CTestTestResourceLock
  Test #256: CTestTestScheduler
  Test #257: CTestTestCostSerial
  Test #258: CTestTestStopTime
  Test #259: CTestTestSubdir
  Test #260: CTestTestTimeout
  Test #261: CTestTestRerunFailed
  Test #262: CTestTestZeroTimeout
  Test #263: CTestTestDepends
  Test #264: CTestTestCycle
  Test #265: CTestTestRunScript
  Test #266: CTestTestShowOnly
  Test #267: CTestTestFdSetSize
  Test #268: BootstrapTest
  Test #269: JavaExportImport
  Test #270: CompileCommandOutput
  Test #271: IncludeDirectories
  Test #272: IncludeDirectoriesCPATH
  Test #273: InterfaceLinkLibraries
  Test #274: CMakeLib.testArgumentParser
  Test #275: CMakeLib.testCTestBinPacker
  Test #276: CMakeLib.testCTestResourceAllocator
  Test #277: CMakeLib.testCTestResourceSpec
  Test #278: CMakeLib.testCTestResourceGroups
  Test #279: CMakeLib.testGccDepfileReader
  Test #280: CMakeLib.testGeneratedFileStream
  Test #281: CMakeLib.testJSONHelpers
  Test #282: CMakeLib.testRST
  Test #283: CMakeLib.testRange
  Test #284: CMakeLib.testOptional
  Test #285: CMakeLib.testString
  Test #286: CMakeLib.testStringAlgorithms
  Test #287: CMakeLib.testSystemTools
  Test #288: CMakeLib.testUTF8
  Test #289: CMakeLib.testXMLParser
  Test #290: CMakeLib.testXMLSafe
  Test #291: CMakeLib.testFindPackageCommand
  Test #292: CMakeLib.testUVProcessChain
  Test #293: CMakeLib.testUVRAII
  Test #294: CMakeLib.testUVStreambuf
  Test #295: CMakeLib.testCMExtMemory
  Test #296: CMakeLib.testCMExtAlgorithm
  Test #297: CMakeOnly.LinkInterfaceLoop
  Test #298: CMakeOnly.CheckSymbolExists
  Test #299: CMakeOnly.CheckCXXSymbolExists
  Test #300: CMakeOnly.CheckCXXCompilerFlag
  Test #301: CMakeOnly.CheckLanguage
  Test #302: CMakeOnly.CheckStructHasMember
  Test #303: CMakeOnly.CompilerIdC
  Test #304: CMakeOnly.CompilerIdCXX
  Test #305: CMakeOnly.AllFindModules
  Test #306: CMakeOnly.SelectLibraryConfigurations
  Test #307: CMakeOnly.TargetScope
  Test #308: CMakeOnly.find_library
  Test #309: CMakeOnly.find_path
  Test #310: CMakeOnly.ProjectInclude
  Test #311: CMakeOnly.ProjectIncludeAny
  Test #312: CMakeOnly.ProjectIncludeBefore
  Test #313: CMakeOnly.ProjectIncludeBeforeAny
  Test #314: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #315: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #316: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #317: CMakeOnly.MajorVersionSelection-Qt_3
  Test #318: CMakeOnly.MajorVersionSelection-Qt_4
  Test #319: RunCMake.CMP0019
  Test #320: RunCMake.CMP0022
  Test #321: RunCMake.CMP0026
  Test #322: RunCMake.CMP0027
  Test #323: RunCMake.CMP0028
  Test #324: RunCMake.CMP0037
  Test #325: RunCMake.CMP0038
  Test #326: RunCMake.CMP0039
  Test #327: RunCMake.CMP0040
  Test #328: RunCMake.CMP0041
  Test #329: RunCMake.CMP0043
  Test #330: RunCMake.CMP0045
  Test #331: RunCMake.CMP0046
  Test #332: RunCMake.CMP0049
  Test #333: RunCMake.CMP0050
  Test #334: RunCMake.CMP0051
  Test #335: RunCMake.CMP0053
  Test #336: RunCMake.CMP0054
  Test #337: RunCMake.CMP0055
  Test #338: RunCMake.CMP0057
  Test #339: RunCMake.CMP0059
  Test #340: RunCMake.CMP0060
  Test #341: RunCMake.CMP0064
  Test #342: RunCMake.CMP0069
  Test #343: RunCMake.CMP0081
  Test #344: RunCMake.CMP0102
  Test #345: RunCMake.CMP0106
  Test #346: RunCMake.CMP0111
  Test #347: RunCMake.CMP0115
  Test #348: RunCMake.CMP0118
  Test #349: RunCMake.CMP0119
  Test #350: RunCMake.CMP0121
  Test #351: RunCMake.CMP0065
  Test #352: RunCMake.Make
  Test #353: RunCMake.CTest
  Test #354: RunCMake.ctest_memcheck
  Test #355: RunCMake.ABI
  Test #356: RunCMake.AndroidTestUtilities
  Test #357: RunCMake.Autogen
  Test #358: RunCMake.ArtifactOutputDirs
  Test #359: RunCMake.BuildDepends
  Test #360: RunCMake.Byproducts
  Test #361: RunCMake.CMakeRoleGlobalProperty
  Test #362: RunCMake.CompilerChange
  Test #363: RunCMake.CompilerNotFound
  Test #364: RunCMake.Configure
  Test #365: RunCMake.DisallowedCommands
  Test #366: RunCMake.ExportCompileCommands
  Test #367: RunCMake.ExcludeFromAll
  Test #368: RunCMake.ExternalData
  Test #369: RunCMake.FeatureSummary
  Test #370: RunCMake.FPHSA
  Test #371: RunCMake.FileAPI
  Test #372: RunCMake.FindBoost
  Test #373: RunCMake.FindLua
  Test #374: RunCMake.FindOpenGL
  Test #375: RunCMake.GenerateExportHeader
  Test #376: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #377: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #378: RunCMake.GenEx-LINK_LANGUAGE
  Test #379: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #380: RunCMake.GenEx-HOST_LINK
  Test #381: RunCMake.GenEx-DEVICE_LINK
  Test #382: RunCMake.GenEx-TARGET_FILE
  Test #383: RunCMake.GenEx-GENEX_EVAL
  Test #384: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #385: RunCMake.GeneratorExpression
  Test #386: RunCMake.GeneratorInstance
  Test #387: RunCMake.GeneratorPlatform
  Test #388: RunCMake.GeneratorToolset
  Test #389: RunCMake.GetPrerequisites
  Test #390: RunCMake.GNUInstallDirs
  Test #391: RunCMake.GoogleTest
  Test #392: RunCMake.Graphviz
  Test #393: RunCMake.TargetPropertyGeneratorExpressions
  Test #394: RunCMake.Languages
  Test #395: RunCMake.LinkStatic
  Test #396: RunCMake.ObjectLibrary
  Test #397: RunCMake.ParseImplicitIncludeInfo
  Test #398: RunCMake.ParseImplicitLinkInfo
  Test #399: RunCMake.RuntimePath
  Test #400: RunCMake.ScriptMode
  Test #401: RunCMake.Swift
  Test #402: RunCMake.TargetObjects
  Test #403: RunCMake.TargetSources
  Test #404: RunCMake.TargetProperties
  Test #405: RunCMake.ToolchainFile
  Test #406: RunCMake.find_dependency
  Test #407: RunCMake.CompileDefinitions
  Test #408: RunCMake.CompileFeatures
  Test #409: RunCMake.Policy
  Test #410: RunCMake.PolicyScope
  Test #411: RunCMake.WriteBasicConfigVersionFile
  Test #412: RunCMake.WriteCompilerDetectionHeader
  Test #413: RunCMake.SourceProperties
  Test #414: RunCMake.PositionIndependentCode
  Test #415: RunCMake.VisibilityPreset
  Test #416: RunCMake.CompatibleInterface
  Test #417: RunCMake.Syntax
  Test #418: RunCMake.WorkingDirectory
  Test #419: RunCMake.MaxRecursionDepth
  Test #420: RunCMake.add_custom_command
  Test #421: RunCMake.add_custom_target
  Test #422: RunCMake.add_dependencies
  Test #423: RunCMake.add_executable
  Test #424: RunCMake.add_library
  Test #425: RunCMake.add_subdirectory
  Test #426: RunCMake.add_test
  Test #427: RunCMake.build_command
  Test #428: RunCMake.execute_process
  Test #429: RunCMake.export
  Test #430: RunCMake.cmake_language
  Test #431: RunCMake.cmake_minimum_required
  Test #432: RunCMake.cmake_parse_arguments
  Test #433: RunCMake.cmake_path
  Test #434: RunCMake.continue
  Test #435: RunCMake.ctest_build
  Test #436: RunCMake.ctest_cmake_error
  Test #437: RunCMake.ctest_configure
  Test #438: RunCMake.ctest_coverage
  Test #439: RunCMake.ctest_start
  Test #440: RunCMake.ctest_submit
  Test #441: RunCMake.ctest_test
  Test #442: RunCMake.ctest_disabled_test
  Test #443: RunCMake.ctest_skipped_test
  Test #444: RunCMake.ctest_update
  Test #445: RunCMake.ctest_upload
  Test #446: RunCMake.ctest_fixtures
  Test #447: RunCMake.file
  Test #448: RunCMake.file-CHMOD
  Test #449: RunCMake.file-RPATH
  Test #450: RunCMake.find_file
  Test #451: RunCMake.find_library
  Test #452: RunCMake.find_package
  Test #453: RunCMake.find_path
  Test #454: RunCMake.find_program
  Test #455: RunCMake.foreach
  Test #456: RunCMake.function
  Test #457: RunCMake.get_filename_component
  Test #458: RunCMake.get_property
  Test #459: RunCMake.if
  Test #460: RunCMake.include
  Test #461: RunCMake.include_directories
  Test #462: RunCMake.include_guard
  Test #463: RunCMake.list
  Test #464: RunCMake.load_cache
  Test #465: RunCMake.math
  Test #466: RunCMake.message
  Test #467: RunCMake.option
  Test #468: RunCMake.project
  Test #469: RunCMake.project_injected
  Test #470: RunCMake.return
  Test #471: RunCMake.separate_arguments
  Test #472: RunCMake.set_property
  Test #473: RunCMake.string
  Test #474: RunCMake.test_include_dirs
  Test #475: RunCMake.BundleUtilities
  Test #476: RunCMake.try_compile
  Test #477: RunCMake.try_run
  Test #478: RunCMake.set
  Test #479: RunCMake.variable_watch
  Test #480: RunCMake.while
  Test #481: RunCMake.CMP0004
  Test #482: RunCMake.TargetPolicies
  Test #483: RunCMake.alias_targets
  Test #484: RunCMake.InterfaceLibrary
  Test #485: RunCMake.no_install_prefix
  Test #486: RunCMake.configure_file
  Test #487: RunCMake.CTestTimeout
  Test #488: RunCMake.CTestTimeoutAfterMatch
  Test #489: RunCMake.DependencyGraph
  Test #490: RunCMake.CTestResourceAllocation
  Test #491: RunCMake.SymlinkTrees
  Test #492: RunCMake.FindPkgConfig
  Test #493: RunCMake.File_Archive
  Test #494: RunCMake.File_Configure
  Test #495: RunCMake.File_Generate
  Test #496: RunCMake.ExportWithoutLanguage
  Test #497: RunCMake.target_link_directories
  Test #498: RunCMake.target_link_libraries
  Test #499: RunCMake.target_link_libraries-ALIAS
  Test #500: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #501: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #502: RunCMake.add_link_options
  Test #503: RunCMake.target_link_options
  Test #504: RunCMake.target_compile_definitions
  Test #505: RunCMake.target_compile_features
  Test #506: RunCMake.target_compile_options
  Test #507: RunCMake.target_include_directories
  Test #508: RunCMake.target_sources
  Test #509: RunCMake.CheckCompilerFlag
  Test #510: RunCMake.CheckSourceCompiles
  Test #511: RunCMake.CheckSourceRuns
  Test #512: RunCMake.CheckModules
  Test #513: RunCMake.CheckIPOSupported
  Test #514: RunCMake.CheckLinkerFlag
  Test #515: RunCMake.CommandLine
  Test #516: RunCMake.CommandLineTar
  Test #517: RunCMake.install
  Test #518: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #519: RunCMake.CPackCommandLine
  Test #520: RunCMake.CPackConfig
  Test #521: RunCMake.CPackInstallProperties
  Test #522: RunCMake.ExternalProject
  Test #523: RunCMake.FetchContent
  Test #524: RunCMake.CTestCommandLine
  Test #525: RunCMake.CacheNewline
  Test #526: RunCMake.CPackSymlinks
  Test #527: RunCMake.IfacePaths_INCDIRS
  Test #528: RunCMake.IfacePaths_SOURCES
  Test #529: RunCMake.CrosscompilingEmulator
  Test #530: RunCMake.LinkWhatYouUse
  Test #531: RunCMake.ClangTidy
  Test #532: RunCMake.IncludeWhatYouUse
  Test #533: RunCMake.Cpplint
  Test #534: RunCMake.Cppcheck
  Test #535: RunCMake.MultiLint
  Test #536: RunCMake.CompilerLauncher
  Test #537: RunCMake.ctest_labels_for_subprojects
  Test #538: RunCMake.CompilerArgs
  Test #539: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #540: RunCMake.CPack_DEB.DEBUGINFO
  Test #541: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #542: RunCMake.CPack_DEB.DEPENDENCIES
  Test #543: RunCMake.CPack_DEB.EMPTY_DIR
  Test #544: RunCMake.CPack_DEB.VERSION
  Test #545: RunCMake.CPack_DEB.EXTRA
  Test #546: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #547: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #548: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #549: RunCMake.CPack_DEB.MINIMAL
  Test #550: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #551: RunCMake.CPack_DEB.TIMESTAMPS
  Test #552: RunCMake.CPack_DEB.MD5SUMS
  Test #553: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #554: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #555: RunCMake.CPack_DEB.PROJECT_META
  Test #556: RunCMake.CPack_7Z
  Test #557: RunCMake.CPack_TBZ2
  Test #558: RunCMake.CPack_TGZ
  Test #559: RunCMake.CPack_TXZ
  Test #560: RunCMake.CPack_TZ
  Test #561: RunCMake.CPack_ZIP
  Test #562: RunCMake.CPack_STGZ
  Test #563: RunCMake.CPack_External
  Test #564: RunCMake.AutoExportDll
  Test #565: RunCMake.AndroidMK
  Test #566: RunCMake.CTestCommandExpandLists
  Test #567: RunCMake.PrecompileHeaders
  Test #568: RunCMake.UnityBuild
  Test #569: RunCMake.CMakePresets
  Test #570: RunCMake.CMakePresetsBuild
  Test #571: RunCMake.CMakePresetsTest
  Test #572: RunCMake.TransformDepfile
  Test #573: FindPackageModeMakefileTest
  Test #574: FindThreads.C-only
  Test #575: FindThreads.CXX-only
  Test #576: CMake.List
  Test #577: CMake.VariableWatch
  Test #578: CMake.Include
  Test #579: CMake.FindBase
  Test #580: CMake.Toolchain
  Test #581: CMake.GetFilenameComponentRealpath
  Test #582: CMake.Version
  Test #583: CMake.Message
  Test #584: CMake.File
  Test #585: CMake.ImplicitLinkInfo
  Test #586: CMake.ModuleNotices
  Test #587: CMake.GetProperty
  Test #588: CMake.If
  Test #589: CMake.String
  Test #590: CMake.Math
  Test #591: CMake.CMakeMinimumRequired
  Test #592: CMake.CompilerIdVendor
  Test #593: CMake.ProcessorCount
  Test #594: CMake.PushCheckState
  Test #595: CMake.While
  Test #596: CMake.CMakeHostSystemInformation
  Test #597: CMake.FileDownload
  Test #598: CMake.FileDownloadBadHash
  Test #599: CMake.FileUpload
  Test #600: CMake.EndStuff
  Test #601: CMake.GetPrerequisites
  Test #602: CMake.PolicyCheck
  Test #603: CMake.CheckSourceTree

Total Tests: 603
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -E Simple -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: PreOrder
  Test  #36: MissingSourceFile
  Test  #37: COnly
  Test  #38: CxxOnly
  Test  #39: CxxSubdirC
  Test  #40: OutDir
  Test  #41: OutName
  Test  #42: ObjectLibrary
  Test  #43: NewlineArgs
  Test  #44: SetLang
  Test  #45: EmptyProperty
  Test  #46: ExternalOBJ
  Test  #47: LoadCommand
  Test  #48: LinkDirectory
  Test  #49: LinkLanguage
  Test  #50: LinkLine
  Test  #51: MacroTest
  Test  #52: FunctionTest
  Test  #53: ReturnTest
  Test  #54: Properties
  Test  #55: Assembler
  Test  #56: SourceGroups
  Test  #57: Preprocess
  Test  #58: ExportImport
  Test  #59: Unset
  Test  #60: PolicyScope
  Test  #61: EmptyLibrary
  Test  #62: CompileDefinitions
  Test  #63: CompileOptions
  Test  #64: CompatibleInterface
  Test  #65: AliasTarget
  Test  #66: StagingPrefix
  Test  #67: ImportedSameName
  Test  #68: InterfaceLibrary
  Test  #69: ConfigSources
  Test  #70: SourcesProperty
  Test  #71: SourceFileProperty
  Test  #72: SourceFileIncludeDirProperty
  Test  #73: CxxDialect
  Test  #74: CrossCompile
  Test  #75: Policy0002
  Test  #76: BundleUtilities
  Test  #77: CMakeBuildTest
  Test  #78: CMakeDoubleProject
  Test  #79: Module.CheckTypeSize
  Test  #80: Module.CheckIPOSupported-C
  Test  #81: Module.CheckIPOSupported-CXX
  Test  #82: Module.ExternalData
  Test  #83: Module.FindDependency
  Test  #84: Module.WriteCompilerDetectionHeader
  Test  #85: PositionIndependentTargets
  Test  #86: Visibility
  Test  #87: LinkFlags-prepare
  Test  #88: LinkFlags-lib
  Test  #89: LinkFlags-dll
  Test  #90: LinkFlags-mod
  Test  #91: LinkFlags-exe
  Test  #92: LinkFlags-lib_config
  Test  #93: LinkFlags-dll_config
  Test  #94: LinkFlags-mod_config
  Test  #95: LinkFlags-exe_config
  Test  #96: LinkFlags-lib_flags
  Test  #97: LinkFlags-dll_flags
  Test  #98: LinkFlags-mod_flags
  Test  #99: LinkFlags-exe_flags
  Test #100: LinkFlags-lib_flags_config
  Test #101: LinkFlags-dll_flags_config
  Test #102: LinkFlags-mod_flags_config
  Test #103: LinkFlags-exe_flags_config
  Test #104: SubProject
  Test #105: SubProject-Stage2
  Test #106: Framework
  Test #107: TargetName
  Test #108: LibName
  Test #109: CustComDepend
  Test #110: ArgumentExpansion
  Test #111: GeneratorExpression
  Test #112: CustomCommand
  Test #113: CustomCommandByproducts
  Test #114: CommandLength
  Test #115: EmptyDepends
  Test #116: CustomCommandWorkingDirectory
  Test #117: OutOfSource
  Test #118: BuildDepends
  Test #119: MissingInstall
  Test #120: CPackUseDefaultVersion
  Test #121: CPackUseProjectVersion
  Test #122: CPackUseShortProjectVersion
  Test #123: CPackComponents
  Test #124: CPackComponentsForAll-DEB-default
  Test #125: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #126: CPackComponentsForAll-DEB-IgnoreGroup
  Test #127: CPackComponentsForAll-DEB-AllInOne
  Test #128: CPackComponentsForAll-ZIP-default
  Test #129: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #130: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #131: CPackComponentsForAll-ZIP-AllInOne
  Test #132: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #133: CPackComponentsDEB-components-description1
  Test #134: CPackComponentsDEB-components-description2
  Test #135: CPackComponentsDEB-components-source
  Test #136: CPackComponentsDEB-components-shlibdeps1
  Test #137: CPackComponentsDEB-components-depend1
  Test #138: CPackComponentsDEB-components-depend2
  Test #139: CPackComponentsDEB-compression
  Test #140: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #141: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #142: CPackTestAllGenerators
  Test #143: CPackComponentsPrefix
  Test #144: X11
  Test #145: CMakeTestAllGenerators
  Test #146: LoadedCommandOneConfig
  Test #147: complex
  Test #148: complexOneConfig
  Test #149: Environment
  Test #150: QtAutomocNoQt
  Test #151: ExternalProject
  Test #152: ExternalProjectSubdir
  Test #153: ExternalProjectSourceSubdir
  Test #154: ExternalProjectSourceSubdirNotCMake
  Test #155: ExternalProjectLocal
  Test #156: ExternalProjectUpdateSetup
  Test #157: ExternalProjectUpdate
  Test #158: TutorialStep2
  Test #159: TutorialStep3
  Test #160: TutorialStep4
  Test #161: TutorialStep5
  Test #162: TutorialStep6
  Test #163: TutorialStep7
  Test #164: TutorialStep8
  Test #165: TutorialStep9
  Test #166: TutorialStep10
  Test #167: TutorialStep11
  Test #168: TutorialStep12
  Test #169: TutorialComplete
  Test #170: TutorialStep3_MYMATH
  Test #171: TutorialStep4_MYMATH
  Test #172: TutorialStep5_MYMATH
  Test #173: TutorialStep6_MYMATH
  Test #174: TutorialStep7_MYMATH
  Test #175: TutorialStep8_MYMATH
  Test #176: TutorialStep9_MYMATH
  Test #177: TutorialStep10_MYMATH
  Test #178: TutorialStep11_MYMATH
  Test #179: TutorialStep12_MYMATH
  Test #180: TutorialComplete_MYMATH
  Test #181: Guide.ImportExport.MyExe
  Test #182: Guide.ImportExport.Importing
  Test #183: Guide.ImportExport.MathFunctions
  Test #184: Guide.ImportExport.Downstream
  Test #185: Guide.ImportExport.MathFunctionsComponents
  Test #186: Guide.ImportExport.DownstreamComponents
  Test #187: testing
  Test #188: wrapping
  Test #189: qtwrapping
  Test #190: testdriver1
  Test #191: testdriver2
  Test #192: testdriver3
  Test #193: Dependency
  Test #194: JumpWithLibOut
  Test #195: JumpNoLibOut
  Test #196: Plugin
  Test #197: RuntimePath
  Test #198: linkorder1
  Test #199: linkorder2
  Test #200: SubDirSpaces
  Test #201: SubDir
  Test #202: CheckCompilerRelatedVariables
  Test #203: MakeClean
  Test #204: WarnUnusedCliUnused
  Test #205: WarnUnusedCliUsed
  Test #206: WarnUninitialized
  Test #207: TestsWorkingDirectory
  Test #208: CTest.NoNewline
  Test #209: CTest.BuildCommand.ProjectInSubdir
  Test #210: CTest.UpdateGIT
  Test #211: CTestTestNoBuild
  Test #212: CTestTestNoExe
  Test #213: CTestTestUpload
  Test #214: CTestCoverageCollectGCOV
  Test #215: CTestTestEmptyBinaryDirectory
  Test #216: CTestGTMCoverage
  Test #217: CTestCacheCoverage
  Test #218: CTestPythonCoverage
  Test #219: CTestCoberturaCoverage
  Test #220: CTestJacocoCoverage
  Test #221: CTestJavascriptCoverage
  Test #222: CTestDelphiCoverage
  Test #223: CTestConfig.Script.Debug
  Test #224: CTestConfig.Dashboard.Debug
  Test #225: CTestConfig.Script.MinSizeRel
  Test #226: CTestConfig.Dashboard.MinSizeRel
  Test #227: CTestConfig.Script.Release
  Test #228: CTestConfig.Dashboard.Release
  Test #229: CTestConfig.Script.RelWithDebInfo
  Test #230: CTestConfig.Dashboard.RelWithDebInfo
  Test #231: CTestConfig.ScriptWithArgs
  Test #232: CMakeCommands.add_compile_definitions
  Test #233: CMakeCommands.add_compile_options
  Test #234: CMakeCommands.target_link_libraries
  Test #235: CMakeCommands.target_include_directories
  Test #236: CMakeCommands.target_compile_definitions
  Test #237: CMakeCommands.target_compile_options
  Test #238: CMakeCommands.target_sources
  Test #239: CMakeCommands.add_link_options
  Test #240: CMakeCommands.target_link_options
  Test #241: CMakeCommands.link_directories
  Test #242: CMakeCommands.target_link_directories
  Test #243: CTestTestCrash
  Test #244: CTestTestBadExe
  Test #245: CTestTestBadGenerator
  Test #246: CTestTestParallel
  Test #247: CTestTestVerboseOutput
  Test #248: CTestTestSkipReturnCode
  Test #249: CTestTestSerialInDepends
  Test #250: CTestTestMissingDependsExe
  Test #251: CTestTestSerialOrder
  Test #252: CTestLimitDashJ
  Test #253: CTestTestPrintLabels
  Test #254: CTestTestLabelRegExp
  Test #255: CTestTestResourceLock
  Test #256: CTestTestScheduler
  Test #257: CTestTestCostSerial
  Test #258: CTestTestStopTime
  Test #259: CTestTestSubdir
  Test #260: CTestTestTimeout
  Test #261: CTestTestRerunFailed
  Test #262: CTestTestZeroTimeout
  Test #263: CTestTestDepends
  Test #264: CTestTestCycle
  Test #265: CTestTestRunScript
  Test #266: CTestTestShowOnly
  Test #267: CTestTestFdSetSize
  Test #268: BootstrapTest
  Test #269: JavaExportImport
  Test #270: CompileCommandOutput
  Test #271: IncludeDirectories
  Test #272: IncludeDirectoriesCPATH
  Test #273: InterfaceLinkLibraries
  Test #274: CMakeLib.testArgumentParser
  Test #275: CMakeLib.testCTestBinPacker
  Test #276: CMakeLib.testCTestResourceAllocator
  Test #277: CMakeLib.testCTestResourceSpec
  Test #278: CMakeLib.testCTestResourceGroups
  Test #279: CMakeLib.testGccDepfileReader
  Test #280: CMakeLib.testGeneratedFileStream
  Test #281: CMakeLib.testJSONHelpers
  Test #282: CMakeLib.testRST
  Test #283: CMakeLib.testRange
  Test #284: CMakeLib.testOptional
  Test #285: CMakeLib.testString
  Test #286: CMakeLib.testStringAlgorithms
  Test #287: CMakeLib.testSystemTools
  Test #288: CMakeLib.testUTF8
  Test #289: CMakeLib.testXMLParser
  Test #290: CMakeLib.testXMLSafe
  Test #291: CMakeLib.testFindPackageCommand
  Test #292: CMakeLib.testUVProcessChain
  Test #293: CMakeLib.testUVRAII
  Test #294: CMakeLib.testUVStreambuf
  Test #295: CMakeLib.testCMExtMemory
  Test #296: CMakeLib.testCMExtAlgorithm
  Test #297: CMakeOnly.LinkInterfaceLoop
  Test #298: CMakeOnly.CheckSymbolExists
  Test #299: CMakeOnly.CheckCXXSymbolExists
  Test #300: CMakeOnly.CheckCXXCompilerFlag
  Test #301: CMakeOnly.CheckLanguage
  Test #302: CMakeOnly.CheckStructHasMember
  Test #303: CMakeOnly.CompilerIdC
  Test #304: CMakeOnly.CompilerIdCXX
  Test #305: CMakeOnly.AllFindModules
  Test #306: CMakeOnly.SelectLibraryConfigurations
  Test #307: CMakeOnly.TargetScope
  Test #308: CMakeOnly.find_library
  Test #309: CMakeOnly.find_path
  Test #310: CMakeOnly.ProjectInclude
  Test #311: CMakeOnly.ProjectIncludeAny
  Test #312: CMakeOnly.ProjectIncludeBefore
  Test #313: CMakeOnly.ProjectIncludeBeforeAny
  Test #314: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #315: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #316: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #317: CMakeOnly.MajorVersionSelection-Qt_3
  Test #318: CMakeOnly.MajorVersionSelection-Qt_4
  Test #319: RunCMake.CMP0019
  Test #320: RunCMake.CMP0022
  Test #321: RunCMake.CMP0026
  Test #322: RunCMake.CMP0027
  Test #323: RunCMake.CMP0028
  Test #324: RunCMake.CMP0037
  Test #325: RunCMake.CMP0038
  Test #326: RunCMake.CMP0039
  Test #327: RunCMake.CMP0040
  Test #328: RunCMake.CMP0041
  Test #329: RunCMake.CMP0043
  Test #330: RunCMake.CMP0045
  Test #331: RunCMake.CMP0046
  Test #332: RunCMake.CMP0049
  Test #333: RunCMake.CMP0050
  Test #334: RunCMake.CMP0051
  Test #335: RunCMake.CMP0053
  Test #336: RunCMake.CMP0054
  Test #337: RunCMake.CMP0055
  Test #338: RunCMake.CMP0057
  Test #339: RunCMake.CMP0059
  Test #340: RunCMake.CMP0060
  Test #341: RunCMake.CMP0064
  Test #342: RunCMake.CMP0069
  Test #343: RunCMake.CMP0081
  Test #344: RunCMake.CMP0102
  Test #345: RunCMake.CMP0106
  Test #346: RunCMake.CMP0111
  Test #347: RunCMake.CMP0115
  Test #348: RunCMake.CMP0118
  Test #349: RunCMake.CMP0119
  Test #350: RunCMake.CMP0121
  Test #351: RunCMake.CMP0065
  Test #352: RunCMake.Make
  Test #353: RunCMake.CTest
  Test #354: RunCMake.ctest_memcheck
  Test #355: RunCMake.ABI
  Test #356: RunCMake.AndroidTestUtilities
  Test #357: RunCMake.Autogen
  Test #358: RunCMake.ArtifactOutputDirs
  Test #359: RunCMake.BuildDepends
  Test #360: RunCMake.Byproducts
  Test #361: RunCMake.CMakeRoleGlobalProperty
  Test #362: RunCMake.CompilerChange
  Test #363: RunCMake.CompilerNotFound
  Test #364: RunCMake.Configure
  Test #365: RunCMake.DisallowedCommands
  Test #366: RunCMake.ExportCompileCommands
  Test #367: RunCMake.ExcludeFromAll
  Test #368: RunCMake.ExternalData
  Test #369: RunCMake.FeatureSummary
  Test #370: RunCMake.FPHSA
  Test #371: RunCMake.FileAPI
  Test #372: RunCMake.FindBoost
  Test #373: RunCMake.FindLua
  Test #374: RunCMake.FindOpenGL
  Test #375: RunCMake.GenerateExportHeader
  Test #376: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #377: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #378: RunCMake.GenEx-LINK_LANGUAGE
  Test #379: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #380: RunCMake.GenEx-HOST_LINK
  Test #381: RunCMake.GenEx-DEVICE_LINK
  Test #382: RunCMake.GenEx-TARGET_FILE
  Test #383: RunCMake.GenEx-GENEX_EVAL
  Test #384: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #385: RunCMake.GeneratorExpression
  Test #386: RunCMake.GeneratorInstance
  Test #387: RunCMake.GeneratorPlatform
  Test #388: RunCMake.GeneratorToolset
  Test #389: RunCMake.GetPrerequisites
  Test #390: RunCMake.GNUInstallDirs
  Test #391: RunCMake.GoogleTest
  Test #392: RunCMake.Graphviz
  Test #393: RunCMake.TargetPropertyGeneratorExpressions
  Test #394: RunCMake.Languages
  Test #395: RunCMake.LinkStatic
  Test #396: RunCMake.ObjectLibrary
  Test #397: RunCMake.ParseImplicitIncludeInfo
  Test #398: RunCMake.ParseImplicitLinkInfo
  Test #399: RunCMake.RuntimePath
  Test #400: RunCMake.ScriptMode
  Test #401: RunCMake.Swift
  Test #402: RunCMake.TargetObjects
  Test #403: RunCMake.TargetSources
  Test #404: RunCMake.TargetProperties
  Test #405: RunCMake.ToolchainFile
  Test #406: RunCMake.find_dependency
  Test #407: RunCMake.CompileDefinitions
  Test #408: RunCMake.CompileFeatures
  Test #409: RunCMake.Policy
  Test #410: RunCMake.PolicyScope
  Test #411: RunCMake.WriteBasicConfigVersionFile
  Test #412: RunCMake.WriteCompilerDetectionHeader
  Test #413: RunCMake.SourceProperties
  Test #414: RunCMake.PositionIndependentCode
  Test #415: RunCMake.VisibilityPreset
  Test #416: RunCMake.CompatibleInterface
  Test #417: RunCMake.Syntax
  Test #418: RunCMake.WorkingDirectory
  Test #419: RunCMake.MaxRecursionDepth
  Test #420: RunCMake.add_custom_command
  Test #421: RunCMake.add_custom_target
  Test #422: RunCMake.add_dependencies
  Test #423: RunCMake.add_executable
  Test #424: RunCMake.add_library
  Test #425: RunCMake.add_subdirectory
  Test #426: RunCMake.add_test
  Test #427: RunCMake.build_command
  Test #428: RunCMake.execute_process
  Test #429: RunCMake.export
  Test #430: RunCMake.cmake_language
  Test #431: RunCMake.cmake_minimum_required
  Test #432: RunCMake.cmake_parse_arguments
  Test #433: RunCMake.cmake_path
  Test #434: RunCMake.continue
  Test #435: RunCMake.ctest_build
  Test #436: RunCMake.ctest_cmake_error
  Test #437: RunCMake.ctest_configure
  Test #438: RunCMake.ctest_coverage
  Test #439: RunCMake.ctest_start
  Test #440: RunCMake.ctest_submit
  Test #441: RunCMake.ctest_test
  Test #442: RunCMake.ctest_disabled_test
  Test #443: RunCMake.ctest_skipped_test
  Test #444: RunCMake.ctest_update
  Test #445: RunCMake.ctest_upload
  Test #446: RunCMake.ctest_fixtures
  Test #447: RunCMake.file
  Test #448: RunCMake.file-CHMOD
  Test #449: RunCMake.file-RPATH
  Test #450: RunCMake.find_file
  Test #451: RunCMake.find_library
  Test #452: RunCMake.find_package
  Test #453: RunCMake.find_path
  Test #454: RunCMake.find_program
  Test #455: RunCMake.foreach
  Test #456: RunCMake.function
  Test #457: RunCMake.get_filename_component
  Test #458: RunCMake.get_property
  Test #459: RunCMake.if
  Test #460: RunCMake.include
  Test #461: RunCMake.include_directories
  Test #462: RunCMake.include_guard
  Test #463: RunCMake.list
  Test #464: RunCMake.load_cache
  Test #465: RunCMake.math
  Test #466: RunCMake.message
  Test #467: RunCMake.option
  Test #468: RunCMake.project
  Test #469: RunCMake.project_injected
  Test #470: RunCMake.return
  Test #471: RunCMake.separate_arguments
  Test #472: RunCMake.set_property
  Test #473: RunCMake.string
  Test #474: RunCMake.test_include_dirs
  Test #475: RunCMake.BundleUtilities
  Test #476: RunCMake.try_compile
  Test #477: RunCMake.try_run
  Test #478: RunCMake.set
  Test #479: RunCMake.variable_watch
  Test #480: RunCMake.while
  Test #481: RunCMake.CMP0004
  Test #482: RunCMake.TargetPolicies
  Test #483: RunCMake.alias_targets
  Test #484: RunCMake.InterfaceLibrary
  Test #485: RunCMake.no_install_prefix
  Test #486: RunCMake.configure_file
  Test #487: RunCMake.CTestTimeout
  Test #488: RunCMake.CTestTimeoutAfterMatch
  Test #489: RunCMake.DependencyGraph
  Test #490: RunCMake.CTestResourceAllocation
  Test #491: RunCMake.SymlinkTrees
  Test #492: RunCMake.FindPkgConfig
  Test #493: RunCMake.File_Archive
  Test #494: RunCMake.File_Configure
  Test #495: RunCMake.File_Generate
  Test #496: RunCMake.ExportWithoutLanguage
  Test #497: RunCMake.target_link_directories
  Test #498: RunCMake.target_link_libraries
  Test #499: RunCMake.target_link_libraries-ALIAS
  Test #500: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #501: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #502: RunCMake.add_link_options
  Test #503: RunCMake.target_link_options
  Test #504: RunCMake.target_compile_definitions
  Test #505: RunCMake.target_compile_features
  Test #506: RunCMake.target_compile_options
  Test #507: RunCMake.target_include_directories
  Test #508: RunCMake.target_sources
  Test #509: RunCMake.CheckCompilerFlag
  Test #510: RunCMake.CheckSourceCompiles
  Test #511: RunCMake.CheckSourceRuns
  Test #512: RunCMake.CheckModules
  Test #513: RunCMake.CheckIPOSupported
  Test #514: RunCMake.CheckLinkerFlag
  Test #515: RunCMake.CommandLine
  Test #516: RunCMake.CommandLineTar
  Test #517: RunCMake.install
  Test #518: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #519: RunCMake.CPackCommandLine
  Test #520: RunCMake.CPackConfig
  Test #521: RunCMake.CPackInstallProperties
  Test #522: RunCMake.ExternalProject
  Test #523: RunCMake.FetchContent
  Test #524: RunCMake.CTestCommandLine
  Test #525: RunCMake.CacheNewline
  Test #526: RunCMake.CPackSymlinks
  Test #527: RunCMake.IfacePaths_INCDIRS
  Test #528: RunCMake.IfacePaths_SOURCES
  Test #529: RunCMake.CrosscompilingEmulator
  Test #530: RunCMake.LinkWhatYouUse
  Test #531: RunCMake.ClangTidy
  Test #532: RunCMake.IncludeWhatYouUse
  Test #533: RunCMake.Cpplint
  Test #534: RunCMake.Cppcheck
  Test #535: RunCMake.MultiLint
  Test #536: RunCMake.CompilerLauncher
  Test #537: RunCMake.ctest_labels_for_subprojects
  Test #538: RunCMake.CompilerArgs
  Test #539: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #540: RunCMake.CPack_DEB.DEBUGINFO
  Test #541: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #542: RunCMake.CPack_DEB.DEPENDENCIES
  Test #543: RunCMake.CPack_DEB.EMPTY_DIR
  Test #544: RunCMake.CPack_DEB.VERSION
  Test #545: RunCMake.CPack_DEB.EXTRA
  Test #546: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #547: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #548: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #549: RunCMake.CPack_DEB.MINIMAL
  Test #550: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #551: RunCMake.CPack_DEB.TIMESTAMPS
  Test #552: RunCMake.CPack_DEB.MD5SUMS
  Test #553: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #554: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #555: RunCMake.CPack_DEB.PROJECT_META
  Test #556: RunCMake.CPack_7Z
  Test #557: RunCMake.CPack_TBZ2
  Test #558: RunCMake.CPack_TGZ
  Test #559: RunCMake.CPack_TXZ
  Test #560: RunCMake.CPack_TZ
  Test #561: RunCMake.CPack_ZIP
  Test #562: RunCMake.CPack_STGZ
  Test #563: RunCMake.CPack_External
  Test #564: RunCMake.AutoExportDll
  Test #565: RunCMake.AndroidMK
  Test #566: RunCMake.CTestCommandExpandLists
  Test #567: RunCMake.PrecompileHeaders
  Test #568: RunCMake.UnityBuild
  Test #569: RunCMake.CMakePresets
  Test #570: RunCMake.CMakePresetsBuild
  Test #571: RunCMake.CMakePresetsTest
  Test #572: RunCMake.TransformDepfile
  Test #573: FindPackageModeMakefileTest
  Test #574: FindThreads.C-only
  Test #575: FindThreads.CXX-only
  Test #576: CMake.List
  Test #577: CMake.VariableWatch
  Test #578: CMake.Include
  Test #579: CMake.FindBase
  Test #580: CMake.Toolchain
  Test #581: CMake.GetFilenameComponentRealpath
  Test #582: CMake.Version
  Test #583: CMake.Message
  Test #584: CMake.File
  Test #585: CMake.ImplicitLinkInfo
  Test #586: CMake.ModuleNotices
  Test #587: CMake.GetProperty
  Test #588: CMake.If
  Test #589: CMake.String
  Test #590: CMake.Math
  Test #591: CMake.CMakeMinimumRequired
  Test #592: CMake.CompilerIdVendor
  Test #593: CMake.ProcessorCount
  Test #594: CMake.PushCheckState
  Test #595: CMake.While
  Test #596: CMake.CMakeHostSystemInformation
  Test #597: CMake.FileDownload
  Test #598: CMake.FileDownloadBadHash
  Test #599: CMake.FileUpload
  Test #600: CMake.EndStuff
  Test #601: CMake.GetPrerequisites
  Test #602: CMake.PolicyCheck
  Test #603: CMake.CheckSourceTree

Total Tests: 603
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N -I -10  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: Simple
  Test  #36: PreOrder
  Test  #37: MissingSourceFile
  Test  #38: COnly
  Test  #39: CxxOnly
  Test  #40: CxxSubdirC
  Test  #41: OutDir
  Test  #42: OutName
  Test  #43: ObjectLibrary
  Test  #44: NewlineArgs
  Test  #45: SetLang
  Test  #46: EmptyProperty
  Test  #47: ExternalOBJ
  Test  #48: LoadCommand
  Test  #49: LinkDirectory
  Test  #50: LinkLanguage
  Test  #51: LinkLine
  Test  #52: MacroTest
  Test  #53: FunctionTest
  Test  #54: ReturnTest
  Test  #55: Properties
  Test  #56: Assembler
  Test  #57: SourceGroups
  Test  #58: Preprocess
  Test  #59: ExportImport
  Test  #60: Unset
  Test  #61: PolicyScope
  Test  #62: EmptyLibrary
  Test  #63: CompileDefinitions
  Test  #64: CompileOptions
  Test  #65: CompatibleInterface
  Test  #66: AliasTarget
  Test  #67: StagingPrefix
  Test  #68: ImportedSameName
  Test  #69: InterfaceLibrary
  Test  #70: ConfigSources
  Test  #71: SourcesProperty
  Test  #72: SourceFileProperty
  Test  #73: SourceFileIncludeDirProperty
  Test  #74: CxxDialect
  Test  #75: CrossCompile
  Test  #76: Policy0002
  Test  #77: BundleUtilities
  Test  #78: CMakeBuildTest
  Test  #79: CMakeDoubleProject
  Test  #80: Module.CheckTypeSize
  Test  #81: Module.CheckIPOSupported-C
  Test  #82: Module.CheckIPOSupported-CXX
  Test  #83: Module.ExternalData
  Test  #84: Module.FindDependency
  Test  #85: Module.WriteCompilerDetectionHeader
  Test  #86: PositionIndependentTargets
  Test  #87: Visibility
  Test  #88: LinkFlags-prepare
  Test  #89: LinkFlags-lib
  Test  #90: LinkFlags-dll
  Test  #91: LinkFlags-mod
  Test  #92: LinkFlags-exe
  Test  #93: LinkFlags-lib_config
  Test  #94: LinkFlags-dll_config
  Test  #95: LinkFlags-mod_config
  Test  #96: LinkFlags-exe_config
  Test  #97: LinkFlags-lib_flags
  Test  #98: LinkFlags-dll_flags
  Test  #99: LinkFlags-mod_flags
  Test #100: LinkFlags-exe_flags
  Test #101: LinkFlags-lib_flags_config
  Test #102: LinkFlags-dll_flags_config
  Test #103: LinkFlags-mod_flags_config
  Test #104: LinkFlags-exe_flags_config
  Test #105: Simple_CodeBlocksGenerator
  Test #106: Simple_CodeLiteGenerator
  Test #107: Simple_EclipseCDT4Generator
  Test #108: Simple_KateGenerator
  Test #109: Simple_SublimeText2Generator
  Test #110: SubProject
  Test #111: SubProject-Stage2
  Test #112: Framework
  Test #113: TargetName
  Test #114: LibName
  Test #115: CustComDepend
  Test #116: ArgumentExpansion
  Test #117: GeneratorExpression
  Test #118: CustomCommand
  Test #119: CustomCommandByproducts
  Test #120: CommandLength
  Test #121: EmptyDepends
  Test #122: CustomCommandWorkingDirectory
  Test #123: OutOfSource
  Test #124: BuildDepends
  Test #125: MissingInstall
  Test #126: CPackUseDefaultVersion
  Test #127: CPackUseProjectVersion
  Test #128: CPackUseShortProjectVersion
  Test #129: CPackComponents
  Test #130: CPackComponentsForAll-DEB-default
  Test #131: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #132: CPackComponentsForAll-DEB-IgnoreGroup
  Test #133: CPackComponentsForAll-DEB-AllInOne
  Test #134: CPackComponentsForAll-ZIP-default
  Test #135: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #136: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #137: CPackComponentsForAll-ZIP-AllInOne
  Test #138: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #139: CPackComponentsDEB-components-description1
  Test #140: CPackComponentsDEB-components-description2
  Test #141: CPackComponentsDEB-components-source
  Test #142: CPackComponentsDEB-components-shlibdeps1
  Test #143: CPackComponentsDEB-components-depend1
  Test #144: CPackComponentsDEB-components-depend2
  Test #145: CPackComponentsDEB-compression
  Test #146: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #147: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #148: CPackTestAllGenerators
  Test #149: CPackComponentsPrefix
  Test #150: X11
  Test #151: CMakeTestAllGenerators
  Test #152: LoadedCommandOneConfig
  Test #153: complex
  Test #154: complexOneConfig
  Test #155: Environment
  Test #156: QtAutomocNoQt
  Test #157: ExternalProject
  Test #158: ExternalProjectSubdir
  Test #159: ExternalProjectSourceSubdir
  Test #160: ExternalProjectSourceSubdirNotCMake
  Test #161: ExternalProjectLocal
  Test #162: ExternalProjectUpdateSetup
  Test #163: ExternalProjectUpdate
  Test #164: TutorialStep2
  Test #165: TutorialStep3
  Test #166: TutorialStep4
  Test #167: TutorialStep5
  Test #168: TutorialStep6
  Test #169: TutorialStep7
  Test #170: TutorialStep8
  Test #171: TutorialStep9
  Test #172: TutorialStep10
  Test #173: TutorialStep11
  Test #174: TutorialStep12
  Test #175: TutorialComplete
  Test #176: TutorialStep3_MYMATH
  Test #177: TutorialStep4_MYMATH
  Test #178: TutorialStep5_MYMATH
  Test #179: TutorialStep6_MYMATH
  Test #180: TutorialStep7_MYMATH
  Test #181: TutorialStep8_MYMATH
  Test #182: TutorialStep9_MYMATH
  Test #183: TutorialStep10_MYMATH
  Test #184: TutorialStep11_MYMATH
  Test #185: TutorialStep12_MYMATH
  Test #186: TutorialComplete_MYMATH
  Test #187: Guide.ImportExport.MyExe
  Test #188: Guide.ImportExport.Importing
  Test #189: Guide.ImportExport.MathFunctions
  Test #190: Guide.ImportExport.Downstream
  Test #191: Guide.ImportExport.MathFunctionsComponents
  Test #192: Guide.ImportExport.DownstreamComponents
  Test #193: testing
  Test #194: wrapping
  Test #195: qtwrapping
  Test #196: testdriver1
  Test #197: testdriver2
  Test #198: testdriver3
  Test #199: Dependency
  Test #200: JumpWithLibOut
  Test #201: JumpNoLibOut
  Test #202: Plugin
  Test #203: RuntimePath
  Test #204: linkorder1
  Test #205: linkorder2
  Test #206: SubDirSpaces
  Test #207: SubDir
  Test #208: CheckCompilerRelatedVariables
  Test #209: MakeClean
  Test #210: WarnUnusedCliUnused
  Test #211: WarnUnusedCliUsed
  Test #212: WarnUninitialized
  Test #213: TestsWorkingDirectory
  Test #214: CTest.NoNewline
  Test #215: CTest.BuildCommand.ProjectInSubdir
  Test #216: CTest.UpdateGIT
  Test #217: CTestTestNoBuild
  Test #218: CTestTestNoExe
  Test #219: CTestTestUpload
  Test #220: CTestCoverageCollectGCOV
  Test #221: CTestTestEmptyBinaryDirectory
  Test #222: CTestGTMCoverage
  Test #223: CTestCacheCoverage
  Test #224: CTestPythonCoverage
  Test #225: CTestCoberturaCoverage
  Test #226: CTestJacocoCoverage
  Test #227: CTestJavascriptCoverage
  Test #228: CTestDelphiCoverage
  Test #229: CTestConfig.Script.Debug
  Test #230: CTestConfig.Dashboard.Debug
  Test #231: CTestConfig.Script.MinSizeRel
  Test #232: CTestConfig.Dashboard.MinSizeRel
  Test #233: CTestConfig.Script.Release
  Test #234: CTestConfig.Dashboard.Release
  Test #235: CTestConfig.Script.RelWithDebInfo
  Test #236: CTestConfig.Dashboard.RelWithDebInfo
  Test #237: CTestConfig.ScriptWithArgs
  Test #238: CMakeCommands.add_compile_definitions
  Test #239: CMakeCommands.add_compile_options
  Test #240: CMakeCommands.target_link_libraries
  Test #241: CMakeCommands.target_include_directories
  Test #242: CMakeCommands.target_compile_definitions
  Test #243: CMakeCommands.target_compile_options
  Test #244: CMakeCommands.target_sources
  Test #245: CMakeCommands.add_link_options
  Test #246: CMakeCommands.target_link_options
  Test #247: CMakeCommands.link_directories
  Test #248: CMakeCommands.target_link_directories
  Test #249: CTestTestCrash
  Test #250: CTestTestBadExe
  Test #251: CTestTestBadGenerator
  Test #252: CTestTestParallel
  Test #253: CTestTestVerboseOutput
  Test #254: CTestTestSkipReturnCode
  Test #255: CTestTestSerialInDepends
  Test #256: CTestTestMissingDependsExe
  Test #257: CTestTestSerialOrder
  Test #258: CTestLimitDashJ
  Test #259: CTestTestPrintLabels
  Test #260: CTestTestLabelRegExp
  Test #261: CTestTestResourceLock
  Test #262: CTestTestScheduler
  Test #263: CTestTestCostSerial
  Test #264: CTestTestStopTime
  Test #265: CTestTestSubdir
  Test #266: CTestTestTimeout
  Test #267: CTestTestRerunFailed
  Test #268: CTestTestZeroTimeout
  Test #269: CTestTestDepends
  Test #270: CTestTestCycle
  Test #271: CTestTestRunScript
  Test #272: CTestTestShowOnly
  Test #273: CTestTestFdSetSize
  Test #274: BootstrapTest
  Test #275: JavaExportImport
  Test #276: CompileCommandOutput
  Test #277: IncludeDirectories
  Test #278: IncludeDirectoriesCPATH
  Test #279: InterfaceLinkLibraries
  Test #280: CMakeLib.testArgumentParser
  Test #281: CMakeLib.testCTestBinPacker
  Test #282: CMakeLib.testCTestResourceAllocator
  Test #283: CMakeLib.testCTestResourceSpec
  Test #284: CMakeLib.testCTestResourceGroups
  Test #285: CMakeLib.testGccDepfileReader
  Test #286: CMakeLib.testGeneratedFileStream
  Test #287: CMakeLib.testJSONHelpers
  Test #288: CMakeLib.testRST
  Test #289: CMakeLib.testRange
  Test #290: CMakeLib.testOptional
  Test #291: CMakeLib.testString
  Test #292: CMakeLib.testStringAlgorithms
  Test #293: CMakeLib.testSystemTools
  Test #294: CMakeLib.testUTF8
  Test #295: CMakeLib.testXMLParser
  Test #296: CMakeLib.testXMLSafe
  Test #297: CMakeLib.testFindPackageCommand
  Test #298: CMakeLib.testUVProcessChain
  Test #299: CMakeLib.testUVRAII
  Test #300: CMakeLib.testUVStreambuf
  Test #301: CMakeLib.testCMExtMemory
  Test #302: CMakeLib.testCMExtAlgorithm
  Test #303: CMakeOnly.LinkInterfaceLoop
  Test #304: CMakeOnly.CheckSymbolExists
  Test #305: CMakeOnly.CheckCXXSymbolExists
  Test #306: CMakeOnly.CheckCXXCompilerFlag
  Test #307: CMakeOnly.CheckLanguage
  Test #308: CMakeOnly.CheckStructHasMember
  Test #309: CMakeOnly.CompilerIdC
  Test #310: CMakeOnly.CompilerIdCXX
  Test #311: CMakeOnly.AllFindModules
  Test #312: CMakeOnly.SelectLibraryConfigurations
  Test #313: CMakeOnly.TargetScope
  Test #314: CMakeOnly.find_library
  Test #315: CMakeOnly.find_path
  Test #316: CMakeOnly.ProjectInclude
  Test #317: CMakeOnly.ProjectIncludeAny
  Test #318: CMakeOnly.ProjectIncludeBefore
  Test #319: CMakeOnly.ProjectIncludeBeforeAny
  Test #320: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #321: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #322: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #323: CMakeOnly.MajorVersionSelection-Qt_3
  Test #324: CMakeOnly.MajorVersionSelection-Qt_4
  Test #325: RunCMake.CMP0019
  Test #326: RunCMake.CMP0022
  Test #327: RunCMake.CMP0026
  Test #328: RunCMake.CMP0027
  Test #329: RunCMake.CMP0028
  Test #330: RunCMake.CMP0037
  Test #331: RunCMake.CMP0038
  Test #332: RunCMake.CMP0039
  Test #333: RunCMake.CMP0040
  Test #334: RunCMake.CMP0041
  Test #335: RunCMake.CMP0043
  Test #336: RunCMake.CMP0045
  Test #337: RunCMake.CMP0046
  Test #338: RunCMake.CMP0049
  Test #339: RunCMake.CMP0050
  Test #340: RunCMake.CMP0051
  Test #341: RunCMake.CMP0053
  Test #342: RunCMake.CMP0054
  Test #343: RunCMake.CMP0055
  Test #344: RunCMake.CMP0057
  Test #345: RunCMake.CMP0059
  Test #346: RunCMake.CMP0060
  Test #347: RunCMake.CMP0064
  Test #348: RunCMake.CMP0069
  Test #349: RunCMake.CMP0081
  Test #350: RunCMake.CMP0102
  Test #351: RunCMake.CMP0106
  Test #352: RunCMake.CMP0111
  Test #353: RunCMake.CMP0115
  Test #354: RunCMake.CMP0118
  Test #355: RunCMake.CMP0119
  Test #356: RunCMake.CMP0121
  Test #357: RunCMake.CMP0065
  Test #358: RunCMake.Make
  Test #359: RunCMake.CTest
  Test #360: RunCMake.ctest_memcheck
  Test #361: RunCMake.ABI
  Test #362: RunCMake.AndroidTestUtilities
  Test #363: RunCMake.Autogen
  Test #364: RunCMake.ArtifactOutputDirs
  Test #365: RunCMake.BuildDepends
  Test #366: RunCMake.Byproducts
  Test #367: RunCMake.CMakeRoleGlobalProperty
  Test #368: RunCMake.CompilerChange
  Test #369: RunCMake.CompilerNotFound
  Test #370: RunCMake.Configure
  Test #371: RunCMake.DisallowedCommands
  Test #372: RunCMake.ExportCompileCommands
  Test #373: RunCMake.ExcludeFromAll
  Test #374: RunCMake.ExternalData
  Test #375: RunCMake.FeatureSummary
  Test #376: RunCMake.FPHSA
  Test #377: RunCMake.FileAPI
  Test #378: RunCMake.FindBoost
  Test #379: RunCMake.FindLua
  Test #380: RunCMake.FindOpenGL
  Test #381: RunCMake.GenerateExportHeader
  Test #382: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #383: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #384: RunCMake.GenEx-LINK_LANGUAGE
  Test #385: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #386: RunCMake.GenEx-HOST_LINK
  Test #387: RunCMake.GenEx-DEVICE_LINK
  Test #388: RunCMake.GenEx-TARGET_FILE
  Test #389: RunCMake.GenEx-GENEX_EVAL
  Test #390: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #391: RunCMake.GeneratorExpression
  Test #392: RunCMake.GeneratorInstance
  Test #393: RunCMake.GeneratorPlatform
  Test #394: RunCMake.GeneratorToolset
  Test #395: RunCMake.GetPrerequisites
  Test #396: RunCMake.GNUInstallDirs
  Test #397: RunCMake.GoogleTest
  Test #398: RunCMake.Graphviz
  Test #399: RunCMake.TargetPropertyGeneratorExpressions
  Test #400: RunCMake.Languages
  Test #401: RunCMake.LinkStatic
  Test #402: RunCMake.ObjectLibrary
  Test #403: RunCMake.ParseImplicitIncludeInfo
  Test #404: RunCMake.ParseImplicitLinkInfo
  Test #405: RunCMake.RuntimePath
  Test #406: RunCMake.ScriptMode
  Test #407: RunCMake.Swift
  Test #408: RunCMake.TargetObjects
  Test #409: RunCMake.TargetSources
  Test #410: RunCMake.TargetProperties
  Test #411: RunCMake.ToolchainFile
  Test #412: RunCMake.find_dependency
  Test #413: RunCMake.CompileDefinitions
  Test #414: RunCMake.CompileFeatures
  Test #415: RunCMake.Policy
  Test #416: RunCMake.PolicyScope
  Test #417: RunCMake.WriteBasicConfigVersionFile
  Test #418: RunCMake.WriteCompilerDetectionHeader
  Test #419: RunCMake.SourceProperties
  Test #420: RunCMake.PositionIndependentCode
  Test #421: RunCMake.VisibilityPreset
  Test #422: RunCMake.CompatibleInterface
  Test #423: RunCMake.Syntax
  Test #424: RunCMake.WorkingDirectory
  Test #425: RunCMake.MaxRecursionDepth
  Test #426: RunCMake.add_custom_command
  Test #427: RunCMake.add_custom_target
  Test #428: RunCMake.add_dependencies
  Test #429: RunCMake.add_executable
  Test #430: RunCMake.add_library
  Test #431: RunCMake.add_subdirectory
  Test #432: RunCMake.add_test
  Test #433: RunCMake.build_command
  Test #434: RunCMake.execute_process
  Test #435: RunCMake.export
  Test #436: RunCMake.cmake_language
  Test #437: RunCMake.cmake_minimum_required
  Test #438: RunCMake.cmake_parse_arguments
  Test #439: RunCMake.cmake_path
  Test #440: RunCMake.continue
  Test #441: RunCMake.ctest_build
  Test #442: RunCMake.ctest_cmake_error
  Test #443: RunCMake.ctest_configure
  Test #444: RunCMake.ctest_coverage
  Test #445: RunCMake.ctest_start
  Test #446: RunCMake.ctest_submit
  Test #447: RunCMake.ctest_test
  Test #448: RunCMake.ctest_disabled_test
  Test #449: RunCMake.ctest_skipped_test
  Test #450: RunCMake.ctest_update
  Test #451: RunCMake.ctest_upload
  Test #452: RunCMake.ctest_fixtures
  Test #453: RunCMake.file
  Test #454: RunCMake.file-CHMOD
  Test #455: RunCMake.file-RPATH
  Test #456: RunCMake.find_file
  Test #457: RunCMake.find_library
  Test #458: RunCMake.find_package
  Test #459: RunCMake.find_path
  Test #460: RunCMake.find_program
  Test #461: RunCMake.foreach
  Test #462: RunCMake.function
  Test #463: RunCMake.get_filename_component
  Test #464: RunCMake.get_property
  Test #465: RunCMake.if
  Test #466: RunCMake.include
  Test #467: RunCMake.include_directories
  Test #468: RunCMake.include_guard
  Test #469: RunCMake.list
  Test #470: RunCMake.load_cache
  Test #471: RunCMake.math
  Test #472: RunCMake.message
  Test #473: RunCMake.option
  Test #474: RunCMake.project
  Test #475: RunCMake.project_injected
  Test #476: RunCMake.return
  Test #477: RunCMake.separate_arguments
  Test #478: RunCMake.set_property
  Test #479: RunCMake.string
  Test #480: RunCMake.test_include_dirs
  Test #481: RunCMake.BundleUtilities
  Test #482: RunCMake.try_compile
  Test #483: RunCMake.try_run
  Test #484: RunCMake.set
  Test #485: RunCMake.variable_watch
  Test #486: RunCMake.while
  Test #487: RunCMake.CMP0004
  Test #488: RunCMake.TargetPolicies
  Test #489: RunCMake.alias_targets
  Test #490: RunCMake.InterfaceLibrary
  Test #491: RunCMake.no_install_prefix
  Test #492: RunCMake.configure_file
  Test #493: RunCMake.CTestTimeout
  Test #494: RunCMake.CTestTimeoutAfterMatch
  Test #495: RunCMake.DependencyGraph
  Test #496: RunCMake.CTestResourceAllocation
  Test #497: RunCMake.SymlinkTrees
  Test #498: RunCMake.FindPkgConfig
  Test #499: RunCMake.File_Archive
  Test #500: RunCMake.File_Configure
  Test #501: RunCMake.File_Generate
  Test #502: RunCMake.ExportWithoutLanguage
  Test #503: RunCMake.target_link_directories
  Test #504: RunCMake.target_link_libraries
  Test #505: RunCMake.target_link_libraries-ALIAS
  Test #506: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #507: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #508: RunCMake.add_link_options
  Test #509: RunCMake.target_link_options
  Test #510: RunCMake.target_compile_definitions
  Test #511: RunCMake.target_compile_features
  Test #512: RunCMake.target_compile_options
  Test #513: RunCMake.target_include_directories
  Test #514: RunCMake.target_sources
  Test #515: RunCMake.CheckCompilerFlag
  Test #516: RunCMake.CheckSourceCompiles
  Test #517: RunCMake.CheckSourceRuns
  Test #518: RunCMake.CheckModules
  Test #519: RunCMake.CheckIPOSupported
  Test #520: RunCMake.CheckLinkerFlag
  Test #521: RunCMake.CommandLine
  Test #522: RunCMake.CommandLineTar
  Test #523: RunCMake.install
  Test #524: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #525: RunCMake.CPackCommandLine
  Test #526: RunCMake.CPackConfig
  Test #527: RunCMake.CPackInstallProperties
  Test #528: RunCMake.ExternalProject
  Test #529: RunCMake.FetchContent
  Test #530: RunCMake.CTestCommandLine
  Test #531: RunCMake.CacheNewline
  Test #532: RunCMake.CPackSymlinks
  Test #533: RunCMake.IfacePaths_INCDIRS
  Test #534: RunCMake.IfacePaths_SOURCES
  Test #535: RunCMake.CrosscompilingEmulator
  Test #536: RunCMake.LinkWhatYouUse
  Test #537: RunCMake.ClangTidy
  Test #538: RunCMake.IncludeWhatYouUse
  Test #539: RunCMake.Cpplint
  Test #540: RunCMake.Cppcheck
  Test #541: RunCMake.MultiLint
  Test #542: RunCMake.CompilerLauncher
  Test #543: RunCMake.ctest_labels_for_subprojects
  Test #544: RunCMake.CompilerArgs
  Test #545: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #546: RunCMake.CPack_DEB.DEBUGINFO
  Test #547: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #548: RunCMake.CPack_DEB.DEPENDENCIES
  Test #549: RunCMake.CPack_DEB.EMPTY_DIR
  Test #550: RunCMake.CPack_DEB.VERSION
  Test #551: RunCMake.CPack_DEB.EXTRA
  Test #552: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #553: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #554: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #555: RunCMake.CPack_DEB.MINIMAL
  Test #556: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #557: RunCMake.CPack_DEB.TIMESTAMPS
  Test #558: RunCMake.CPack_DEB.MD5SUMS
  Test #559: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #560: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #561: RunCMake.CPack_DEB.PROJECT_META
  Test #562: RunCMake.CPack_7Z
  Test #563: RunCMake.CPack_TBZ2
  Test #564: RunCMake.CPack_TGZ
  Test #565: RunCMake.CPack_TXZ
  Test #566: RunCMake.CPack_TZ
  Test #567: RunCMake.CPack_ZIP
  Test #568: RunCMake.CPack_STGZ
  Test #569: RunCMake.CPack_External
  Test #570: RunCMake.AutoExportDll
  Test #571: RunCMake.AndroidMK
  Test #572: RunCMake.CTestCommandExpandLists
  Test #573: RunCMake.PrecompileHeaders
  Test #574: RunCMake.UnityBuild
  Test #575: RunCMake.CMakePresets
  Test #576: RunCMake.CMakePresetsBuild
  Test #577: RunCMake.CMakePresetsTest
  Test #578: RunCMake.TransformDepfile
  Test #579: FindPackageModeMakefileTest
  Test #580: FindThreads.C-only
  Test #581: FindThreads.CXX-only
  Test #582: CMake.List
  Test #583: CMake.VariableWatch
  Test #584: CMake.Include
  Test #585: CMake.FindBase
  Test #586: CMake.Toolchain
  Test #587: CMake.GetFilenameComponentRealpath
  Test #588: CMake.Version
  Test #589: CMake.Message
  Test #590: CMake.File
  Test #591: CMake.ImplicitLinkInfo
  Test #592: CMake.ModuleNotices
  Test #593: CMake.GetProperty
  Test #594: CMake.If
  Test #595: CMake.String
  Test #596: CMake.Math
  Test #597: CMake.CMakeMinimumRequired
  Test #598: CMake.CompilerIdVendor
  Test #599: CMake.ProcessorCount
  Test #600: CMake.PushCheckState
  Test #601: CMake.While
  Test #602: CMake.CMakeHostSystemInformation
  Test #603: CMake.FileDownload
  Test #604: CMake.FileDownloadBadHash
  Test #605: CMake.FileUpload
  Test #606: CMake.EndStuff
  Test #607: CMake.GetPrerequisites
  Test #608: CMake.PolicyCheck
  Test #609: CMake.CheckSourceTree

Total Tests: 609
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N -I 10-  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: Simple
  Test  #36: PreOrder
  Test  #37: MissingSourceFile
  Test  #38: COnly
  Test  #39: CxxOnly
  Test  #40: CxxSubdirC
  Test  #41: OutDir
  Test  #42: OutName
  Test  #43: ObjectLibrary
  Test  #44: NewlineArgs
  Test  #45: SetLang
  Test  #46: EmptyProperty
  Test  #47: ExternalOBJ
  Test  #48: LoadCommand
  Test  #49: LinkDirectory
  Test  #50: LinkLanguage
  Test  #51: LinkLine
  Test  #52: MacroTest
  Test  #53: FunctionTest
  Test  #54: ReturnTest
  Test  #55: Properties
  Test  #56: Assembler
  Test  #57: SourceGroups
  Test  #58: Preprocess
  Test  #59: ExportImport
  Test  #60: Unset
  Test  #61: PolicyScope
  Test  #62: EmptyLibrary
  Test  #63: CompileDefinitions
  Test  #64: CompileOptions
  Test  #65: CompatibleInterface
  Test  #66: AliasTarget
  Test  #67: StagingPrefix
  Test  #68: ImportedSameName
  Test  #69: InterfaceLibrary
  Test  #70: ConfigSources
  Test  #71: SourcesProperty
  Test  #72: SourceFileProperty
  Test  #73: SourceFileIncludeDirProperty
  Test  #74: CxxDialect
  Test  #75: CrossCompile
  Test  #76: Policy0002
  Test  #77: BundleUtilities
  Test  #78: CMakeBuildTest
  Test  #79: CMakeDoubleProject
  Test  #80: Module.CheckTypeSize
  Test  #81: Module.CheckIPOSupported-C
  Test  #82: Module.CheckIPOSupported-CXX
  Test  #83: Module.ExternalData
  Test  #84: Module.FindDependency
  Test  #85: Module.WriteCompilerDetectionHeader
  Test  #86: PositionIndependentTargets
  Test  #87: Visibility
  Test  #88: LinkFlags-prepare
  Test  #89: LinkFlags-lib
  Test  #90: LinkFlags-dll
  Test  #91: LinkFlags-mod
  Test  #92: LinkFlags-exe
  Test  #93: LinkFlags-lib_config
  Test  #94: LinkFlags-dll_config
  Test  #95: LinkFlags-mod_config
  Test  #96: LinkFlags-exe_config
  Test  #97: LinkFlags-lib_flags
  Test  #98: LinkFlags-dll_flags
  Test  #99: LinkFlags-mod_flags
  Test #100: LinkFlags-exe_flags
  Test #101: LinkFlags-lib_flags_config
  Test #102: LinkFlags-dll_flags_config
  Test #103: LinkFlags-mod_flags_config
  Test #104: LinkFlags-exe_flags_config
  Test #105: Simple_CodeBlocksGenerator
  Test #106: Simple_CodeLiteGenerator
  Test #107: Simple_EclipseCDT4Generator
  Test #108: Simple_KateGenerator
  Test #109: Simple_SublimeText2Generator
  Test #110: SubProject
  Test #111: SubProject-Stage2
  Test #112: Framework
  Test #113: TargetName
  Test #114: LibName
  Test #115: CustComDepend
  Test #116: ArgumentExpansion
  Test #117: GeneratorExpression
  Test #118: CustomCommand
  Test #119: CustomCommandByproducts
  Test #120: CommandLength
  Test #121: EmptyDepends
  Test #122: CustomCommandWorkingDirectory
  Test #123: OutOfSource
  Test #124: BuildDepends
  Test #125: MissingInstall
  Test #126: CPackUseDefaultVersion
  Test #127: CPackUseProjectVersion
  Test #128: CPackUseShortProjectVersion
  Test #129: CPackComponents
  Test #130: CPackComponentsForAll-DEB-default
  Test #131: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #132: CPackComponentsForAll-DEB-IgnoreGroup
  Test #133: CPackComponentsForAll-DEB-AllInOne
  Test #134: CPackComponentsForAll-ZIP-default
  Test #135: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #136: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #137: CPackComponentsForAll-ZIP-AllInOne
  Test #138: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #139: CPackComponentsDEB-components-description1
  Test #140: CPackComponentsDEB-components-description2
  Test #141: CPackComponentsDEB-components-source
  Test #142: CPackComponentsDEB-components-shlibdeps1
  Test #143: CPackComponentsDEB-components-depend1
  Test #144: CPackComponentsDEB-components-depend2
  Test #145: CPackComponentsDEB-compression
  Test #146: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #147: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #148: CPackTestAllGenerators
  Test #149: CPackComponentsPrefix
  Test #150: X11
  Test #151: CMakeTestAllGenerators
  Test #152: LoadedCommandOneConfig
  Test #153: complex
  Test #154: complexOneConfig
  Test #155: Environment
  Test #156: QtAutomocNoQt
  Test #157: ExternalProject
  Test #158: ExternalProjectSubdir
  Test #159: ExternalProjectSourceSubdir
  Test #160: ExternalProjectSourceSubdirNotCMake
  Test #161: ExternalProjectLocal
  Test #162: ExternalProjectUpdateSetup
  Test #163: ExternalProjectUpdate
  Test #164: TutorialStep2
  Test #165: TutorialStep3
  Test #166: TutorialStep4
  Test #167: TutorialStep5
  Test #168: TutorialStep6
  Test #169: TutorialStep7
  Test #170: TutorialStep8
  Test #171: TutorialStep9
  Test #172: TutorialStep10
  Test #173: TutorialStep11
  Test #174: TutorialStep12
  Test #175: TutorialComplete
  Test #176: TutorialStep3_MYMATH
  Test #177: TutorialStep4_MYMATH
  Test #178: TutorialStep5_MYMATH
  Test #179: TutorialStep6_MYMATH
  Test #180: TutorialStep7_MYMATH
  Test #181: TutorialStep8_MYMATH
  Test #182: TutorialStep9_MYMATH
  Test #183: TutorialStep10_MYMATH
  Test #184: TutorialStep11_MYMATH
  Test #185: TutorialStep12_MYMATH
  Test #186: TutorialComplete_MYMATH
  Test #187: Guide.ImportExport.MyExe
  Test #188: Guide.ImportExport.Importing
  Test #189: Guide.ImportExport.MathFunctions
  Test #190: Guide.ImportExport.Downstream
  Test #191: Guide.ImportExport.MathFunctionsComponents
  Test #192: Guide.ImportExport.DownstreamComponents
  Test #193: testing
  Test #194: wrapping
  Test #195: qtwrapping
  Test #196: testdriver1
  Test #197: testdriver2
  Test #198: testdriver3
  Test #199: Dependency
  Test #200: JumpWithLibOut
  Test #201: JumpNoLibOut
  Test #202: Plugin
  Test #203: RuntimePath
  Test #204: linkorder1
  Test #205: linkorder2
  Test #206: SubDirSpaces
  Test #207: SubDir
  Test #208: CheckCompilerRelatedVariables
  Test #209: MakeClean
  Test #210: WarnUnusedCliUnused
  Test #211: WarnUnusedCliUsed
  Test #212: WarnUninitialized
  Test #213: TestsWorkingDirectory
  Test #214: CTest.NoNewline
  Test #215: CTest.BuildCommand.ProjectInSubdir
  Test #216: CTest.UpdateGIT
  Test #217: CTestTestNoBuild
  Test #218: CTestTestNoExe
  Test #219: CTestTestUpload
  Test #220: CTestCoverageCollectGCOV
  Test #221: CTestTestEmptyBinaryDirectory
  Test #222: CTestGTMCoverage
  Test #223: CTestCacheCoverage
  Test #224: CTestPythonCoverage
  Test #225: CTestCoberturaCoverage
  Test #226: CTestJacocoCoverage
  Test #227: CTestJavascriptCoverage
  Test #228: CTestDelphiCoverage
  Test #229: CTestConfig.Script.Debug
  Test #230: CTestConfig.Dashboard.Debug
  Test #231: CTestConfig.Script.MinSizeRel
  Test #232: CTestConfig.Dashboard.MinSizeRel
  Test #233: CTestConfig.Script.Release
  Test #234: CTestConfig.Dashboard.Release
  Test #235: CTestConfig.Script.RelWithDebInfo
  Test #236: CTestConfig.Dashboard.RelWithDebInfo
  Test #237: CTestConfig.ScriptWithArgs
  Test #238: CMakeCommands.add_compile_definitions
  Test #239: CMakeCommands.add_compile_options
  Test #240: CMakeCommands.target_link_libraries
  Test #241: CMakeCommands.target_include_directories
  Test #242: CMakeCommands.target_compile_definitions
  Test #243: CMakeCommands.target_compile_options
  Test #244: CMakeCommands.target_sources
  Test #245: CMakeCommands.add_link_options
  Test #246: CMakeCommands.target_link_options
  Test #247: CMakeCommands.link_directories
  Test #248: CMakeCommands.target_link_directories
  Test #249: CTestTestCrash
  Test #250: CTestTestBadExe
  Test #251: CTestTestBadGenerator
  Test #252: CTestTestParallel
  Test #253: CTestTestVerboseOutput
  Test #254: CTestTestSkipReturnCode
  Test #255: CTestTestSerialInDepends
  Test #256: CTestTestMissingDependsExe
  Test #257: CTestTestSerialOrder
  Test #258: CTestLimitDashJ
  Test #259: CTestTestPrintLabels
  Test #260: CTestTestLabelRegExp
  Test #261: CTestTestResourceLock
  Test #262: CTestTestScheduler
  Test #263: CTestTestCostSerial
  Test #264: CTestTestStopTime
  Test #265: CTestTestSubdir
  Test #266: CTestTestTimeout
  Test #267: CTestTestRerunFailed
  Test #268: CTestTestZeroTimeout
  Test #269: CTestTestDepends
  Test #270: CTestTestCycle
  Test #271: CTestTestRunScript
  Test #272: CTestTestShowOnly
  Test #273: CTestTestFdSetSize
  Test #274: BootstrapTest
  Test #275: JavaExportImport
  Test #276: CompileCommandOutput
  Test #277: IncludeDirectories
  Test #278: IncludeDirectoriesCPATH
  Test #279: InterfaceLinkLibraries
  Test #280: CMakeLib.testArgumentParser
  Test #281: CMakeLib.testCTestBinPacker
  Test #282: CMakeLib.testCTestResourceAllocator
  Test #283: CMakeLib.testCTestResourceSpec
  Test #284: CMakeLib.testCTestResourceGroups
  Test #285: CMakeLib.testGccDepfileReader
  Test #286: CMakeLib.testGeneratedFileStream
  Test #287: CMakeLib.testJSONHelpers
  Test #288: CMakeLib.testRST
  Test #289: CMakeLib.testRange
  Test #290: CMakeLib.testOptional
  Test #291: CMakeLib.testString
  Test #292: CMakeLib.testStringAlgorithms
  Test #293: CMakeLib.testSystemTools
  Test #294: CMakeLib.testUTF8
  Test #295: CMakeLib.testXMLParser
  Test #296: CMakeLib.testXMLSafe
  Test #297: CMakeLib.testFindPackageCommand
  Test #298: CMakeLib.testUVProcessChain
  Test #299: CMakeLib.testUVRAII
  Test #300: CMakeLib.testUVStreambuf
  Test #301: CMakeLib.testCMExtMemory
  Test #302: CMakeLib.testCMExtAlgorithm
  Test #303: CMakeOnly.LinkInterfaceLoop
  Test #304: CMakeOnly.CheckSymbolExists
  Test #305: CMakeOnly.CheckCXXSymbolExists
  Test #306: CMakeOnly.CheckCXXCompilerFlag
  Test #307: CMakeOnly.CheckLanguage
  Test #308: CMakeOnly.CheckStructHasMember
  Test #309: CMakeOnly.CompilerIdC
  Test #310: CMakeOnly.CompilerIdCXX
  Test #311: CMakeOnly.AllFindModules
  Test #312: CMakeOnly.SelectLibraryConfigurations
  Test #313: CMakeOnly.TargetScope
  Test #314: CMakeOnly.find_library
  Test #315: CMakeOnly.find_path
  Test #316: CMakeOnly.ProjectInclude
  Test #317: CMakeOnly.ProjectIncludeAny
  Test #318: CMakeOnly.ProjectIncludeBefore
  Test #319: CMakeOnly.ProjectIncludeBeforeAny
  Test #320: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #321: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #322: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #323: CMakeOnly.MajorVersionSelection-Qt_3
  Test #324: CMakeOnly.MajorVersionSelection-Qt_4
  Test #325: RunCMake.CMP0019
  Test #326: RunCMake.CMP0022
  Test #327: RunCMake.CMP0026
  Test #328: RunCMake.CMP0027
  Test #329: RunCMake.CMP0028
  Test #330: RunCMake.CMP0037
  Test #331: RunCMake.CMP0038
  Test #332: RunCMake.CMP0039
  Test #333: RunCMake.CMP0040
  Test #334: RunCMake.CMP0041
  Test #335: RunCMake.CMP0043
  Test #336: RunCMake.CMP0045
  Test #337: RunCMake.CMP0046
  Test #338: RunCMake.CMP0049
  Test #339: RunCMake.CMP0050
  Test #340: RunCMake.CMP0051
  Test #341: RunCMake.CMP0053
  Test #342: RunCMake.CMP0054
  Test #343: RunCMake.CMP0055
  Test #344: RunCMake.CMP0057
  Test #345: RunCMake.CMP0059
  Test #346: RunCMake.CMP0060
  Test #347: RunCMake.CMP0064
  Test #348: RunCMake.CMP0069
  Test #349: RunCMake.CMP0081
  Test #350: RunCMake.CMP0102
  Test #351: RunCMake.CMP0106
  Test #352: RunCMake.CMP0111
  Test #353: RunCMake.CMP0115
  Test #354: RunCMake.CMP0118
  Test #355: RunCMake.CMP0119
  Test #356: RunCMake.CMP0121
  Test #357: RunCMake.CMP0065
  Test #358: RunCMake.Make
  Test #359: RunCMake.CTest
  Test #360: RunCMake.ctest_memcheck
  Test #361: RunCMake.ABI
  Test #362: RunCMake.AndroidTestUtilities
  Test #363: RunCMake.Autogen
  Test #364: RunCMake.ArtifactOutputDirs
  Test #365: RunCMake.BuildDepends
  Test #366: RunCMake.Byproducts
  Test #367: RunCMake.CMakeRoleGlobalProperty
  Test #368: RunCMake.CompilerChange
  Test #369: RunCMake.CompilerNotFound
  Test #370: RunCMake.Configure
  Test #371: RunCMake.DisallowedCommands
  Test #372: RunCMake.ExportCompileCommands
  Test #373: RunCMake.ExcludeFromAll
  Test #374: RunCMake.ExternalData
  Test #375: RunCMake.FeatureSummary
  Test #376: RunCMake.FPHSA
  Test #377: RunCMake.FileAPI
  Test #378: RunCMake.FindBoost
  Test #379: RunCMake.FindLua
  Test #380: RunCMake.FindOpenGL
  Test #381: RunCMake.GenerateExportHeader
  Test #382: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #383: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #384: RunCMake.GenEx-LINK_LANGUAGE
  Test #385: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #386: RunCMake.GenEx-HOST_LINK
  Test #387: RunCMake.GenEx-DEVICE_LINK
  Test #388: RunCMake.GenEx-TARGET_FILE
  Test #389: RunCMake.GenEx-GENEX_EVAL
  Test #390: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #391: RunCMake.GeneratorExpression
  Test #392: RunCMake.GeneratorInstance
  Test #393: RunCMake.GeneratorPlatform
  Test #394: RunCMake.GeneratorToolset
  Test #395: RunCMake.GetPrerequisites
  Test #396: RunCMake.GNUInstallDirs
  Test #397: RunCMake.GoogleTest
  Test #398: RunCMake.Graphviz
  Test #399: RunCMake.TargetPropertyGeneratorExpressions
  Test #400: RunCMake.Languages
  Test #401: RunCMake.LinkStatic
  Test #402: RunCMake.ObjectLibrary
  Test #403: RunCMake.ParseImplicitIncludeInfo
  Test #404: RunCMake.ParseImplicitLinkInfo
  Test #405: RunCMake.RuntimePath
  Test #406: RunCMake.ScriptMode
  Test #407: RunCMake.Swift
  Test #408: RunCMake.TargetObjects
  Test #409: RunCMake.TargetSources
  Test #410: RunCMake.TargetProperties
  Test #411: RunCMake.ToolchainFile
  Test #412: RunCMake.find_dependency
  Test #413: RunCMake.CompileDefinitions
  Test #414: RunCMake.CompileFeatures
  Test #415: RunCMake.Policy
  Test #416: RunCMake.PolicyScope
  Test #417: RunCMake.WriteBasicConfigVersionFile
  Test #418: RunCMake.WriteCompilerDetectionHeader
  Test #419: RunCMake.SourceProperties
  Test #420: RunCMake.PositionIndependentCode
  Test #421: RunCMake.VisibilityPreset
  Test #422: RunCMake.CompatibleInterface
  Test #423: RunCMake.Syntax
  Test #424: RunCMake.WorkingDirectory
  Test #425: RunCMake.MaxRecursionDepth
  Test #426: RunCMake.add_custom_command
  Test #427: RunCMake.add_custom_target
  Test #428: RunCMake.add_dependencies
  Test #429: RunCMake.add_executable
  Test #430: RunCMake.add_library
  Test #431: RunCMake.add_subdirectory
  Test #432: RunCMake.add_test
  Test #433: RunCMake.build_command
  Test #434: RunCMake.execute_process
  Test #435: RunCMake.export
  Test #436: RunCMake.cmake_language
  Test #437: RunCMake.cmake_minimum_required
  Test #438: RunCMake.cmake_parse_arguments
  Test #439: RunCMake.cmake_path
  Test #440: RunCMake.continue
  Test #441: RunCMake.ctest_build
  Test #442: RunCMake.ctest_cmake_error
  Test #443: RunCMake.ctest_configure
  Test #444: RunCMake.ctest_coverage
  Test #445: RunCMake.ctest_start
  Test #446: RunCMake.ctest_submit
  Test #447: RunCMake.ctest_test
  Test #448: RunCMake.ctest_disabled_test
  Test #449: RunCMake.ctest_skipped_test
  Test #450: RunCMake.ctest_update
  Test #451: RunCMake.ctest_upload
  Test #452: RunCMake.ctest_fixtures
  Test #453: RunCMake.file
  Test #454: RunCMake.file-CHMOD
  Test #455: RunCMake.file-RPATH
  Test #456: RunCMake.find_file
  Test #457: RunCMake.find_library
  Test #458: RunCMake.find_package
  Test #459: RunCMake.find_path
  Test #460: RunCMake.find_program
  Test #461: RunCMake.foreach
  Test #462: RunCMake.function
  Test #463: RunCMake.get_filename_component
  Test #464: RunCMake.get_property
  Test #465: RunCMake.if
  Test #466: RunCMake.include
  Test #467: RunCMake.include_directories
  Test #468: RunCMake.include_guard
  Test #469: RunCMake.list
  Test #470: RunCMake.load_cache
  Test #471: RunCMake.math
  Test #472: RunCMake.message
  Test #473: RunCMake.option
  Test #474: RunCMake.project
  Test #475: RunCMake.project_injected
  Test #476: RunCMake.return
  Test #477: RunCMake.separate_arguments
  Test #478: RunCMake.set_property
  Test #479: RunCMake.string
  Test #480: RunCMake.test_include_dirs
  Test #481: RunCMake.BundleUtilities
  Test #482: RunCMake.try_compile
  Test #483: RunCMake.try_run
  Test #484: RunCMake.set
  Test #485: RunCMake.variable_watch
  Test #486: RunCMake.while
  Test #487: RunCMake.CMP0004
  Test #488: RunCMake.TargetPolicies
  Test #489: RunCMake.alias_targets
  Test #490: RunCMake.InterfaceLibrary
  Test #491: RunCMake.no_install_prefix
  Test #492: RunCMake.configure_file
  Test #493: RunCMake.CTestTimeout
  Test #494: RunCMake.CTestTimeoutAfterMatch
  Test #495: RunCMake.DependencyGraph
  Test #496: RunCMake.CTestResourceAllocation
  Test #497: RunCMake.SymlinkTrees
  Test #498: RunCMake.FindPkgConfig
  Test #499: RunCMake.File_Archive
  Test #500: RunCMake.File_Configure
  Test #501: RunCMake.File_Generate
  Test #502: RunCMake.ExportWithoutLanguage
  Test #503: RunCMake.target_link_directories
  Test #504: RunCMake.target_link_libraries
  Test #505: RunCMake.target_link_libraries-ALIAS
  Test #506: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #507: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #508: RunCMake.add_link_options
  Test #509: RunCMake.target_link_options
  Test #510: RunCMake.target_compile_definitions
  Test #511: RunCMake.target_compile_features
  Test #512: RunCMake.target_compile_options
  Test #513: RunCMake.target_include_directories
  Test #514: RunCMake.target_sources
  Test #515: RunCMake.CheckCompilerFlag
  Test #516: RunCMake.CheckSourceCompiles
  Test #517: RunCMake.CheckSourceRuns
  Test #518: RunCMake.CheckModules
  Test #519: RunCMake.CheckIPOSupported
  Test #520: RunCMake.CheckLinkerFlag
  Test #521: RunCMake.CommandLine
  Test #522: RunCMake.CommandLineTar
  Test #523: RunCMake.install
  Test #524: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #525: RunCMake.CPackCommandLine
  Test #526: RunCMake.CPackConfig
  Test #527: RunCMake.CPackInstallProperties
  Test #528: RunCMake.ExternalProject
  Test #529: RunCMake.FetchContent
  Test #530: RunCMake.CTestCommandLine
  Test #531: RunCMake.CacheNewline
  Test #532: RunCMake.CPackSymlinks
  Test #533: RunCMake.IfacePaths_INCDIRS
  Test #534: RunCMake.IfacePaths_SOURCES
  Test #535: RunCMake.CrosscompilingEmulator
  Test #536: RunCMake.LinkWhatYouUse
  Test #537: RunCMake.ClangTidy
  Test #538: RunCMake.IncludeWhatYouUse
  Test #539: RunCMake.Cpplint
  Test #540: RunCMake.Cppcheck
  Test #541: RunCMake.MultiLint
  Test #542: RunCMake.CompilerLauncher
  Test #543: RunCMake.ctest_labels_for_subprojects
  Test #544: RunCMake.CompilerArgs
  Test #545: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #546: RunCMake.CPack_DEB.DEBUGINFO
  Test #547: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #548: RunCMake.CPack_DEB.DEPENDENCIES
  Test #549: RunCMake.CPack_DEB.EMPTY_DIR
  Test #550: RunCMake.CPack_DEB.VERSION
  Test #551: RunCMake.CPack_DEB.EXTRA
  Test #552: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #553: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #554: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #555: RunCMake.CPack_DEB.MINIMAL
  Test #556: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #557: RunCMake.CPack_DEB.TIMESTAMPS
  Test #558: RunCMake.CPack_DEB.MD5SUMS
  Test #559: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #560: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #561: RunCMake.CPack_DEB.PROJECT_META
  Test #562: RunCMake.CPack_7Z
  Test #563: RunCMake.CPack_TBZ2
  Test #564: RunCMake.CPack_TGZ
  Test #565: RunCMake.CPack_TXZ
  Test #566: RunCMake.CPack_TZ
  Test #567: RunCMake.CPack_ZIP
  Test #568: RunCMake.CPack_STGZ
  Test #569: RunCMake.CPack_External
  Test #570: RunCMake.AutoExportDll
  Test #571: RunCMake.AndroidMK
  Test #572: RunCMake.CTestCommandExpandLists
  Test #573: RunCMake.PrecompileHeaders
  Test #574: RunCMake.UnityBuild
  Test #575: RunCMake.CMakePresets
  Test #576: RunCMake.CMakePresetsBuild
  Test #577: RunCMake.CMakePresetsTest
  Test #578: RunCMake.TransformDepfile
  Test #579: FindPackageModeMakefileTest
  Test #580: FindThreads.C-only
  Test #581: FindThreads.CXX-only
  Test #582: CMake.List
  Test #583: CMake.VariableWatch
  Test #584: CMake.Include
  Test #585: CMake.FindBase
  Test #586: CMake.Toolchain
  Test #587: CMake.GetFilenameComponentRealpath
  Test #588: CMake.Version
  Test #589: CMake.Message
  Test #590: CMake.File
  Test #591: CMake.ImplicitLinkInfo
  Test #592: CMake.ModuleNotices
  Test #593: CMake.GetProperty
  Test #594: CMake.If
  Test #595: CMake.String
  Test #596: CMake.Math
  Test #597: CMake.CMakeMinimumRequired
  Test #598: CMake.CompilerIdVendor
  Test #599: CMake.ProcessorCount
  Test #600: CMake.PushCheckState
  Test #601: CMake.While
  Test #602: CMake.CMakeHostSystemInformation
  Test #603: CMake.FileDownload
  Test #604: CMake.FileDownloadBadHash
  Test #605: CMake.FileUpload
  Test #606: CMake.EndStuff
  Test #607: CMake.GetPrerequisites
  Test #608: CMake.PolicyCheck
  Test #609: CMake.CheckSourceTree

Total Tests: 600
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N -I 3,4  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test #3: kwsys.testTerminal
  Test #4: kwsys.testConfigure

Total Tests: 2
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help  2>&1
Usage

  ctest [options]

Options
  --preset <preset>, --preset=<preset>
                               = Read arguments from a test preset.
  --list-presets               = List available test presets.
  -C <cfg>, --build-config <cfg>
                               = Choose configuration to test.
  --progress                   = Enable short progress output from tests.
  -V,--verbose                 = Enable verbose output from tests.
  -VV,--extra-verbose          = Enable more verbose output from tests.
  --debug                      = Displaying more verbose internals of CTest.
  --output-on-failure          = Output anything outputted by the test
                                 program if the test should fail.
  --stop-on-failure            = Stop running the tests after one has failed.
  --test-output-size-passed <size>
                               = Limit the output for passed tests to <size>
                                 bytes
  --test-output-size-failed <size>
                               = Limit the output for failed tests to <size>
                                 bytes
  -F                           = Enable failover.
  -j <jobs>, --parallel <jobs> = Run the tests in parallel using the given
                                 number of jobs.
  -Q,--quiet                   = Make ctest quiet.
  -O <file>, --output-log <file>
                               = Output to log file
  -N,--show-only[=format]      = Disable actual execution of tests.  The
                                 optional 'format' defines the format of the
                                 test information and can be 'human' for the
                                 current text format or 'json-v1' for json
                                 format.  Defaults to 'human'.
  -L <regex>, --label-regex <regex>
                               = Run tests with labels matching regular
                                 expression.  With multiple -L, run tests
                                 where each regular expression matches at
                                 least one label.
  -R <regex>, --tests-regex <regex>
                               = Run tests matching regular expression.
  -E <regex>, --exclude-regex <regex>
                               = Exclude tests matching regular expression.
  -LE <regex>, --label-exclude <regex>
                               = Exclude tests with labels matching regular
                                 expression.  With multiple -LE, exclude
                                 tests where each regular expression matches
                                 at least one label.
  -FA <regex>, --fixture-exclude-any <regex>
                               = Do not automatically add any tests for
                                 fixtures matching regular expression.
  -FS <regex>, --fixture-exclude-setup <regex>
                               = Do not automatically add setup tests for
                                 fixtures matching regular expression.
  -FC <regex>, --fixture-exclude-cleanup <regex>
                               = Do not automatically add cleanup tests for
                                 fixtures matching regular expression.
  -D <dashboard>, --dashboard <dashboard>
                               = Execute dashboard test
  -D <var>:<type>=<value>      = Define a variable for script mode
  -M <model>, --test-model <model>
                               = Sets the model for a dashboard
  -T <action>, --test-action <action>
                               = Sets the dashboard action to perform
  --group <group>              = Specify what build group on the dashboard
                                 you'd like to submit results to.
  -S <script>, --script <script>
                               = Execute a dashboard for a configuration
  -SP <script>, --script-new-process <script>
                               = Execute a dashboard for a configuration
  -A <file>, --add-notes <file>= Add a notes file with submission
  -I [Start,End,Stride,test#,test#|Test file], --tests-information
                               = Run a specific number of tests by number.
  -U, --union                  = Take the Union of -I and -R
  --rerun-failed               = Run only the tests that failed previously
  --repeat until-fail:<n>, --repeat-until-fail <n>
                               = Require each test to run <n> times without
                                 failing in order to pass
  --repeat until-pass:<n>      = Allow each test to run up to <n> times in
                                 order to pass
  --repeat after-timeout:<n>   = Allow each test to run up to <n> times if it
                                 times out
  --max-width <width>          = Set the max width for a test name to output
  --interactive-debug-mode [0|1]
                               = Set the interactive mode to 0 or 1.
  --resource-spec-file <file>  = Set the resource spec file to use.
  --no-label-summary           = Disable timing summary information for
                                 labels.
  --no-subproject-summary      = Disable timing summary information for
                                 subprojects.
  --test-dir <dir>             = Specify the directory in which to look for
                                 tests.
  --build-and-test             = Configure, build and run a test.
  --build-target               = Specify a specific target to build.
  --build-nocmake              = Run the build without running cmake first.
  --build-run-dir              = Specify directory to run programs from.
  --build-two-config           = Run CMake twice
  --build-exe-dir              = Specify the directory for the executable.
  --build-generator            = Specify the generator to use.
  --build-generator-platform   = Specify the generator-specific platform.
  --build-generator-toolset    = Specify the generator-specific toolset.
  --build-project              = Specify the name of the project to build.
  --build-makeprogram          = Specify the make program to use.
  --build-noclean              = Skip the make clean step.
  --build-config-sample        = A sample executable to use to determine the
                                 configuration
  --build-options              = Add extra options to the build step.
  --test-command               = The test to run with the --build-and-test
                                 option.
  --test-timeout               = The time limit in seconds, internal use
                                 only.
  --test-load                  = CPU load threshold for starting new parallel
                                 tests.
  --tomorrow-tag               = Nightly or experimental starts with next day
                                 tag.
  --overwrite                  = Overwrite CTest configuration option.
  --extra-submit <file>[;<file>]
                               = Submit extra files to the dashboard.
  --force-new-ctest-process    = Run child CTest instances as new processes
  --schedule-random            = Use a random order for scheduling tests
  --submit-index               = Submit individual dashboard tests with
                                 specific index
  --timeout <seconds>          = Set the default test timeout.
  --stop-time <time>           = Set a time at which all tests should stop
                                 running.
  --http1.0                    = Submit using HTTP 1.0.
  --no-compress-output         = Do not compress test output when submitting.
  --print-labels               = Print all available test labels.
  --no-tests=<[error|ignore]>  = Regard no tests found either as 'error' or
                                 'ignore' it.
  --help,-help,-usage,-h,-H,/? = Print usage information and exit.
  --version,-version,/V [<f>]  = Print version number and exit.
  --help-full [<f>]            = Print all help manuals and exit.
  --help-manual <man> [<f>]    = Print one help manual and exit.
  --help-manual-list [<f>]     = List help manuals available and exit.
  --help-command <cmd> [<f>]   = Print help for one command and exit.
  --help-command-list [<f>]    = List commands with help available and exit.
  --help-commands [<f>]        = Print cmake-commands manual and exit.
  --help-module <mod> [<f>]    = Print help for one module and exit.
  --help-module-list [<f>]     = List modules with help available and exit.
  --help-modules [<f>]         = Print cmake-modules manual and exit.
  --help-policy <cmp> [<f>]    = Print help for one policy and exit.
  --help-policy-list [<f>]     = List policies with help available and exit.
  --help-policies [<f>]        = Print cmake-policies manual and exit.
  --help-property <prop> [<f>] = Print help for one property and exit.
  --help-property-list [<f>]   = List properties with help available and
                                 exit.
  --help-properties [<f>]      = Print cmake-properties manual and exit.
  --help-variable var [<f>]    = Print help for one variable and exit.
  --help-variable-list [<f>]   = List variables with help available and exit.
  --help-variables [<f>]       = Print cmake-variables manual and exit.

running /home/zachary/oss/labs/lab-08/build/bin/ctest --copyright  2>&1
Warning: --copyright no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help-full "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/ctest.txt"  2>&1
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help-man "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/ctest.man"  2>&1
Warning: --help-man no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help-html "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/ctest.html"  2>&1
Warning: --help-html no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/ctest --version  2>&1
ctest version 3.20.20210331-gbd4ebf1

CMake suite maintained and supported by Kitware (kitware.com/cmake).
***************************
PreLoad.cmake works fine.
***************************
Environment variable set to: Environment variable set
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


running /home/zachary/oss/labs/lab-08/build/bin/cmake -E chdir "/home/zachary/cmake/Tests/CommandLineTest" "/home/zachary/oss/labs/lab-08/build/bin/cmake" -E echo "Hello World"  2>&1
Hello World
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -L /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002863 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -LA /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002822 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -LH /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002882 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake -E time "/home/zachary/oss/labs/lab-08/build/bin/cmake -N -LAH /home/zachary/cmake/Tests/CommandLineTest"  2>&1
No such file or directory
Elapsed time: 0 s. (time), 0.002856 s. (clock)
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help  2>&1
Usage

  cmake [options] <path-to-source>
  cmake [options] <path-to-existing-build>
  cmake [options] -S <path-to-source> -B <path-to-build>

Specify a source directory to (re-)generate a build system for it in the
current working directory.  Specify an existing build directory to
re-generate its build system.

Options
  -S <path-to-source>          = Explicitly specify a source directory.
  -B <path-to-build>           = Explicitly specify a build directory.
  -C <initial-cache>           = Pre-load a script to populate the cache.
  -D <var>[:<type>]=<value>    = Create or update a cmake cache entry.
  -U <globbing_expr>           = Remove matching entries from CMake cache.
  -G <generator-name>          = Specify a build system generator.
  -T <toolset-name>            = Specify toolset name if supported by
                                 generator.
  -A <platform-name>           = Specify platform name if supported by
                                 generator.
  --install-prefix <directory> = Specify install directory
                                 [CMAKE_INSTALL_PREFIX].
  -Wdev                        = Enable developer warnings.
  -Wno-dev                     = Suppress developer warnings.
  -Werror=dev                  = Make developer warnings errors.
  -Wno-error=dev               = Make developer warnings not errors.
  -Wdeprecated                 = Enable deprecation warnings.
  -Wno-deprecated              = Suppress deprecation warnings.
  -Werror=deprecated           = Make deprecated macro and function warnings
                                 errors.
  -Wno-error=deprecated        = Make deprecated macro and function warnings
                                 not errors.
  --preset <preset>,--preset=<preset>
                               = Specify a configure preset.
  --list-presets               = List available presets.
  -E                           = CMake command mode.
  -L[A][H]                     = List non-advanced cached variables.
  --build <dir>                = Build a CMake-generated project binary tree.
  --install <dir>              = Install a CMake-generated project binary
                                 tree.
  --open <dir>                 = Open generated project in the associated
                                 application.
  -N                           = View mode only.
  -P <file>                    = Process script mode.
  --find-package               = Legacy pkg-config like mode.  Do not use.
  --graphviz=[file]            = Generate graphviz of dependencies, see
                                 CMakeGraphVizOptions.cmake for more.
  --system-information [file]  = Dump information about this system.
  --log-level=<ERROR|WARNING|NOTICE|STATUS|VERBOSE|DEBUG|TRACE>
                               = Set the verbosity of messages from CMake
                                 files.  --loglevel is also accepted for
                                 backward compatibility reasons.
  --log-context                = Prepend log messages with context, if given
  --debug-trycompile           = Do not delete the try_compile build tree.
                                 Only useful on one try_compile at a time.
  --debug-output               = Put cmake in a debug mode.
  --debug-find                 = Put cmake find in a debug mode.
  --trace                      = Put cmake in trace mode.
  --trace-expand               = Put cmake in trace mode with variable
                                 expansion.
  --trace-format=<human|json-v1>
                               = Set the output format of the trace.
  --trace-source=<file>        = Trace only this CMake file/module.  Multiple
                                 options allowed.
  --trace-redirect=<file>      = Redirect trace output to a file instead of
                                 stderr.
  --warn-uninitialized         = Warn about uninitialized values.
  --no-warn-unused-cli         = Don't warn about command line options.
  --check-system-vars          = Find problems with variable usage in system
                                 files.
  --profiling-format=<fmt>     = Output data for profiling CMake scripts.
                                 Supported formats: google-trace
  --profiling-output=<file>    = Select an output path for the profiling data
                                 enabled through --profiling-format.
  --help,-help,-usage,-h,-H,/? = Print usage information and exit.
  --version,-version,/V [<f>]  = Print version number and exit.
  --help-full [<f>]            = Print all help manuals and exit.
  --help-manual <man> [<f>]    = Print one help manual and exit.
  --help-manual-list [<f>]     = List help manuals available and exit.
  --help-command <cmd> [<f>]   = Print help for one command and exit.
  --help-command-list [<f>]    = List commands with help available and exit.
  --help-commands [<f>]        = Print cmake-commands manual and exit.
  --help-module <mod> [<f>]    = Print help for one module and exit.
  --help-module-list [<f>]     = List modules with help available and exit.
  --help-modules [<f>]         = Print cmake-modules manual and exit.
  --help-policy <cmp> [<f>]    = Print help for one policy and exit.
  --help-policy-list [<f>]     = List policies with help available and exit.
  --help-policies [<f>]        = Print cmake-policies manual and exit.
  --help-property <prop> [<f>] = Print help for one property and exit.
  --help-property-list [<f>]   = List properties with help available and
                                 exit.
  --help-properties [<f>]      = Print cmake-properties manual and exit.
  --help-variable var [<f>]    = Print help for one variable and exit.
  --help-variable-list [<f>]   = List variables with help available and exit.
  --help-variables [<f>]       = Print cmake-variables manual and exit.

Generators

The following generators are available on this platform (* marks default):
  Green Hills MULTI            = Generates Green Hills MULTI files
                                 (experimental, work-in-progress).
* Unix Makefiles               = Generates standard UNIX makefiles.
  Ninja                        = Generates build.ninja files.
  Ninja Multi-Config           = Generates build-<Config>.ninja files.
  Watcom WMake                 = Generates Watcom WMake makefiles.
  CodeBlocks - Ninja           = Generates CodeBlocks project files.
  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.
  CodeLite - Ninja             = Generates CodeLite project files.
  CodeLite - Unix Makefiles    = Generates CodeLite project files.
  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.
  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.
  Kate - Ninja                 = Generates Kate project files.
  Kate - Unix Makefiles        = Generates Kate project files.
  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.
  Sublime Text 2 - Unix Makefiles
                               = Generates Sublime Text 2 project files.

running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-command-list  2>&1
add_compile_definitions
add_compile_options
add_custom_command
add_custom_target
add_definitions
add_dependencies
add_executable
add_library
add_link_options
add_subdirectory
add_test
aux_source_directory
break
build_command
build_name
cmake_host_system_information
cmake_language
cmake_minimum_required
cmake_parse_arguments
cmake_path
cmake_policy
configure_file
continue
create_test_sourcelist
ctest_build
ctest_configure
ctest_coverage
ctest_empty_binary_directory
ctest_memcheck
ctest_read_custom_files
ctest_run_script
ctest_sleep
ctest_start
ctest_submit
ctest_test
ctest_update
ctest_upload
define_property
else
elseif
enable_language
enable_testing
endforeach
endfunction
endif
endmacro
endwhile
exec_program
execute_process
export
export_library_dependencies
file
find_file
find_library
find_package
find_path
find_program
fltk_wrap_ui
foreach
function
get_cmake_property
get_directory_property
get_filename_component
get_property
get_source_file_property
get_target_property
get_test_property
if
include
include_directories
include_external_msproject
include_guard
include_regular_expression
install
install_files
install_programs
install_targets
link_directories
link_libraries
list
load_cache
load_command
macro
make_directory
mark_as_advanced
math
message
option
output_required_files
project
qt_wrap_cpp
qt_wrap_ui
remove
remove_definitions
return
separate_arguments
set
set_directory_properties
set_property
set_source_files_properties
set_target_properties
set_tests_properties
site_name
source_group
string
subdir_depends
subdirs
target_compile_definitions
target_compile_features
target_compile_options
target_include_directories
target_link_directories
target_link_libraries
target_link_options
target_precompile_headers
target_sources
try_compile
try_run
unset
use_mangled_mesa
utility_source
variable_requires
variable_watch
while
write_file
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help add_executable  2>&1
add_executable
--------------

Add an executable to the project using the specified source files.

Normal Executables
^^^^^^^^^^^^^^^^^^

 add_executable(<name> [WIN32] [MACOSX_BUNDLE]
                [EXCLUDE_FROM_ALL]
                [source1] [source2 ...])

Adds an executable target called ``<name>`` to be built from the source
files listed in the command invocation.  The
``<name>`` corresponds to the logical target name and must be globally
unique within a project.  The actual file name of the executable built is
constructed based on conventions of the native platform (such as
``<name>.exe`` or just ``<name>``).

By default the executable file will be created in the build tree
directory corresponding to the source tree directory in which the
command was invoked.  See documentation of the
``RUNTIME_OUTPUT_DIRECTORY`` target property to change this
location.  See documentation of the ``OUTPUT_NAME`` target property
to change the ``<name>`` part of the final file name.

If ``WIN32`` is given the property ``WIN32_EXECUTABLE`` will be
set on the target created.  See documentation of that target property for
details.

If ``MACOSX_BUNDLE`` is given the corresponding property will be set on
the created target.  See documentation of the ``MACOSX_BUNDLE``
target property for details.

If ``EXCLUDE_FROM_ALL`` is given the corresponding property will be set on
the created target.  See documentation of the ``EXCLUDE_FROM_ALL``
target property for details.

See the ``cmake-buildsystem(7)`` manual for more on defining
buildsystem properties.

See also ``HEADER_FILE_ONLY`` on what to do if some sources are
pre-processed, and you want to have the original sources reachable from
within IDE.

Imported Executables
^^^^^^^^^^^^^^^^^^^^

 add_executable(<name> IMPORTED [GLOBAL])

An :ref:`IMPORTED executable target <Imported Targets>` references an
executable file located outside the project.  No rules are generated to
build it, and the ``IMPORTED`` target property is ``True``.  The
target name has scope in the directory in which it is created and below, but
the ``GLOBAL`` option extends visibility.  It may be referenced like any
target built within the project.  ``IMPORTED`` executables are useful
for convenient reference from commands like ``add_custom_command()``.
Details about the imported executable are specified by setting properties
whose names begin in ``IMPORTED_``.  The most important such property is
``IMPORTED_LOCATION`` (and its per-configuration version
``IMPORTED_LOCATION_<CONFIG>``) which specifies the location of
the main executable file on disk.  See documentation of the ``IMPORTED_*``
properties for more information.

Alias Executables
^^^^^^^^^^^^^^^^^

 add_executable(<name> ALIAS <target>)

Creates an :ref:`Alias Target <Alias Targets>`, such that ``<name>`` can
be used to refer to ``<target>`` in subsequent commands.  The ``<name>``
does not appear in the generated buildsystem as a make target.  The
``<target>`` may not be an ``ALIAS``.

``ALIAS`` targets can be used as targets to read properties
from, executables for custom commands and custom targets.  They can also be
tested for existence with the regular ``if(TARGET)`` subcommand.
The ``<name>`` may not be used to modify properties of ``<target>``, that
is, it may not be used as the operand of ``set_property()``,
``set_target_properties()``, ``target_link_libraries()`` etc.
An ``ALIAS`` target may not be installed or exported.
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-command add_executable  2>&1
add_executable
--------------

Add an executable to the project using the specified source files.

Normal Executables
^^^^^^^^^^^^^^^^^^

 add_executable(<name> [WIN32] [MACOSX_BUNDLE]
                [EXCLUDE_FROM_ALL]
                [source1] [source2 ...])

Adds an executable target called ``<name>`` to be built from the source
files listed in the command invocation.  The
``<name>`` corresponds to the logical target name and must be globally
unique within a project.  The actual file name of the executable built is
constructed based on conventions of the native platform (such as
``<name>.exe`` or just ``<name>``).

By default the executable file will be created in the build tree
directory corresponding to the source tree directory in which the
command was invoked.  See documentation of the
``RUNTIME_OUTPUT_DIRECTORY`` target property to change this
location.  See documentation of the ``OUTPUT_NAME`` target property
to change the ``<name>`` part of the final file name.

If ``WIN32`` is given the property ``WIN32_EXECUTABLE`` will be
set on the target created.  See documentation of that target property for
details.

If ``MACOSX_BUNDLE`` is given the corresponding property will be set on
the created target.  See documentation of the ``MACOSX_BUNDLE``
target property for details.

If ``EXCLUDE_FROM_ALL`` is given the corresponding property will be set on
the created target.  See documentation of the ``EXCLUDE_FROM_ALL``
target property for details.

See the ``cmake-buildsystem(7)`` manual for more on defining
buildsystem properties.

See also ``HEADER_FILE_ONLY`` on what to do if some sources are
pre-processed, and you want to have the original sources reachable from
within IDE.

Imported Executables
^^^^^^^^^^^^^^^^^^^^

 add_executable(<name> IMPORTED [GLOBAL])

An :ref:`IMPORTED executable target <Imported Targets>` references an
executable file located outside the project.  No rules are generated to
build it, and the ``IMPORTED`` target property is ``True``.  The
target name has scope in the directory in which it is created and below, but
the ``GLOBAL`` option extends visibility.  It may be referenced like any
target built within the project.  ``IMPORTED`` executables are useful
for convenient reference from commands like ``add_custom_command()``.
Details about the imported executable are specified by setting properties
whose names begin in ``IMPORTED_``.  The most important such property is
``IMPORTED_LOCATION`` (and its per-configuration version
``IMPORTED_LOCATION_<CONFIG>``) which specifies the location of
the main executable file on disk.  See documentation of the ``IMPORTED_*``
properties for more information.

Alias Executables
^^^^^^^^^^^^^^^^^

 add_executable(<name> ALIAS <target>)

Creates an :ref:`Alias Target <Alias Targets>`, such that ``<name>`` can
be used to refer to ``<target>`` in subsequent commands.  The ``<name>``
does not appear in the generated buildsystem as a make target.  The
``<target>`` may not be an ``ALIAS``.

``ALIAS`` targets can be used as targets to read properties
from, executables for custom commands and custom targets.  They can also be
tested for existence with the regular ``if(TARGET)`` subcommand.
The ``<name>`` may not be used to modify properties of ``<target>``, that
is, it may not be used as the operand of ``set_property()``,
``set_target_properties()``, ``target_link_libraries()`` etc.
An ``ALIAS`` target may not be installed or exported.
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-full "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/cmake.txt"  2>&1
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-man "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/cmake.man"  2>&1
Warning: --help-man no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/cmake --help-html "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/cmake.html"  2>&1
Warning: --help-html no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/cmake --copyright "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/Copyright.txt"  2>&1
Warning: --copyright no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/cmake --version "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/version.txt"  2>&1
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: Simple
  Test  #36: PreOrder
  Test  #37: MissingSourceFile
  Test  #38: COnly
  Test  #39: CxxOnly
  Test  #40: CxxSubdirC
  Test  #41: OutDir
  Test  #42: OutName
  Test  #43: ObjectLibrary
  Test  #44: NewlineArgs
  Test  #45: SetLang
  Test  #46: EmptyProperty
  Test  #47: ExternalOBJ
  Test  #48: LoadCommand
  Test  #49: LinkDirectory
  Test  #50: LinkLanguage
  Test  #51: LinkLine
  Test  #52: MacroTest
  Test  #53: FunctionTest
  Test  #54: ReturnTest
  Test  #55: Properties
  Test  #56: Assembler
  Test  #57: SourceGroups
  Test  #58: Preprocess
  Test  #59: ExportImport
  Test  #60: Unset
  Test  #61: PolicyScope
  Test  #62: EmptyLibrary
  Test  #63: CompileDefinitions
  Test  #64: CompileOptions
  Test  #65: CompatibleInterface
  Test  #66: AliasTarget
  Test  #67: StagingPrefix
  Test  #68: ImportedSameName
  Test  #69: InterfaceLibrary
  Test  #70: ConfigSources
  Test  #71: SourcesProperty
  Test  #72: SourceFileProperty
  Test  #73: SourceFileIncludeDirProperty
  Test  #74: CxxDialect
  Test  #75: CrossCompile
  Test  #76: Policy0002
  Test  #77: BundleUtilities
  Test  #78: CMakeBuildTest
  Test  #79: CMakeDoubleProject
  Test  #80: Module.CheckTypeSize
  Test  #81: Module.CheckIPOSupported-C
  Test  #82: Module.CheckIPOSupported-CXX
  Test  #83: Module.ExternalData
  Test  #84: Module.FindDependency
  Test  #85: Module.WriteCompilerDetectionHeader
  Test  #86: PositionIndependentTargets
  Test  #87: Visibility
  Test  #88: LinkFlags-prepare
  Test  #89: LinkFlags-lib
  Test  #90: LinkFlags-dll
  Test  #91: LinkFlags-mod
  Test  #92: LinkFlags-exe
  Test  #93: LinkFlags-lib_config
  Test  #94: LinkFlags-dll_config
  Test  #95: LinkFlags-mod_config
  Test  #96: LinkFlags-exe_config
  Test  #97: LinkFlags-lib_flags
  Test  #98: LinkFlags-dll_flags
  Test  #99: LinkFlags-mod_flags
  Test #100: LinkFlags-exe_flags
  Test #101: LinkFlags-lib_flags_config
  Test #102: LinkFlags-dll_flags_config
  Test #103: LinkFlags-mod_flags_config
  Test #104: LinkFlags-exe_flags_config
  Test #105: Simple_CodeBlocksGenerator
  Test #106: Simple_CodeLiteGenerator
  Test #107: Simple_EclipseCDT4Generator
  Test #108: Simple_KateGenerator
  Test #109: Simple_SublimeText2Generator
  Test #110: SubProject
  Test #111: SubProject-Stage2
  Test #112: Framework
  Test #113: TargetName
  Test #114: LibName
  Test #115: CustComDepend
  Test #116: ArgumentExpansion
  Test #117: GeneratorExpression
  Test #118: CustomCommand
  Test #119: CustomCommandByproducts
  Test #120: CommandLength
  Test #121: EmptyDepends
  Test #122: CustomCommandWorkingDirectory
  Test #123: OutOfSource
  Test #124: BuildDepends
  Test #125: MissingInstall
  Test #126: CPackUseDefaultVersion
  Test #127: CPackUseProjectVersion
  Test #128: CPackUseShortProjectVersion
  Test #129: CPackComponents
  Test #130: CPackComponentsForAll-DEB-default
  Test #131: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #132: CPackComponentsForAll-DEB-IgnoreGroup
  Test #133: CPackComponentsForAll-DEB-AllInOne
  Test #134: CPackComponentsForAll-ZIP-default
  Test #135: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #136: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #137: CPackComponentsForAll-ZIP-AllInOne
  Test #138: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #139: CPackComponentsDEB-components-description1
  Test #140: CPackComponentsDEB-components-description2
  Test #141: CPackComponentsDEB-components-source
  Test #142: CPackComponentsDEB-components-shlibdeps1
  Test #143: CPackComponentsDEB-components-depend1
  Test #144: CPackComponentsDEB-components-depend2
  Test #145: CPackComponentsDEB-compression
  Test #146: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #147: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #148: CPackTestAllGenerators
  Test #149: CPackComponentsPrefix
  Test #150: X11
  Test #151: CMakeTestAllGenerators
  Test #152: LoadedCommandOneConfig
  Test #153: complex
  Test #154: complexOneConfig
  Test #155: Environment
  Test #156: QtAutomocNoQt
  Test #157: ExternalProject
  Test #158: ExternalProjectSubdir
  Test #159: ExternalProjectSourceSubdir
  Test #160: ExternalProjectSourceSubdirNotCMake
  Test #161: ExternalProjectLocal
  Test #162: ExternalProjectUpdateSetup
  Test #163: ExternalProjectUpdate
  Test #164: TutorialStep2
  Test #165: TutorialStep3
  Test #166: TutorialStep4
  Test #167: TutorialStep5
  Test #168: TutorialStep6
  Test #169: TutorialStep7
  Test #170: TutorialStep8
  Test #171: TutorialStep9
  Test #172: TutorialStep10
  Test #173: TutorialStep11
  Test #174: TutorialStep12
  Test #175: TutorialComplete
  Test #176: TutorialStep3_MYMATH
  Test #177: TutorialStep4_MYMATH
  Test #178: TutorialStep5_MYMATH
  Test #179: TutorialStep6_MYMATH
  Test #180: TutorialStep7_MYMATH
  Test #181: TutorialStep8_MYMATH
  Test #182: TutorialStep9_MYMATH
  Test #183: TutorialStep10_MYMATH
  Test #184: TutorialStep11_MYMATH
  Test #185: TutorialStep12_MYMATH
  Test #186: TutorialComplete_MYMATH
  Test #187: Guide.ImportExport.MyExe
  Test #188: Guide.ImportExport.Importing
  Test #189: Guide.ImportExport.MathFunctions
  Test #190: Guide.ImportExport.Downstream
  Test #191: Guide.ImportExport.MathFunctionsComponents
  Test #192: Guide.ImportExport.DownstreamComponents
  Test #193: testing
  Test #194: wrapping
  Test #195: qtwrapping
  Test #196: testdriver1
  Test #197: testdriver2
  Test #198: testdriver3
  Test #199: Dependency
  Test #200: JumpWithLibOut
  Test #201: JumpNoLibOut
  Test #202: Plugin
  Test #203: RuntimePath
  Test #204: linkorder1
  Test #205: linkorder2
  Test #206: SubDirSpaces
  Test #207: SubDir
  Test #208: CheckCompilerRelatedVariables
  Test #209: MakeClean
  Test #210: WarnUnusedCliUnused
  Test #211: WarnUnusedCliUsed
  Test #212: WarnUninitialized
  Test #213: TestsWorkingDirectory
  Test #214: CTest.NoNewline
  Test #215: CTest.BuildCommand.ProjectInSubdir
  Test #216: CTest.UpdateGIT
  Test #217: CTestTestNoBuild
  Test #218: CTestTestNoExe
  Test #219: CTestTestUpload
  Test #220: CTestCoverageCollectGCOV
  Test #221: CTestTestEmptyBinaryDirectory
  Test #222: CTestGTMCoverage
  Test #223: CTestCacheCoverage
  Test #224: CTestPythonCoverage
  Test #225: CTestCoberturaCoverage
  Test #226: CTestJacocoCoverage
  Test #227: CTestJavascriptCoverage
  Test #228: CTestDelphiCoverage
  Test #229: CTestConfig.Script.Debug
  Test #230: CTestConfig.Dashboard.Debug
  Test #231: CTestConfig.Script.MinSizeRel
  Test #232: CTestConfig.Dashboard.MinSizeRel
  Test #233: CTestConfig.Script.Release
  Test #234: CTestConfig.Dashboard.Release
  Test #235: CTestConfig.Script.RelWithDebInfo
  Test #236: CTestConfig.Dashboard.RelWithDebInfo
  Test #237: CTestConfig.ScriptWithArgs
  Test #238: CMakeCommands.add_compile_definitions
  Test #239: CMakeCommands.add_compile_options
  Test #240: CMakeCommands.target_link_libraries
  Test #241: CMakeCommands.target_include_directories
  Test #242: CMakeCommands.target_compile_definitions
  Test #243: CMakeCommands.target_compile_options
  Test #244: CMakeCommands.target_sources
  Test #245: CMakeCommands.add_link_options
  Test #246: CMakeCommands.target_link_options
  Test #247: CMakeCommands.link_directories
  Test #248: CMakeCommands.target_link_directories
  Test #249: CTestTestCrash
  Test #250: CTestTestBadExe
  Test #251: CTestTestBadGenerator
  Test #252: CTestTestParallel
  Test #253: CTestTestVerboseOutput
  Test #254: CTestTestSkipReturnCode
  Test #255: CTestTestSerialInDepends
  Test #256: CTestTestMissingDependsExe
  Test #257: CTestTestSerialOrder
  Test #258: CTestLimitDashJ
  Test #259: CTestTestPrintLabels
  Test #260: CTestTestLabelRegExp
  Test #261: CTestTestResourceLock
  Test #262: CTestTestScheduler
  Test #263: CTestTestCostSerial
  Test #264: CTestTestStopTime
  Test #265: CTestTestSubdir
  Test #266: CTestTestTimeout
  Test #267: CTestTestRerunFailed
  Test #268: CTestTestZeroTimeout
  Test #269: CTestTestDepends
  Test #270: CTestTestCycle
  Test #271: CTestTestRunScript
  Test #272: CTestTestShowOnly
  Test #273: CTestTestFdSetSize
  Test #274: BootstrapTest
  Test #275: JavaExportImport
  Test #276: CompileCommandOutput
  Test #277: IncludeDirectories
  Test #278: IncludeDirectoriesCPATH
  Test #279: InterfaceLinkLibraries
  Test #280: CMakeLib.testArgumentParser
  Test #281: CMakeLib.testCTestBinPacker
  Test #282: CMakeLib.testCTestResourceAllocator
  Test #283: CMakeLib.testCTestResourceSpec
  Test #284: CMakeLib.testCTestResourceGroups
  Test #285: CMakeLib.testGccDepfileReader
  Test #286: CMakeLib.testGeneratedFileStream
  Test #287: CMakeLib.testJSONHelpers
  Test #288: CMakeLib.testRST
  Test #289: CMakeLib.testRange
  Test #290: CMakeLib.testOptional
  Test #291: CMakeLib.testString
  Test #292: CMakeLib.testStringAlgorithms
  Test #293: CMakeLib.testSystemTools
  Test #294: CMakeLib.testUTF8
  Test #295: CMakeLib.testXMLParser
  Test #296: CMakeLib.testXMLSafe
  Test #297: CMakeLib.testFindPackageCommand
  Test #298: CMakeLib.testUVProcessChain
  Test #299: CMakeLib.testUVRAII
  Test #300: CMakeLib.testUVStreambuf
  Test #301: CMakeLib.testCMExtMemory
  Test #302: CMakeLib.testCMExtAlgorithm
  Test #303: CMakeOnly.LinkInterfaceLoop
  Test #304: CMakeOnly.CheckSymbolExists
  Test #305: CMakeOnly.CheckCXXSymbolExists
  Test #306: CMakeOnly.CheckCXXCompilerFlag
  Test #307: CMakeOnly.CheckLanguage
  Test #308: CMakeOnly.CheckStructHasMember
  Test #309: CMakeOnly.CompilerIdC
  Test #310: CMakeOnly.CompilerIdCXX
  Test #311: CMakeOnly.AllFindModules
  Test #312: CMakeOnly.SelectLibraryConfigurations
  Test #313: CMakeOnly.TargetScope
  Test #314: CMakeOnly.find_library
  Test #315: CMakeOnly.find_path
  Test #316: CMakeOnly.ProjectInclude
  Test #317: CMakeOnly.ProjectIncludeAny
  Test #318: CMakeOnly.ProjectIncludeBefore
  Test #319: CMakeOnly.ProjectIncludeBeforeAny
  Test #320: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #321: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #322: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #323: CMakeOnly.MajorVersionSelection-Qt_3
  Test #324: CMakeOnly.MajorVersionSelection-Qt_4
  Test #325: RunCMake.CMP0019
  Test #326: RunCMake.CMP0022
  Test #327: RunCMake.CMP0026
  Test #328: RunCMake.CMP0027
  Test #329: RunCMake.CMP0028
  Test #330: RunCMake.CMP0037
  Test #331: RunCMake.CMP0038
  Test #332: RunCMake.CMP0039
  Test #333: RunCMake.CMP0040
  Test #334: RunCMake.CMP0041
  Test #335: RunCMake.CMP0043
  Test #336: RunCMake.CMP0045
  Test #337: RunCMake.CMP0046
  Test #338: RunCMake.CMP0049
  Test #339: RunCMake.CMP0050
  Test #340: RunCMake.CMP0051
  Test #341: RunCMake.CMP0053
  Test #342: RunCMake.CMP0054
  Test #343: RunCMake.CMP0055
  Test #344: RunCMake.CMP0057
  Test #345: RunCMake.CMP0059
  Test #346: RunCMake.CMP0060
  Test #347: RunCMake.CMP0064
  Test #348: RunCMake.CMP0069
  Test #349: RunCMake.CMP0081
  Test #350: RunCMake.CMP0102
  Test #351: RunCMake.CMP0106
  Test #352: RunCMake.CMP0111
  Test #353: RunCMake.CMP0115
  Test #354: RunCMake.CMP0118
  Test #355: RunCMake.CMP0119
  Test #356: RunCMake.CMP0121
  Test #357: RunCMake.CMP0065
  Test #358: RunCMake.Make
  Test #359: RunCMake.CTest
  Test #360: RunCMake.ctest_memcheck
  Test #361: RunCMake.ABI
  Test #362: RunCMake.AndroidTestUtilities
  Test #363: RunCMake.Autogen
  Test #364: RunCMake.ArtifactOutputDirs
  Test #365: RunCMake.BuildDepends
  Test #366: RunCMake.Byproducts
  Test #367: RunCMake.CMakeRoleGlobalProperty
  Test #368: RunCMake.CompilerChange
  Test #369: RunCMake.CompilerNotFound
  Test #370: RunCMake.Configure
  Test #371: RunCMake.DisallowedCommands
  Test #372: RunCMake.ExportCompileCommands
  Test #373: RunCMake.ExcludeFromAll
  Test #374: RunCMake.ExternalData
  Test #375: RunCMake.FeatureSummary
  Test #376: RunCMake.FPHSA
  Test #377: RunCMake.FileAPI
  Test #378: RunCMake.FindBoost
  Test #379: RunCMake.FindLua
  Test #380: RunCMake.FindOpenGL
  Test #381: RunCMake.GenerateExportHeader
  Test #382: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #383: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #384: RunCMake.GenEx-LINK_LANGUAGE
  Test #385: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #386: RunCMake.GenEx-HOST_LINK
  Test #387: RunCMake.GenEx-DEVICE_LINK
  Test #388: RunCMake.GenEx-TARGET_FILE
  Test #389: RunCMake.GenEx-GENEX_EVAL
  Test #390: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #391: RunCMake.GeneratorExpression
  Test #392: RunCMake.GeneratorInstance
  Test #393: RunCMake.GeneratorPlatform
  Test #394: RunCMake.GeneratorToolset
  Test #395: RunCMake.GetPrerequisites
  Test #396: RunCMake.GNUInstallDirs
  Test #397: RunCMake.GoogleTest
  Test #398: RunCMake.Graphviz
  Test #399: RunCMake.TargetPropertyGeneratorExpressions
  Test #400: RunCMake.Languages
  Test #401: RunCMake.LinkStatic
  Test #402: RunCMake.ObjectLibrary
  Test #403: RunCMake.ParseImplicitIncludeInfo
  Test #404: RunCMake.ParseImplicitLinkInfo
  Test #405: RunCMake.RuntimePath
  Test #406: RunCMake.ScriptMode
  Test #407: RunCMake.Swift
  Test #408: RunCMake.TargetObjects
  Test #409: RunCMake.TargetSources
  Test #410: RunCMake.TargetProperties
  Test #411: RunCMake.ToolchainFile
  Test #412: RunCMake.find_dependency
  Test #413: RunCMake.CompileDefinitions
  Test #414: RunCMake.CompileFeatures
  Test #415: RunCMake.Policy
  Test #416: RunCMake.PolicyScope
  Test #417: RunCMake.WriteBasicConfigVersionFile
  Test #418: RunCMake.WriteCompilerDetectionHeader
  Test #419: RunCMake.SourceProperties
  Test #420: RunCMake.PositionIndependentCode
  Test #421: RunCMake.VisibilityPreset
  Test #422: RunCMake.CompatibleInterface
  Test #423: RunCMake.Syntax
  Test #424: RunCMake.WorkingDirectory
  Test #425: RunCMake.MaxRecursionDepth
  Test #426: RunCMake.add_custom_command
  Test #427: RunCMake.add_custom_target
  Test #428: RunCMake.add_dependencies
  Test #429: RunCMake.add_executable
  Test #430: RunCMake.add_library
  Test #431: RunCMake.add_subdirectory
  Test #432: RunCMake.add_test
  Test #433: RunCMake.build_command
  Test #434: RunCMake.execute_process
  Test #435: RunCMake.export
  Test #436: RunCMake.cmake_language
  Test #437: RunCMake.cmake_minimum_required
  Test #438: RunCMake.cmake_parse_arguments
  Test #439: RunCMake.cmake_path
  Test #440: RunCMake.continue
  Test #441: RunCMake.ctest_build
  Test #442: RunCMake.ctest_cmake_error
  Test #443: RunCMake.ctest_configure
  Test #444: RunCMake.ctest_coverage
  Test #445: RunCMake.ctest_start
  Test #446: RunCMake.ctest_submit
  Test #447: RunCMake.ctest_test
  Test #448: RunCMake.ctest_disabled_test
  Test #449: RunCMake.ctest_skipped_test
  Test #450: RunCMake.ctest_update
  Test #451: RunCMake.ctest_upload
  Test #452: RunCMake.ctest_fixtures
  Test #453: RunCMake.file
  Test #454: RunCMake.file-CHMOD
  Test #455: RunCMake.file-RPATH
  Test #456: RunCMake.find_file
  Test #457: RunCMake.find_library
  Test #458: RunCMake.find_package
  Test #459: RunCMake.find_path
  Test #460: RunCMake.find_program
  Test #461: RunCMake.foreach
  Test #462: RunCMake.function
  Test #463: RunCMake.get_filename_component
  Test #464: RunCMake.get_property
  Test #465: RunCMake.if
  Test #466: RunCMake.include
  Test #467: RunCMake.include_directories
  Test #468: RunCMake.include_guard
  Test #469: RunCMake.list
  Test #470: RunCMake.load_cache
  Test #471: RunCMake.math
  Test #472: RunCMake.message
  Test #473: RunCMake.option
  Test #474: RunCMake.project
  Test #475: RunCMake.project_injected
  Test #476: RunCMake.return
  Test #477: RunCMake.separate_arguments
  Test #478: RunCMake.set_property
  Test #479: RunCMake.string
  Test #480: RunCMake.test_include_dirs
  Test #481: RunCMake.BundleUtilities
  Test #482: RunCMake.try_compile
  Test #483: RunCMake.try_run
  Test #484: RunCMake.set
  Test #485: RunCMake.variable_watch
  Test #486: RunCMake.while
  Test #487: RunCMake.CMP0004
  Test #488: RunCMake.TargetPolicies
  Test #489: RunCMake.alias_targets
  Test #490: RunCMake.InterfaceLibrary
  Test #491: RunCMake.no_install_prefix
  Test #492: RunCMake.configure_file
  Test #493: RunCMake.CTestTimeout
  Test #494: RunCMake.CTestTimeoutAfterMatch
  Test #495: RunCMake.DependencyGraph
  Test #496: RunCMake.CTestResourceAllocation
  Test #497: RunCMake.SymlinkTrees
  Test #498: RunCMake.FindPkgConfig
  Test #499: RunCMake.File_Archive
  Test #500: RunCMake.File_Configure
  Test #501: RunCMake.File_Generate
  Test #502: RunCMake.ExportWithoutLanguage
  Test #503: RunCMake.target_link_directories
  Test #504: RunCMake.target_link_libraries
  Test #505: RunCMake.target_link_libraries-ALIAS
  Test #506: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #507: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #508: RunCMake.add_link_options
  Test #509: RunCMake.target_link_options
  Test #510: RunCMake.target_compile_definitions
  Test #511: RunCMake.target_compile_features
  Test #512: RunCMake.target_compile_options
  Test #513: RunCMake.target_include_directories
  Test #514: RunCMake.target_sources
  Test #515: RunCMake.CheckCompilerFlag
  Test #516: RunCMake.CheckSourceCompiles
  Test #517: RunCMake.CheckSourceRuns
  Test #518: RunCMake.CheckModules
  Test #519: RunCMake.CheckIPOSupported
  Test #520: RunCMake.CheckLinkerFlag
  Test #521: RunCMake.CommandLine
  Test #522: RunCMake.CommandLineTar
  Test #523: RunCMake.install
  Test #524: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #525: RunCMake.CPackCommandLine
  Test #526: RunCMake.CPackConfig
  Test #527: RunCMake.CPackInstallProperties
  Test #528: RunCMake.ExternalProject
  Test #529: RunCMake.FetchContent
  Test #530: RunCMake.CTestCommandLine
  Test #531: RunCMake.CacheNewline
  Test #532: RunCMake.CPackSymlinks
  Test #533: RunCMake.IfacePaths_INCDIRS
  Test #534: RunCMake.IfacePaths_SOURCES
  Test #535: RunCMake.CrosscompilingEmulator
  Test #536: RunCMake.LinkWhatYouUse
  Test #537: RunCMake.ClangTidy
  Test #538: RunCMake.IncludeWhatYouUse
  Test #539: RunCMake.Cpplint
  Test #540: RunCMake.Cppcheck
  Test #541: RunCMake.MultiLint
  Test #542: RunCMake.CompilerLauncher
  Test #543: RunCMake.ctest_labels_for_subprojects
  Test #544: RunCMake.CompilerArgs
  Test #545: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #546: RunCMake.CPack_DEB.DEBUGINFO
  Test #547: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #548: RunCMake.CPack_DEB.DEPENDENCIES
  Test #549: RunCMake.CPack_DEB.EMPTY_DIR
  Test #550: RunCMake.CPack_DEB.VERSION
  Test #551: RunCMake.CPack_DEB.EXTRA
  Test #552: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #553: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #554: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #555: RunCMake.CPack_DEB.MINIMAL
  Test #556: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #557: RunCMake.CPack_DEB.TIMESTAMPS
  Test #558: RunCMake.CPack_DEB.MD5SUMS
  Test #559: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #560: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #561: RunCMake.CPack_DEB.PROJECT_META
  Test #562: RunCMake.CPack_7Z
  Test #563: RunCMake.CPack_TBZ2
  Test #564: RunCMake.CPack_TGZ
  Test #565: RunCMake.CPack_TXZ
  Test #566: RunCMake.CPack_TZ
  Test #567: RunCMake.CPack_ZIP
  Test #568: RunCMake.CPack_STGZ
  Test #569: RunCMake.CPack_External
  Test #570: RunCMake.AutoExportDll
  Test #571: RunCMake.AndroidMK
  Test #572: RunCMake.CTestCommandExpandLists
  Test #573: RunCMake.PrecompileHeaders
  Test #574: RunCMake.UnityBuild
  Test #575: RunCMake.CMakePresets
  Test #576: RunCMake.CMakePresetsBuild
  Test #577: RunCMake.CMakePresetsTest
  Test #578: RunCMake.TransformDepfile
  Test #579: FindPackageModeMakefileTest
  Test #580: FindThreads.C-only
  Test #581: FindThreads.CXX-only
  Test #582: CMake.List
  Test #583: CMake.VariableWatch
  Test #584: CMake.Include
  Test #585: CMake.FindBase
  Test #586: CMake.Toolchain
  Test #587: CMake.GetFilenameComponentRealpath
  Test #588: CMake.Version
  Test #589: CMake.Message
  Test #590: CMake.File
  Test #591: CMake.ImplicitLinkInfo
  Test #592: CMake.ModuleNotices
  Test #593: CMake.GetProperty
  Test #594: CMake.If
  Test #595: CMake.String
  Test #596: CMake.Math
  Test #597: CMake.CMakeMinimumRequired
  Test #598: CMake.CompilerIdVendor
  Test #599: CMake.ProcessorCount
  Test #600: CMake.PushCheckState
  Test #601: CMake.While
  Test #602: CMake.CMakeHostSystemInformation
  Test #603: CMake.FileDownload
  Test #604: CMake.FileDownloadBadHash
  Test #605: CMake.FileUpload
  Test #606: CMake.EndStuff
  Test #607: CMake.GetPrerequisites
  Test #608: CMake.PolicyCheck
  Test #609: CMake.CheckSourceTree

Total Tests: 609
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -R complex -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test #153: complex
  Test #154: complexOneConfig

Total Tests: 2
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -E Simple -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: PreOrder
  Test  #36: MissingSourceFile
  Test  #37: COnly
  Test  #38: CxxOnly
  Test  #39: CxxSubdirC
  Test  #40: OutDir
  Test  #41: OutName
  Test  #42: ObjectLibrary
  Test  #43: NewlineArgs
  Test  #44: SetLang
  Test  #45: EmptyProperty
  Test  #46: ExternalOBJ
  Test  #47: LoadCommand
  Test  #48: LinkDirectory
  Test  #49: LinkLanguage
  Test  #50: LinkLine
  Test  #51: MacroTest
  Test  #52: FunctionTest
  Test  #53: ReturnTest
  Test  #54: Properties
  Test  #55: Assembler
  Test  #56: SourceGroups
  Test  #57: Preprocess
  Test  #58: ExportImport
  Test  #59: Unset
  Test  #60: PolicyScope
  Test  #61: EmptyLibrary
  Test  #62: CompileDefinitions
  Test  #63: CompileOptions
  Test  #64: CompatibleInterface
  Test  #65: AliasTarget
  Test  #66: StagingPrefix
  Test  #67: ImportedSameName
  Test  #68: InterfaceLibrary
  Test  #69: ConfigSources
  Test  #70: SourcesProperty
  Test  #71: SourceFileProperty
  Test  #72: SourceFileIncludeDirProperty
  Test  #73: CxxDialect
  Test  #74: CrossCompile
  Test  #75: Policy0002
  Test  #76: BundleUtilities
  Test  #77: CMakeBuildTest
  Test  #78: CMakeDoubleProject
  Test  #79: Module.CheckTypeSize
  Test  #80: Module.CheckIPOSupported-C
  Test  #81: Module.CheckIPOSupported-CXX
  Test  #82: Module.ExternalData
  Test  #83: Module.FindDependency
  Test  #84: Module.WriteCompilerDetectionHeader
  Test  #85: PositionIndependentTargets
  Test  #86: Visibility
  Test  #87: LinkFlags-prepare
  Test  #88: LinkFlags-lib
  Test  #89: LinkFlags-dll
  Test  #90: LinkFlags-mod
  Test  #91: LinkFlags-exe
  Test  #92: LinkFlags-lib_config
  Test  #93: LinkFlags-dll_config
  Test  #94: LinkFlags-mod_config
  Test  #95: LinkFlags-exe_config
  Test  #96: LinkFlags-lib_flags
  Test  #97: LinkFlags-dll_flags
  Test  #98: LinkFlags-mod_flags
  Test  #99: LinkFlags-exe_flags
  Test #100: LinkFlags-lib_flags_config
  Test #101: LinkFlags-dll_flags_config
  Test #102: LinkFlags-mod_flags_config
  Test #103: LinkFlags-exe_flags_config
  Test #104: SubProject
  Test #105: SubProject-Stage2
  Test #106: Framework
  Test #107: TargetName
  Test #108: LibName
  Test #109: CustComDepend
  Test #110: ArgumentExpansion
  Test #111: GeneratorExpression
  Test #112: CustomCommand
  Test #113: CustomCommandByproducts
  Test #114: CommandLength
  Test #115: EmptyDepends
  Test #116: CustomCommandWorkingDirectory
  Test #117: OutOfSource
  Test #118: BuildDepends
  Test #119: MissingInstall
  Test #120: CPackUseDefaultVersion
  Test #121: CPackUseProjectVersion
  Test #122: CPackUseShortProjectVersion
  Test #123: CPackComponents
  Test #124: CPackComponentsForAll-DEB-default
  Test #125: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #126: CPackComponentsForAll-DEB-IgnoreGroup
  Test #127: CPackComponentsForAll-DEB-AllInOne
  Test #128: CPackComponentsForAll-ZIP-default
  Test #129: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #130: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #131: CPackComponentsForAll-ZIP-AllInOne
  Test #132: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #133: CPackComponentsDEB-components-description1
  Test #134: CPackComponentsDEB-components-description2
  Test #135: CPackComponentsDEB-components-source
  Test #136: CPackComponentsDEB-components-shlibdeps1
  Test #137: CPackComponentsDEB-components-depend1
  Test #138: CPackComponentsDEB-components-depend2
  Test #139: CPackComponentsDEB-compression
  Test #140: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #141: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #142: CPackTestAllGenerators
  Test #143: CPackComponentsPrefix
  Test #144: X11
  Test #145: CMakeTestAllGenerators
  Test #146: LoadedCommandOneConfig
  Test #147: complex
  Test #148: complexOneConfig
  Test #149: Environment
  Test #150: QtAutomocNoQt
  Test #151: ExternalProject
  Test #152: ExternalProjectSubdir
  Test #153: ExternalProjectSourceSubdir
  Test #154: ExternalProjectSourceSubdirNotCMake
  Test #155: ExternalProjectLocal
  Test #156: ExternalProjectUpdateSetup
  Test #157: ExternalProjectUpdate
  Test #158: TutorialStep2
  Test #159: TutorialStep3
  Test #160: TutorialStep4
  Test #161: TutorialStep5
  Test #162: TutorialStep6
  Test #163: TutorialStep7
  Test #164: TutorialStep8
  Test #165: TutorialStep9
  Test #166: TutorialStep10
  Test #167: TutorialStep11
  Test #168: TutorialStep12
  Test #169: TutorialComplete
  Test #170: TutorialStep3_MYMATH
  Test #171: TutorialStep4_MYMATH
  Test #172: TutorialStep5_MYMATH
  Test #173: TutorialStep6_MYMATH
  Test #174: TutorialStep7_MYMATH
  Test #175: TutorialStep8_MYMATH
  Test #176: TutorialStep9_MYMATH
  Test #177: TutorialStep10_MYMATH
  Test #178: TutorialStep11_MYMATH
  Test #179: TutorialStep12_MYMATH
  Test #180: TutorialComplete_MYMATH
  Test #181: Guide.ImportExport.MyExe
  Test #182: Guide.ImportExport.Importing
  Test #183: Guide.ImportExport.MathFunctions
  Test #184: Guide.ImportExport.Downstream
  Test #185: Guide.ImportExport.MathFunctionsComponents
  Test #186: Guide.ImportExport.DownstreamComponents
  Test #187: testing
  Test #188: wrapping
  Test #189: qtwrapping
  Test #190: testdriver1
  Test #191: testdriver2
  Test #192: testdriver3
  Test #193: Dependency
  Test #194: JumpWithLibOut
  Test #195: JumpNoLibOut
  Test #196: Plugin
  Test #197: RuntimePath
  Test #198: linkorder1
  Test #199: linkorder2
  Test #200: SubDirSpaces
  Test #201: SubDir
  Test #202: CheckCompilerRelatedVariables
  Test #203: MakeClean
  Test #204: WarnUnusedCliUnused
  Test #205: WarnUnusedCliUsed
  Test #206: WarnUninitialized
  Test #207: TestsWorkingDirectory
  Test #208: CTest.NoNewline
  Test #209: CTest.BuildCommand.ProjectInSubdir
  Test #210: CTest.UpdateGIT
  Test #211: CTestTestNoBuild
  Test #212: CTestTestNoExe
  Test #213: CTestTestUpload
  Test #214: CTestCoverageCollectGCOV
  Test #215: CTestTestEmptyBinaryDirectory
  Test #216: CTestGTMCoverage
  Test #217: CTestCacheCoverage
  Test #218: CTestPythonCoverage
  Test #219: CTestCoberturaCoverage
  Test #220: CTestJacocoCoverage
  Test #221: CTestJavascriptCoverage
  Test #222: CTestDelphiCoverage
  Test #223: CTestConfig.Script.Debug
  Test #224: CTestConfig.Dashboard.Debug
  Test #225: CTestConfig.Script.MinSizeRel
  Test #226: CTestConfig.Dashboard.MinSizeRel
  Test #227: CTestConfig.Script.Release
  Test #228: CTestConfig.Dashboard.Release
  Test #229: CTestConfig.Script.RelWithDebInfo
  Test #230: CTestConfig.Dashboard.RelWithDebInfo
  Test #231: CTestConfig.ScriptWithArgs
  Test #232: CMakeCommands.add_compile_definitions
  Test #233: CMakeCommands.add_compile_options
  Test #234: CMakeCommands.target_link_libraries
  Test #235: CMakeCommands.target_include_directories
  Test #236: CMakeCommands.target_compile_definitions
  Test #237: CMakeCommands.target_compile_options
  Test #238: CMakeCommands.target_sources
  Test #239: CMakeCommands.add_link_options
  Test #240: CMakeCommands.target_link_options
  Test #241: CMakeCommands.link_directories
  Test #242: CMakeCommands.target_link_directories
  Test #243: CTestTestCrash
  Test #244: CTestTestBadExe
  Test #245: CTestTestBadGenerator
  Test #246: CTestTestParallel
  Test #247: CTestTestVerboseOutput
  Test #248: CTestTestSkipReturnCode
  Test #249: CTestTestSerialInDepends
  Test #250: CTestTestMissingDependsExe
  Test #251: CTestTestSerialOrder
  Test #252: CTestLimitDashJ
  Test #253: CTestTestPrintLabels
  Test #254: CTestTestLabelRegExp
  Test #255: CTestTestResourceLock
  Test #256: CTestTestScheduler
  Test #257: CTestTestCostSerial
  Test #258: CTestTestStopTime
  Test #259: CTestTestSubdir
  Test #260: CTestTestTimeout
  Test #261: CTestTestRerunFailed
  Test #262: CTestTestZeroTimeout
  Test #263: CTestTestDepends
  Test #264: CTestTestCycle
  Test #265: CTestTestRunScript
  Test #266: CTestTestShowOnly
  Test #267: CTestTestFdSetSize
  Test #268: BootstrapTest
  Test #269: JavaExportImport
  Test #270: CompileCommandOutput
  Test #271: IncludeDirectories
  Test #272: IncludeDirectoriesCPATH
  Test #273: InterfaceLinkLibraries
  Test #274: CMakeLib.testArgumentParser
  Test #275: CMakeLib.testCTestBinPacker
  Test #276: CMakeLib.testCTestResourceAllocator
  Test #277: CMakeLib.testCTestResourceSpec
  Test #278: CMakeLib.testCTestResourceGroups
  Test #279: CMakeLib.testGccDepfileReader
  Test #280: CMakeLib.testGeneratedFileStream
  Test #281: CMakeLib.testJSONHelpers
  Test #282: CMakeLib.testRST
  Test #283: CMakeLib.testRange
  Test #284: CMakeLib.testOptional
  Test #285: CMakeLib.testString
  Test #286: CMakeLib.testStringAlgorithms
  Test #287: CMakeLib.testSystemTools
  Test #288: CMakeLib.testUTF8
  Test #289: CMakeLib.testXMLParser
  Test #290: CMakeLib.testXMLSafe
  Test #291: CMakeLib.testFindPackageCommand
  Test #292: CMakeLib.testUVProcessChain
  Test #293: CMakeLib.testUVRAII
  Test #294: CMakeLib.testUVStreambuf
  Test #295: CMakeLib.testCMExtMemory
  Test #296: CMakeLib.testCMExtAlgorithm
  Test #297: CMakeOnly.LinkInterfaceLoop
  Test #298: CMakeOnly.CheckSymbolExists
  Test #299: CMakeOnly.CheckCXXSymbolExists
  Test #300: CMakeOnly.CheckCXXCompilerFlag
  Test #301: CMakeOnly.CheckLanguage
  Test #302: CMakeOnly.CheckStructHasMember
  Test #303: CMakeOnly.CompilerIdC
  Test #304: CMakeOnly.CompilerIdCXX
  Test #305: CMakeOnly.AllFindModules
  Test #306: CMakeOnly.SelectLibraryConfigurations
  Test #307: CMakeOnly.TargetScope
  Test #308: CMakeOnly.find_library
  Test #309: CMakeOnly.find_path
  Test #310: CMakeOnly.ProjectInclude
  Test #311: CMakeOnly.ProjectIncludeAny
  Test #312: CMakeOnly.ProjectIncludeBefore
  Test #313: CMakeOnly.ProjectIncludeBeforeAny
  Test #314: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #315: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #316: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #317: CMakeOnly.MajorVersionSelection-Qt_3
  Test #318: CMakeOnly.MajorVersionSelection-Qt_4
  Test #319: RunCMake.CMP0019
  Test #320: RunCMake.CMP0022
  Test #321: RunCMake.CMP0026
  Test #322: RunCMake.CMP0027
  Test #323: RunCMake.CMP0028
  Test #324: RunCMake.CMP0037
  Test #325: RunCMake.CMP0038
  Test #326: RunCMake.CMP0039
  Test #327: RunCMake.CMP0040
  Test #328: RunCMake.CMP0041
  Test #329: RunCMake.CMP0043
  Test #330: RunCMake.CMP0045
  Test #331: RunCMake.CMP0046
  Test #332: RunCMake.CMP0049
  Test #333: RunCMake.CMP0050
  Test #334: RunCMake.CMP0051
  Test #335: RunCMake.CMP0053
  Test #336: RunCMake.CMP0054
  Test #337: RunCMake.CMP0055
  Test #338: RunCMake.CMP0057
  Test #339: RunCMake.CMP0059
  Test #340: RunCMake.CMP0060
  Test #341: RunCMake.CMP0064
  Test #342: RunCMake.CMP0069
  Test #343: RunCMake.CMP0081
  Test #344: RunCMake.CMP0102
  Test #345: RunCMake.CMP0106
  Test #346: RunCMake.CMP0111
  Test #347: RunCMake.CMP0115
  Test #348: RunCMake.CMP0118
  Test #349: RunCMake.CMP0119
  Test #350: RunCMake.CMP0121
  Test #351: RunCMake.CMP0065
  Test #352: RunCMake.Make
  Test #353: RunCMake.CTest
  Test #354: RunCMake.ctest_memcheck
  Test #355: RunCMake.ABI
  Test #356: RunCMake.AndroidTestUtilities
  Test #357: RunCMake.Autogen
  Test #358: RunCMake.ArtifactOutputDirs
  Test #359: RunCMake.BuildDepends
  Test #360: RunCMake.Byproducts
  Test #361: RunCMake.CMakeRoleGlobalProperty
  Test #362: RunCMake.CompilerChange
  Test #363: RunCMake.CompilerNotFound
  Test #364: RunCMake.Configure
  Test #365: RunCMake.DisallowedCommands
  Test #366: RunCMake.ExportCompileCommands
  Test #367: RunCMake.ExcludeFromAll
  Test #368: RunCMake.ExternalData
  Test #369: RunCMake.FeatureSummary
  Test #370: RunCMake.FPHSA
  Test #371: RunCMake.FileAPI
  Test #372: RunCMake.FindBoost
  Test #373: RunCMake.FindLua
  Test #374: RunCMake.FindOpenGL
  Test #375: RunCMake.GenerateExportHeader
  Test #376: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #377: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #378: RunCMake.GenEx-LINK_LANGUAGE
  Test #379: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #380: RunCMake.GenEx-HOST_LINK
  Test #381: RunCMake.GenEx-DEVICE_LINK
  Test #382: RunCMake.GenEx-TARGET_FILE
  Test #383: RunCMake.GenEx-GENEX_EVAL
  Test #384: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #385: RunCMake.GeneratorExpression
  Test #386: RunCMake.GeneratorInstance
  Test #387: RunCMake.GeneratorPlatform
  Test #388: RunCMake.GeneratorToolset
  Test #389: RunCMake.GetPrerequisites
  Test #390: RunCMake.GNUInstallDirs
  Test #391: RunCMake.GoogleTest
  Test #392: RunCMake.Graphviz
  Test #393: RunCMake.TargetPropertyGeneratorExpressions
  Test #394: RunCMake.Languages
  Test #395: RunCMake.LinkStatic
  Test #396: RunCMake.ObjectLibrary
  Test #397: RunCMake.ParseImplicitIncludeInfo
  Test #398: RunCMake.ParseImplicitLinkInfo
  Test #399: RunCMake.RuntimePath
  Test #400: RunCMake.ScriptMode
  Test #401: RunCMake.Swift
  Test #402: RunCMake.TargetObjects
  Test #403: RunCMake.TargetSources
  Test #404: RunCMake.TargetProperties
  Test #405: RunCMake.ToolchainFile
  Test #406: RunCMake.find_dependency
  Test #407: RunCMake.CompileDefinitions
  Test #408: RunCMake.CompileFeatures
  Test #409: RunCMake.Policy
  Test #410: RunCMake.PolicyScope
  Test #411: RunCMake.WriteBasicConfigVersionFile
  Test #412: RunCMake.WriteCompilerDetectionHeader
  Test #413: RunCMake.SourceProperties
  Test #414: RunCMake.PositionIndependentCode
  Test #415: RunCMake.VisibilityPreset
  Test #416: RunCMake.CompatibleInterface
  Test #417: RunCMake.Syntax
  Test #418: RunCMake.WorkingDirectory
  Test #419: RunCMake.MaxRecursionDepth
  Test #420: RunCMake.add_custom_command
  Test #421: RunCMake.add_custom_target
  Test #422: RunCMake.add_dependencies
  Test #423: RunCMake.add_executable
  Test #424: RunCMake.add_library
  Test #425: RunCMake.add_subdirectory
  Test #426: RunCMake.add_test
  Test #427: RunCMake.build_command
  Test #428: RunCMake.execute_process
  Test #429: RunCMake.export
  Test #430: RunCMake.cmake_language
  Test #431: RunCMake.cmake_minimum_required
  Test #432: RunCMake.cmake_parse_arguments
  Test #433: RunCMake.cmake_path
  Test #434: RunCMake.continue
  Test #435: RunCMake.ctest_build
  Test #436: RunCMake.ctest_cmake_error
  Test #437: RunCMake.ctest_configure
  Test #438: RunCMake.ctest_coverage
  Test #439: RunCMake.ctest_start
  Test #440: RunCMake.ctest_submit
  Test #441: RunCMake.ctest_test
  Test #442: RunCMake.ctest_disabled_test
  Test #443: RunCMake.ctest_skipped_test
  Test #444: RunCMake.ctest_update
  Test #445: RunCMake.ctest_upload
  Test #446: RunCMake.ctest_fixtures
  Test #447: RunCMake.file
  Test #448: RunCMake.file-CHMOD
  Test #449: RunCMake.file-RPATH
  Test #450: RunCMake.find_file
  Test #451: RunCMake.find_library
  Test #452: RunCMake.find_package
  Test #453: RunCMake.find_path
  Test #454: RunCMake.find_program
  Test #455: RunCMake.foreach
  Test #456: RunCMake.function
  Test #457: RunCMake.get_filename_component
  Test #458: RunCMake.get_property
  Test #459: RunCMake.if
  Test #460: RunCMake.include
  Test #461: RunCMake.include_directories
  Test #462: RunCMake.include_guard
  Test #463: RunCMake.list
  Test #464: RunCMake.load_cache
  Test #465: RunCMake.math
  Test #466: RunCMake.message
  Test #467: RunCMake.option
  Test #468: RunCMake.project
  Test #469: RunCMake.project_injected
  Test #470: RunCMake.return
  Test #471: RunCMake.separate_arguments
  Test #472: RunCMake.set_property
  Test #473: RunCMake.string
  Test #474: RunCMake.test_include_dirs
  Test #475: RunCMake.BundleUtilities
  Test #476: RunCMake.try_compile
  Test #477: RunCMake.try_run
  Test #478: RunCMake.set
  Test #479: RunCMake.variable_watch
  Test #480: RunCMake.while
  Test #481: RunCMake.CMP0004
  Test #482: RunCMake.TargetPolicies
  Test #483: RunCMake.alias_targets
  Test #484: RunCMake.InterfaceLibrary
  Test #485: RunCMake.no_install_prefix
  Test #486: RunCMake.configure_file
  Test #487: RunCMake.CTestTimeout
  Test #488: RunCMake.CTestTimeoutAfterMatch
  Test #489: RunCMake.DependencyGraph
  Test #490: RunCMake.CTestResourceAllocation
  Test #491: RunCMake.SymlinkTrees
  Test #492: RunCMake.FindPkgConfig
  Test #493: RunCMake.File_Archive
  Test #494: RunCMake.File_Configure
  Test #495: RunCMake.File_Generate
  Test #496: RunCMake.ExportWithoutLanguage
  Test #497: RunCMake.target_link_directories
  Test #498: RunCMake.target_link_libraries
  Test #499: RunCMake.target_link_libraries-ALIAS
  Test #500: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #501: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #502: RunCMake.add_link_options
  Test #503: RunCMake.target_link_options
  Test #504: RunCMake.target_compile_definitions
  Test #505: RunCMake.target_compile_features
  Test #506: RunCMake.target_compile_options
  Test #507: RunCMake.target_include_directories
  Test #508: RunCMake.target_sources
  Test #509: RunCMake.CheckCompilerFlag
  Test #510: RunCMake.CheckSourceCompiles
  Test #511: RunCMake.CheckSourceRuns
  Test #512: RunCMake.CheckModules
  Test #513: RunCMake.CheckIPOSupported
  Test #514: RunCMake.CheckLinkerFlag
  Test #515: RunCMake.CommandLine
  Test #516: RunCMake.CommandLineTar
  Test #517: RunCMake.install
  Test #518: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #519: RunCMake.CPackCommandLine
  Test #520: RunCMake.CPackConfig
  Test #521: RunCMake.CPackInstallProperties
  Test #522: RunCMake.ExternalProject
  Test #523: RunCMake.FetchContent
  Test #524: RunCMake.CTestCommandLine
  Test #525: RunCMake.CacheNewline
  Test #526: RunCMake.CPackSymlinks
  Test #527: RunCMake.IfacePaths_INCDIRS
  Test #528: RunCMake.IfacePaths_SOURCES
  Test #529: RunCMake.CrosscompilingEmulator
  Test #530: RunCMake.LinkWhatYouUse
  Test #531: RunCMake.ClangTidy
  Test #532: RunCMake.IncludeWhatYouUse
  Test #533: RunCMake.Cpplint
  Test #534: RunCMake.Cppcheck
  Test #535: RunCMake.MultiLint
  Test #536: RunCMake.CompilerLauncher
  Test #537: RunCMake.ctest_labels_for_subprojects
  Test #538: RunCMake.CompilerArgs
  Test #539: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #540: RunCMake.CPack_DEB.DEBUGINFO
  Test #541: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #542: RunCMake.CPack_DEB.DEPENDENCIES
  Test #543: RunCMake.CPack_DEB.EMPTY_DIR
  Test #544: RunCMake.CPack_DEB.VERSION
  Test #545: RunCMake.CPack_DEB.EXTRA
  Test #546: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #547: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #548: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #549: RunCMake.CPack_DEB.MINIMAL
  Test #550: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #551: RunCMake.CPack_DEB.TIMESTAMPS
  Test #552: RunCMake.CPack_DEB.MD5SUMS
  Test #553: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #554: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #555: RunCMake.CPack_DEB.PROJECT_META
  Test #556: RunCMake.CPack_7Z
  Test #557: RunCMake.CPack_TBZ2
  Test #558: RunCMake.CPack_TGZ
  Test #559: RunCMake.CPack_TXZ
  Test #560: RunCMake.CPack_TZ
  Test #561: RunCMake.CPack_ZIP
  Test #562: RunCMake.CPack_STGZ
  Test #563: RunCMake.CPack_External
  Test #564: RunCMake.AutoExportDll
  Test #565: RunCMake.AndroidMK
  Test #566: RunCMake.CTestCommandExpandLists
  Test #567: RunCMake.PrecompileHeaders
  Test #568: RunCMake.UnityBuild
  Test #569: RunCMake.CMakePresets
  Test #570: RunCMake.CMakePresetsBuild
  Test #571: RunCMake.CMakePresetsTest
  Test #572: RunCMake.TransformDepfile
  Test #573: FindPackageModeMakefileTest
  Test #574: FindThreads.C-only
  Test #575: FindThreads.CXX-only
  Test #576: CMake.List
  Test #577: CMake.VariableWatch
  Test #578: CMake.Include
  Test #579: CMake.FindBase
  Test #580: CMake.Toolchain
  Test #581: CMake.GetFilenameComponentRealpath
  Test #582: CMake.Version
  Test #583: CMake.Message
  Test #584: CMake.File
  Test #585: CMake.ImplicitLinkInfo
  Test #586: CMake.ModuleNotices
  Test #587: CMake.GetProperty
  Test #588: CMake.If
  Test #589: CMake.String
  Test #590: CMake.Math
  Test #591: CMake.CMakeMinimumRequired
  Test #592: CMake.CompilerIdVendor
  Test #593: CMake.ProcessorCount
  Test #594: CMake.PushCheckState
  Test #595: CMake.While
  Test #596: CMake.CMakeHostSystemInformation
  Test #597: CMake.FileDownload
  Test #598: CMake.FileDownloadBadHash
  Test #599: CMake.FileUpload
  Test #600: CMake.EndStuff
  Test #601: CMake.GetPrerequisites
  Test #602: CMake.PolicyCheck
  Test #603: CMake.CheckSourceTree

Total Tests: 603
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -E Simple -N  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: PreOrder
  Test  #36: MissingSourceFile
  Test  #37: COnly
  Test  #38: CxxOnly
  Test  #39: CxxSubdirC
  Test  #40: OutDir
  Test  #41: OutName
  Test  #42: ObjectLibrary
  Test  #43: NewlineArgs
  Test  #44: SetLang
  Test  #45: EmptyProperty
  Test  #46: ExternalOBJ
  Test  #47: LoadCommand
  Test  #48: LinkDirectory
  Test  #49: LinkLanguage
  Test  #50: LinkLine
  Test  #51: MacroTest
  Test  #52: FunctionTest
  Test  #53: ReturnTest
  Test  #54: Properties
  Test  #55: Assembler
  Test  #56: SourceGroups
  Test  #57: Preprocess
  Test  #58: ExportImport
  Test  #59: Unset
  Test  #60: PolicyScope
  Test  #61: EmptyLibrary
  Test  #62: CompileDefinitions
  Test  #63: CompileOptions
  Test  #64: CompatibleInterface
  Test  #65: AliasTarget
  Test  #66: StagingPrefix
  Test  #67: ImportedSameName
  Test  #68: InterfaceLibrary
  Test  #69: ConfigSources
  Test  #70: SourcesProperty
  Test  #71: SourceFileProperty
  Test  #72: SourceFileIncludeDirProperty
  Test  #73: CxxDialect
  Test  #74: CrossCompile
  Test  #75: Policy0002
  Test  #76: BundleUtilities
  Test  #77: CMakeBuildTest
  Test  #78: CMakeDoubleProject
  Test  #79: Module.CheckTypeSize
  Test  #80: Module.CheckIPOSupported-C
  Test  #81: Module.CheckIPOSupported-CXX
  Test  #82: Module.ExternalData
  Test  #83: Module.FindDependency
  Test  #84: Module.WriteCompilerDetectionHeader
  Test  #85: PositionIndependentTargets
  Test  #86: Visibility
  Test  #87: LinkFlags-prepare
  Test  #88: LinkFlags-lib
  Test  #89: LinkFlags-dll
  Test  #90: LinkFlags-mod
  Test  #91: LinkFlags-exe
  Test  #92: LinkFlags-lib_config
  Test  #93: LinkFlags-dll_config
  Test  #94: LinkFlags-mod_config
  Test  #95: LinkFlags-exe_config
  Test  #96: LinkFlags-lib_flags
  Test  #97: LinkFlags-dll_flags
  Test  #98: LinkFlags-mod_flags
  Test  #99: LinkFlags-exe_flags
  Test #100: LinkFlags-lib_flags_config
  Test #101: LinkFlags-dll_flags_config
  Test #102: LinkFlags-mod_flags_config
  Test #103: LinkFlags-exe_flags_config
  Test #104: SubProject
  Test #105: SubProject-Stage2
  Test #106: Framework
  Test #107: TargetName
  Test #108: LibName
  Test #109: CustComDepend
  Test #110: ArgumentExpansion
  Test #111: GeneratorExpression
  Test #112: CustomCommand
  Test #113: CustomCommandByproducts
  Test #114: CommandLength
  Test #115: EmptyDepends
  Test #116: CustomCommandWorkingDirectory
  Test #117: OutOfSource
  Test #118: BuildDepends
  Test #119: MissingInstall
  Test #120: CPackUseDefaultVersion
  Test #121: CPackUseProjectVersion
  Test #122: CPackUseShortProjectVersion
  Test #123: CPackComponents
  Test #124: CPackComponentsForAll-DEB-default
  Test #125: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #126: CPackComponentsForAll-DEB-IgnoreGroup
  Test #127: CPackComponentsForAll-DEB-AllInOne
  Test #128: CPackComponentsForAll-ZIP-default
  Test #129: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #130: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #131: CPackComponentsForAll-ZIP-AllInOne
  Test #132: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #133: CPackComponentsDEB-components-description1
  Test #134: CPackComponentsDEB-components-description2
  Test #135: CPackComponentsDEB-components-source
  Test #136: CPackComponentsDEB-components-shlibdeps1
  Test #137: CPackComponentsDEB-components-depend1
  Test #138: CPackComponentsDEB-components-depend2
  Test #139: CPackComponentsDEB-compression
  Test #140: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #141: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #142: CPackTestAllGenerators
  Test #143: CPackComponentsPrefix
  Test #144: X11
  Test #145: CMakeTestAllGenerators
  Test #146: LoadedCommandOneConfig
  Test #147: complex
  Test #148: complexOneConfig
  Test #149: Environment
  Test #150: QtAutomocNoQt
  Test #151: ExternalProject
  Test #152: ExternalProjectSubdir
  Test #153: ExternalProjectSourceSubdir
  Test #154: ExternalProjectSourceSubdirNotCMake
  Test #155: ExternalProjectLocal
  Test #156: ExternalProjectUpdateSetup
  Test #157: ExternalProjectUpdate
  Test #158: TutorialStep2
  Test #159: TutorialStep3
  Test #160: TutorialStep4
  Test #161: TutorialStep5
  Test #162: TutorialStep6
  Test #163: TutorialStep7
  Test #164: TutorialStep8
  Test #165: TutorialStep9
  Test #166: TutorialStep10
  Test #167: TutorialStep11
  Test #168: TutorialStep12
  Test #169: TutorialComplete
  Test #170: TutorialStep3_MYMATH
  Test #171: TutorialStep4_MYMATH
  Test #172: TutorialStep5_MYMATH
  Test #173: TutorialStep6_MYMATH
  Test #174: TutorialStep7_MYMATH
  Test #175: TutorialStep8_MYMATH
  Test #176: TutorialStep9_MYMATH
  Test #177: TutorialStep10_MYMATH
  Test #178: TutorialStep11_MYMATH
  Test #179: TutorialStep12_MYMATH
  Test #180: TutorialComplete_MYMATH
  Test #181: Guide.ImportExport.MyExe
  Test #182: Guide.ImportExport.Importing
  Test #183: Guide.ImportExport.MathFunctions
  Test #184: Guide.ImportExport.Downstream
  Test #185: Guide.ImportExport.MathFunctionsComponents
  Test #186: Guide.ImportExport.DownstreamComponents
  Test #187: testing
  Test #188: wrapping
  Test #189: qtwrapping
  Test #190: testdriver1
  Test #191: testdriver2
  Test #192: testdriver3
  Test #193: Dependency
  Test #194: JumpWithLibOut
  Test #195: JumpNoLibOut
  Test #196: Plugin
  Test #197: RuntimePath
  Test #198: linkorder1
  Test #199: linkorder2
  Test #200: SubDirSpaces
  Test #201: SubDir
  Test #202: CheckCompilerRelatedVariables
  Test #203: MakeClean
  Test #204: WarnUnusedCliUnused
  Test #205: WarnUnusedCliUsed
  Test #206: WarnUninitialized
  Test #207: TestsWorkingDirectory
  Test #208: CTest.NoNewline
  Test #209: CTest.BuildCommand.ProjectInSubdir
  Test #210: CTest.UpdateGIT
  Test #211: CTestTestNoBuild
  Test #212: CTestTestNoExe
  Test #213: CTestTestUpload
  Test #214: CTestCoverageCollectGCOV
  Test #215: CTestTestEmptyBinaryDirectory
  Test #216: CTestGTMCoverage
  Test #217: CTestCacheCoverage
  Test #218: CTestPythonCoverage
  Test #219: CTestCoberturaCoverage
  Test #220: CTestJacocoCoverage
  Test #221: CTestJavascriptCoverage
  Test #222: CTestDelphiCoverage
  Test #223: CTestConfig.Script.Debug
  Test #224: CTestConfig.Dashboard.Debug
  Test #225: CTestConfig.Script.MinSizeRel
  Test #226: CTestConfig.Dashboard.MinSizeRel
  Test #227: CTestConfig.Script.Release
  Test #228: CTestConfig.Dashboard.Release
  Test #229: CTestConfig.Script.RelWithDebInfo
  Test #230: CTestConfig.Dashboard.RelWithDebInfo
  Test #231: CTestConfig.ScriptWithArgs
  Test #232: CMakeCommands.add_compile_definitions
  Test #233: CMakeCommands.add_compile_options
  Test #234: CMakeCommands.target_link_libraries
  Test #235: CMakeCommands.target_include_directories
  Test #236: CMakeCommands.target_compile_definitions
  Test #237: CMakeCommands.target_compile_options
  Test #238: CMakeCommands.target_sources
  Test #239: CMakeCommands.add_link_options
  Test #240: CMakeCommands.target_link_options
  Test #241: CMakeCommands.link_directories
  Test #242: CMakeCommands.target_link_directories
  Test #243: CTestTestCrash
  Test #244: CTestTestBadExe
  Test #245: CTestTestBadGenerator
  Test #246: CTestTestParallel
  Test #247: CTestTestVerboseOutput
  Test #248: CTestTestSkipReturnCode
  Test #249: CTestTestSerialInDepends
  Test #250: CTestTestMissingDependsExe
  Test #251: CTestTestSerialOrder
  Test #252: CTestLimitDashJ
  Test #253: CTestTestPrintLabels
  Test #254: CTestTestLabelRegExp
  Test #255: CTestTestResourceLock
  Test #256: CTestTestScheduler
  Test #257: CTestTestCostSerial
  Test #258: CTestTestStopTime
  Test #259: CTestTestSubdir
  Test #260: CTestTestTimeout
  Test #261: CTestTestRerunFailed
  Test #262: CTestTestZeroTimeout
  Test #263: CTestTestDepends
  Test #264: CTestTestCycle
  Test #265: CTestTestRunScript
  Test #266: CTestTestShowOnly
  Test #267: CTestTestFdSetSize
  Test #268: BootstrapTest
  Test #269: JavaExportImport
  Test #270: CompileCommandOutput
  Test #271: IncludeDirectories
  Test #272: IncludeDirectoriesCPATH
  Test #273: InterfaceLinkLibraries
  Test #274: CMakeLib.testArgumentParser
  Test #275: CMakeLib.testCTestBinPacker
  Test #276: CMakeLib.testCTestResourceAllocator
  Test #277: CMakeLib.testCTestResourceSpec
  Test #278: CMakeLib.testCTestResourceGroups
  Test #279: CMakeLib.testGccDepfileReader
  Test #280: CMakeLib.testGeneratedFileStream
  Test #281: CMakeLib.testJSONHelpers
  Test #282: CMakeLib.testRST
  Test #283: CMakeLib.testRange
  Test #284: CMakeLib.testOptional
  Test #285: CMakeLib.testString
  Test #286: CMakeLib.testStringAlgorithms
  Test #287: CMakeLib.testSystemTools
  Test #288: CMakeLib.testUTF8
  Test #289: CMakeLib.testXMLParser
  Test #290: CMakeLib.testXMLSafe
  Test #291: CMakeLib.testFindPackageCommand
  Test #292: CMakeLib.testUVProcessChain
  Test #293: CMakeLib.testUVRAII
  Test #294: CMakeLib.testUVStreambuf
  Test #295: CMakeLib.testCMExtMemory
  Test #296: CMakeLib.testCMExtAlgorithm
  Test #297: CMakeOnly.LinkInterfaceLoop
  Test #298: CMakeOnly.CheckSymbolExists
  Test #299: CMakeOnly.CheckCXXSymbolExists
  Test #300: CMakeOnly.CheckCXXCompilerFlag
  Test #301: CMakeOnly.CheckLanguage
  Test #302: CMakeOnly.CheckStructHasMember
  Test #303: CMakeOnly.CompilerIdC
  Test #304: CMakeOnly.CompilerIdCXX
  Test #305: CMakeOnly.AllFindModules
  Test #306: CMakeOnly.SelectLibraryConfigurations
  Test #307: CMakeOnly.TargetScope
  Test #308: CMakeOnly.find_library
  Test #309: CMakeOnly.find_path
  Test #310: CMakeOnly.ProjectInclude
  Test #311: CMakeOnly.ProjectIncludeAny
  Test #312: CMakeOnly.ProjectIncludeBefore
  Test #313: CMakeOnly.ProjectIncludeBeforeAny
  Test #314: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #315: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #316: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #317: CMakeOnly.MajorVersionSelection-Qt_3
  Test #318: CMakeOnly.MajorVersionSelection-Qt_4
  Test #319: RunCMake.CMP0019
  Test #320: RunCMake.CMP0022
  Test #321: RunCMake.CMP0026
  Test #322: RunCMake.CMP0027
  Test #323: RunCMake.CMP0028
  Test #324: RunCMake.CMP0037
  Test #325: RunCMake.CMP0038
  Test #326: RunCMake.CMP0039
  Test #327: RunCMake.CMP0040
  Test #328: RunCMake.CMP0041
  Test #329: RunCMake.CMP0043
  Test #330: RunCMake.CMP0045
  Test #331: RunCMake.CMP0046
  Test #332: RunCMake.CMP0049
  Test #333: RunCMake.CMP0050
  Test #334: RunCMake.CMP0051
  Test #335: RunCMake.CMP0053
  Test #336: RunCMake.CMP0054
  Test #337: RunCMake.CMP0055
  Test #338: RunCMake.CMP0057
  Test #339: RunCMake.CMP0059
  Test #340: RunCMake.CMP0060
  Test #341: RunCMake.CMP0064
  Test #342: RunCMake.CMP0069
  Test #343: RunCMake.CMP0081
  Test #344: RunCMake.CMP0102
  Test #345: RunCMake.CMP0106
  Test #346: RunCMake.CMP0111
  Test #347: RunCMake.CMP0115
  Test #348: RunCMake.CMP0118
  Test #349: RunCMake.CMP0119
  Test #350: RunCMake.CMP0121
  Test #351: RunCMake.CMP0065
  Test #352: RunCMake.Make
  Test #353: RunCMake.CTest
  Test #354: RunCMake.ctest_memcheck
  Test #355: RunCMake.ABI
  Test #356: RunCMake.AndroidTestUtilities
  Test #357: RunCMake.Autogen
  Test #358: RunCMake.ArtifactOutputDirs
  Test #359: RunCMake.BuildDepends
  Test #360: RunCMake.Byproducts
  Test #361: RunCMake.CMakeRoleGlobalProperty
  Test #362: RunCMake.CompilerChange
  Test #363: RunCMake.CompilerNotFound
  Test #364: RunCMake.Configure
  Test #365: RunCMake.DisallowedCommands
  Test #366: RunCMake.ExportCompileCommands
  Test #367: RunCMake.ExcludeFromAll
  Test #368: RunCMake.ExternalData
  Test #369: RunCMake.FeatureSummary
  Test #370: RunCMake.FPHSA
  Test #371: RunCMake.FileAPI
  Test #372: RunCMake.FindBoost
  Test #373: RunCMake.FindLua
  Test #374: RunCMake.FindOpenGL
  Test #375: RunCMake.GenerateExportHeader
  Test #376: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #377: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #378: RunCMake.GenEx-LINK_LANGUAGE
  Test #379: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #380: RunCMake.GenEx-HOST_LINK
  Test #381: RunCMake.GenEx-DEVICE_LINK
  Test #382: RunCMake.GenEx-TARGET_FILE
  Test #383: RunCMake.GenEx-GENEX_EVAL
  Test #384: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #385: RunCMake.GeneratorExpression
  Test #386: RunCMake.GeneratorInstance
  Test #387: RunCMake.GeneratorPlatform
  Test #388: RunCMake.GeneratorToolset
  Test #389: RunCMake.GetPrerequisites
  Test #390: RunCMake.GNUInstallDirs
  Test #391: RunCMake.GoogleTest
  Test #392: RunCMake.Graphviz
  Test #393: RunCMake.TargetPropertyGeneratorExpressions
  Test #394: RunCMake.Languages
  Test #395: RunCMake.LinkStatic
  Test #396: RunCMake.ObjectLibrary
  Test #397: RunCMake.ParseImplicitIncludeInfo
  Test #398: RunCMake.ParseImplicitLinkInfo
  Test #399: RunCMake.RuntimePath
  Test #400: RunCMake.ScriptMode
  Test #401: RunCMake.Swift
  Test #402: RunCMake.TargetObjects
  Test #403: RunCMake.TargetSources
  Test #404: RunCMake.TargetProperties
  Test #405: RunCMake.ToolchainFile
  Test #406: RunCMake.find_dependency
  Test #407: RunCMake.CompileDefinitions
  Test #408: RunCMake.CompileFeatures
  Test #409: RunCMake.Policy
  Test #410: RunCMake.PolicyScope
  Test #411: RunCMake.WriteBasicConfigVersionFile
  Test #412: RunCMake.WriteCompilerDetectionHeader
  Test #413: RunCMake.SourceProperties
  Test #414: RunCMake.PositionIndependentCode
  Test #415: RunCMake.VisibilityPreset
  Test #416: RunCMake.CompatibleInterface
  Test #417: RunCMake.Syntax
  Test #418: RunCMake.WorkingDirectory
  Test #419: RunCMake.MaxRecursionDepth
  Test #420: RunCMake.add_custom_command
  Test #421: RunCMake.add_custom_target
  Test #422: RunCMake.add_dependencies
  Test #423: RunCMake.add_executable
  Test #424: RunCMake.add_library
  Test #425: RunCMake.add_subdirectory
  Test #426: RunCMake.add_test
  Test #427: RunCMake.build_command
  Test #428: RunCMake.execute_process
  Test #429: RunCMake.export
  Test #430: RunCMake.cmake_language
  Test #431: RunCMake.cmake_minimum_required
  Test #432: RunCMake.cmake_parse_arguments
  Test #433: RunCMake.cmake_path
  Test #434: RunCMake.continue
  Test #435: RunCMake.ctest_build
  Test #436: RunCMake.ctest_cmake_error
  Test #437: RunCMake.ctest_configure
  Test #438: RunCMake.ctest_coverage
  Test #439: RunCMake.ctest_start
  Test #440: RunCMake.ctest_submit
  Test #441: RunCMake.ctest_test
  Test #442: RunCMake.ctest_disabled_test
  Test #443: RunCMake.ctest_skipped_test
  Test #444: RunCMake.ctest_update
  Test #445: RunCMake.ctest_upload
  Test #446: RunCMake.ctest_fixtures
  Test #447: RunCMake.file
  Test #448: RunCMake.file-CHMOD
  Test #449: RunCMake.file-RPATH
  Test #450: RunCMake.find_file
  Test #451: RunCMake.find_library
  Test #452: RunCMake.find_package
  Test #453: RunCMake.find_path
  Test #454: RunCMake.find_program
  Test #455: RunCMake.foreach
  Test #456: RunCMake.function
  Test #457: RunCMake.get_filename_component
  Test #458: RunCMake.get_property
  Test #459: RunCMake.if
  Test #460: RunCMake.include
  Test #461: RunCMake.include_directories
  Test #462: RunCMake.include_guard
  Test #463: RunCMake.list
  Test #464: RunCMake.load_cache
  Test #465: RunCMake.math
  Test #466: RunCMake.message
  Test #467: RunCMake.option
  Test #468: RunCMake.project
  Test #469: RunCMake.project_injected
  Test #470: RunCMake.return
  Test #471: RunCMake.separate_arguments
  Test #472: RunCMake.set_property
  Test #473: RunCMake.string
  Test #474: RunCMake.test_include_dirs
  Test #475: RunCMake.BundleUtilities
  Test #476: RunCMake.try_compile
  Test #477: RunCMake.try_run
  Test #478: RunCMake.set
  Test #479: RunCMake.variable_watch
  Test #480: RunCMake.while
  Test #481: RunCMake.CMP0004
  Test #482: RunCMake.TargetPolicies
  Test #483: RunCMake.alias_targets
  Test #484: RunCMake.InterfaceLibrary
  Test #485: RunCMake.no_install_prefix
  Test #486: RunCMake.configure_file
  Test #487: RunCMake.CTestTimeout
  Test #488: RunCMake.CTestTimeoutAfterMatch
  Test #489: RunCMake.DependencyGraph
  Test #490: RunCMake.CTestResourceAllocation
  Test #491: RunCMake.SymlinkTrees
  Test #492: RunCMake.FindPkgConfig
  Test #493: RunCMake.File_Archive
  Test #494: RunCMake.File_Configure
  Test #495: RunCMake.File_Generate
  Test #496: RunCMake.ExportWithoutLanguage
  Test #497: RunCMake.target_link_directories
  Test #498: RunCMake.target_link_libraries
  Test #499: RunCMake.target_link_libraries-ALIAS
  Test #500: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #501: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #502: RunCMake.add_link_options
  Test #503: RunCMake.target_link_options
  Test #504: RunCMake.target_compile_definitions
  Test #505: RunCMake.target_compile_features
  Test #506: RunCMake.target_compile_options
  Test #507: RunCMake.target_include_directories
  Test #508: RunCMake.target_sources
  Test #509: RunCMake.CheckCompilerFlag
  Test #510: RunCMake.CheckSourceCompiles
  Test #511: RunCMake.CheckSourceRuns
  Test #512: RunCMake.CheckModules
  Test #513: RunCMake.CheckIPOSupported
  Test #514: RunCMake.CheckLinkerFlag
  Test #515: RunCMake.CommandLine
  Test #516: RunCMake.CommandLineTar
  Test #517: RunCMake.install
  Test #518: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #519: RunCMake.CPackCommandLine
  Test #520: RunCMake.CPackConfig
  Test #521: RunCMake.CPackInstallProperties
  Test #522: RunCMake.ExternalProject
  Test #523: RunCMake.FetchContent
  Test #524: RunCMake.CTestCommandLine
  Test #525: RunCMake.CacheNewline
  Test #526: RunCMake.CPackSymlinks
  Test #527: RunCMake.IfacePaths_INCDIRS
  Test #528: RunCMake.IfacePaths_SOURCES
  Test #529: RunCMake.CrosscompilingEmulator
  Test #530: RunCMake.LinkWhatYouUse
  Test #531: RunCMake.ClangTidy
  Test #532: RunCMake.IncludeWhatYouUse
  Test #533: RunCMake.Cpplint
  Test #534: RunCMake.Cppcheck
  Test #535: RunCMake.MultiLint
  Test #536: RunCMake.CompilerLauncher
  Test #537: RunCMake.ctest_labels_for_subprojects
  Test #538: RunCMake.CompilerArgs
  Test #539: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #540: RunCMake.CPack_DEB.DEBUGINFO
  Test #541: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #542: RunCMake.CPack_DEB.DEPENDENCIES
  Test #543: RunCMake.CPack_DEB.EMPTY_DIR
  Test #544: RunCMake.CPack_DEB.VERSION
  Test #545: RunCMake.CPack_DEB.EXTRA
  Test #546: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #547: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #548: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #549: RunCMake.CPack_DEB.MINIMAL
  Test #550: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #551: RunCMake.CPack_DEB.TIMESTAMPS
  Test #552: RunCMake.CPack_DEB.MD5SUMS
  Test #553: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #554: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #555: RunCMake.CPack_DEB.PROJECT_META
  Test #556: RunCMake.CPack_7Z
  Test #557: RunCMake.CPack_TBZ2
  Test #558: RunCMake.CPack_TGZ
  Test #559: RunCMake.CPack_TXZ
  Test #560: RunCMake.CPack_TZ
  Test #561: RunCMake.CPack_ZIP
  Test #562: RunCMake.CPack_STGZ
  Test #563: RunCMake.CPack_External
  Test #564: RunCMake.AutoExportDll
  Test #565: RunCMake.AndroidMK
  Test #566: RunCMake.CTestCommandExpandLists
  Test #567: RunCMake.PrecompileHeaders
  Test #568: RunCMake.UnityBuild
  Test #569: RunCMake.CMakePresets
  Test #570: RunCMake.CMakePresetsBuild
  Test #571: RunCMake.CMakePresetsTest
  Test #572: RunCMake.TransformDepfile
  Test #573: FindPackageModeMakefileTest
  Test #574: FindThreads.C-only
  Test #575: FindThreads.CXX-only
  Test #576: CMake.List
  Test #577: CMake.VariableWatch
  Test #578: CMake.Include
  Test #579: CMake.FindBase
  Test #580: CMake.Toolchain
  Test #581: CMake.GetFilenameComponentRealpath
  Test #582: CMake.Version
  Test #583: CMake.Message
  Test #584: CMake.File
  Test #585: CMake.ImplicitLinkInfo
  Test #586: CMake.ModuleNotices
  Test #587: CMake.GetProperty
  Test #588: CMake.If
  Test #589: CMake.String
  Test #590: CMake.Math
  Test #591: CMake.CMakeMinimumRequired
  Test #592: CMake.CompilerIdVendor
  Test #593: CMake.ProcessorCount
  Test #594: CMake.PushCheckState
  Test #595: CMake.While
  Test #596: CMake.CMakeHostSystemInformation
  Test #597: CMake.FileDownload
  Test #598: CMake.FileDownloadBadHash
  Test #599: CMake.FileUpload
  Test #600: CMake.EndStuff
  Test #601: CMake.GetPrerequisites
  Test #602: CMake.PolicyCheck
  Test #603: CMake.CheckSourceTree

Total Tests: 603
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N -I -10  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test   #1: SystemInformationNew
  Test   #2: kwsys.testEncode
  Test   #3: kwsys.testTerminal
  Test   #4: kwsys.testConfigure
  Test   #5: kwsys.testSystemTools
  Test   #6: kwsys.testCommandLineArguments
  Test   #7: kwsys.testCommandLineArguments1
  Test   #8: kwsys.testDirectory
  Test   #9: kwsys.testEncoding
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: Simple
  Test  #36: PreOrder
  Test  #37: MissingSourceFile
  Test  #38: COnly
  Test  #39: CxxOnly
  Test  #40: CxxSubdirC
  Test  #41: OutDir
  Test  #42: OutName
  Test  #43: ObjectLibrary
  Test  #44: NewlineArgs
  Test  #45: SetLang
  Test  #46: EmptyProperty
  Test  #47: ExternalOBJ
  Test  #48: LoadCommand
  Test  #49: LinkDirectory
  Test  #50: LinkLanguage
  Test  #51: LinkLine
  Test  #52: MacroTest
  Test  #53: FunctionTest
  Test  #54: ReturnTest
  Test  #55: Properties
  Test  #56: Assembler
  Test  #57: SourceGroups
  Test  #58: Preprocess
  Test  #59: ExportImport
  Test  #60: Unset
  Test  #61: PolicyScope
  Test  #62: EmptyLibrary
  Test  #63: CompileDefinitions
  Test  #64: CompileOptions
  Test  #65: CompatibleInterface
  Test  #66: AliasTarget
  Test  #67: StagingPrefix
  Test  #68: ImportedSameName
  Test  #69: InterfaceLibrary
  Test  #70: ConfigSources
  Test  #71: SourcesProperty
  Test  #72: SourceFileProperty
  Test  #73: SourceFileIncludeDirProperty
  Test  #74: CxxDialect
  Test  #75: CrossCompile
  Test  #76: Policy0002
  Test  #77: BundleUtilities
  Test  #78: CMakeBuildTest
  Test  #79: CMakeDoubleProject
  Test  #80: Module.CheckTypeSize
  Test  #81: Module.CheckIPOSupported-C
  Test  #82: Module.CheckIPOSupported-CXX
  Test  #83: Module.ExternalData
  Test  #84: Module.FindDependency
  Test  #85: Module.WriteCompilerDetectionHeader
  Test  #86: PositionIndependentTargets
  Test  #87: Visibility
  Test  #88: LinkFlags-prepare
  Test  #89: LinkFlags-lib
  Test  #90: LinkFlags-dll
  Test  #91: LinkFlags-mod
  Test  #92: LinkFlags-exe
  Test  #93: LinkFlags-lib_config
  Test  #94: LinkFlags-dll_config
  Test  #95: LinkFlags-mod_config
  Test  #96: LinkFlags-exe_config
  Test  #97: LinkFlags-lib_flags
  Test  #98: LinkFlags-dll_flags
  Test  #99: LinkFlags-mod_flags
  Test #100: LinkFlags-exe_flags
  Test #101: LinkFlags-lib_flags_config
  Test #102: LinkFlags-dll_flags_config
  Test #103: LinkFlags-mod_flags_config
  Test #104: LinkFlags-exe_flags_config
  Test #105: Simple_CodeBlocksGenerator
  Test #106: Simple_CodeLiteGenerator
  Test #107: Simple_EclipseCDT4Generator
  Test #108: Simple_KateGenerator
  Test #109: Simple_SublimeText2Generator
  Test #110: SubProject
  Test #111: SubProject-Stage2
  Test #112: Framework
  Test #113: TargetName
  Test #114: LibName
  Test #115: CustComDepend
  Test #116: ArgumentExpansion
  Test #117: GeneratorExpression
  Test #118: CustomCommand
  Test #119: CustomCommandByproducts
  Test #120: CommandLength
  Test #121: EmptyDepends
  Test #122: CustomCommandWorkingDirectory
  Test #123: OutOfSource
  Test #124: BuildDepends
  Test #125: MissingInstall
  Test #126: CPackUseDefaultVersion
  Test #127: CPackUseProjectVersion
  Test #128: CPackUseShortProjectVersion
  Test #129: CPackComponents
  Test #130: CPackComponentsForAll-DEB-default
  Test #131: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #132: CPackComponentsForAll-DEB-IgnoreGroup
  Test #133: CPackComponentsForAll-DEB-AllInOne
  Test #134: CPackComponentsForAll-ZIP-default
  Test #135: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #136: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #137: CPackComponentsForAll-ZIP-AllInOne
  Test #138: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #139: CPackComponentsDEB-components-description1
  Test #140: CPackComponentsDEB-components-description2
  Test #141: CPackComponentsDEB-components-source
  Test #142: CPackComponentsDEB-components-shlibdeps1
  Test #143: CPackComponentsDEB-components-depend1
  Test #144: CPackComponentsDEB-components-depend2
  Test #145: CPackComponentsDEB-compression
  Test #146: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #147: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #148: CPackTestAllGenerators
  Test #149: CPackComponentsPrefix
  Test #150: X11
  Test #151: CMakeTestAllGenerators
  Test #152: LoadedCommandOneConfig
  Test #153: complex
  Test #154: complexOneConfig
  Test #155: Environment
  Test #156: QtAutomocNoQt
  Test #157: ExternalProject
  Test #158: ExternalProjectSubdir
  Test #159: ExternalProjectSourceSubdir
  Test #160: ExternalProjectSourceSubdirNotCMake
  Test #161: ExternalProjectLocal
  Test #162: ExternalProjectUpdateSetup
  Test #163: ExternalProjectUpdate
  Test #164: TutorialStep2
  Test #165: TutorialStep3
  Test #166: TutorialStep4
  Test #167: TutorialStep5
  Test #168: TutorialStep6
  Test #169: TutorialStep7
  Test #170: TutorialStep8
  Test #171: TutorialStep9
  Test #172: TutorialStep10
  Test #173: TutorialStep11
  Test #174: TutorialStep12
  Test #175: TutorialComplete
  Test #176: TutorialStep3_MYMATH
  Test #177: TutorialStep4_MYMATH
  Test #178: TutorialStep5_MYMATH
  Test #179: TutorialStep6_MYMATH
  Test #180: TutorialStep7_MYMATH
  Test #181: TutorialStep8_MYMATH
  Test #182: TutorialStep9_MYMATH
  Test #183: TutorialStep10_MYMATH
  Test #184: TutorialStep11_MYMATH
  Test #185: TutorialStep12_MYMATH
  Test #186: TutorialComplete_MYMATH
  Test #187: Guide.ImportExport.MyExe
  Test #188: Guide.ImportExport.Importing
  Test #189: Guide.ImportExport.MathFunctions
  Test #190: Guide.ImportExport.Downstream
  Test #191: Guide.ImportExport.MathFunctionsComponents
  Test #192: Guide.ImportExport.DownstreamComponents
  Test #193: testing
  Test #194: wrapping
  Test #195: qtwrapping
  Test #196: testdriver1
  Test #197: testdriver2
  Test #198: testdriver3
  Test #199: Dependency
  Test #200: JumpWithLibOut
  Test #201: JumpNoLibOut
  Test #202: Plugin
  Test #203: RuntimePath
  Test #204: linkorder1
  Test #205: linkorder2
  Test #206: SubDirSpaces
  Test #207: SubDir
  Test #208: CheckCompilerRelatedVariables
  Test #209: MakeClean
  Test #210: WarnUnusedCliUnused
  Test #211: WarnUnusedCliUsed
  Test #212: WarnUninitialized
  Test #213: TestsWorkingDirectory
  Test #214: CTest.NoNewline
  Test #215: CTest.BuildCommand.ProjectInSubdir
  Test #216: CTest.UpdateGIT
  Test #217: CTestTestNoBuild
  Test #218: CTestTestNoExe
  Test #219: CTestTestUpload
  Test #220: CTestCoverageCollectGCOV
  Test #221: CTestTestEmptyBinaryDirectory
  Test #222: CTestGTMCoverage
  Test #223: CTestCacheCoverage
  Test #224: CTestPythonCoverage
  Test #225: CTestCoberturaCoverage
  Test #226: CTestJacocoCoverage
  Test #227: CTestJavascriptCoverage
  Test #228: CTestDelphiCoverage
  Test #229: CTestConfig.Script.Debug
  Test #230: CTestConfig.Dashboard.Debug
  Test #231: CTestConfig.Script.MinSizeRel
  Test #232: CTestConfig.Dashboard.MinSizeRel
  Test #233: CTestConfig.Script.Release
  Test #234: CTestConfig.Dashboard.Release
  Test #235: CTestConfig.Script.RelWithDebInfo
  Test #236: CTestConfig.Dashboard.RelWithDebInfo
  Test #237: CTestConfig.ScriptWithArgs
  Test #238: CMakeCommands.add_compile_definitions
  Test #239: CMakeCommands.add_compile_options
  Test #240: CMakeCommands.target_link_libraries
  Test #241: CMakeCommands.target_include_directories
  Test #242: CMakeCommands.target_compile_definitions
  Test #243: CMakeCommands.target_compile_options
  Test #244: CMakeCommands.target_sources
  Test #245: CMakeCommands.add_link_options
  Test #246: CMakeCommands.target_link_options
  Test #247: CMakeCommands.link_directories
  Test #248: CMakeCommands.target_link_directories
  Test #249: CTestTestCrash
  Test #250: CTestTestBadExe
  Test #251: CTestTestBadGenerator
  Test #252: CTestTestParallel
  Test #253: CTestTestVerboseOutput
  Test #254: CTestTestSkipReturnCode
  Test #255: CTestTestSerialInDepends
  Test #256: CTestTestMissingDependsExe
  Test #257: CTestTestSerialOrder
  Test #258: CTestLimitDashJ
  Test #259: CTestTestPrintLabels
  Test #260: CTestTestLabelRegExp
  Test #261: CTestTestResourceLock
  Test #262: CTestTestScheduler
  Test #263: CTestTestCostSerial
  Test #264: CTestTestStopTime
  Test #265: CTestTestSubdir
  Test #266: CTestTestTimeout
  Test #267: CTestTestRerunFailed
  Test #268: CTestTestZeroTimeout
  Test #269: CTestTestDepends
  Test #270: CTestTestCycle
  Test #271: CTestTestRunScript
  Test #272: CTestTestShowOnly
  Test #273: CTestTestFdSetSize
  Test #274: BootstrapTest
  Test #275: JavaExportImport
  Test #276: CompileCommandOutput
  Test #277: IncludeDirectories
  Test #278: IncludeDirectoriesCPATH
  Test #279: InterfaceLinkLibraries
  Test #280: CMakeLib.testArgumentParser
  Test #281: CMakeLib.testCTestBinPacker
  Test #282: CMakeLib.testCTestResourceAllocator
  Test #283: CMakeLib.testCTestResourceSpec
  Test #284: CMakeLib.testCTestResourceGroups
  Test #285: CMakeLib.testGccDepfileReader
  Test #286: CMakeLib.testGeneratedFileStream
  Test #287: CMakeLib.testJSONHelpers
  Test #288: CMakeLib.testRST
  Test #289: CMakeLib.testRange
  Test #290: CMakeLib.testOptional
  Test #291: CMakeLib.testString
  Test #292: CMakeLib.testStringAlgorithms
  Test #293: CMakeLib.testSystemTools
  Test #294: CMakeLib.testUTF8
  Test #295: CMakeLib.testXMLParser
  Test #296: CMakeLib.testXMLSafe
  Test #297: CMakeLib.testFindPackageCommand
  Test #298: CMakeLib.testUVProcessChain
  Test #299: CMakeLib.testUVRAII
  Test #300: CMakeLib.testUVStreambuf
  Test #301: CMakeLib.testCMExtMemory
  Test #302: CMakeLib.testCMExtAlgorithm
  Test #303: CMakeOnly.LinkInterfaceLoop
  Test #304: CMakeOnly.CheckSymbolExists
  Test #305: CMakeOnly.CheckCXXSymbolExists
  Test #306: CMakeOnly.CheckCXXCompilerFlag
  Test #307: CMakeOnly.CheckLanguage
  Test #308: CMakeOnly.CheckStructHasMember
  Test #309: CMakeOnly.CompilerIdC
  Test #310: CMakeOnly.CompilerIdCXX
  Test #311: CMakeOnly.AllFindModules
  Test #312: CMakeOnly.SelectLibraryConfigurations
  Test #313: CMakeOnly.TargetScope
  Test #314: CMakeOnly.find_library
  Test #315: CMakeOnly.find_path
  Test #316: CMakeOnly.ProjectInclude
  Test #317: CMakeOnly.ProjectIncludeAny
  Test #318: CMakeOnly.ProjectIncludeBefore
  Test #319: CMakeOnly.ProjectIncludeBeforeAny
  Test #320: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #321: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #322: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #323: CMakeOnly.MajorVersionSelection-Qt_3
  Test #324: CMakeOnly.MajorVersionSelection-Qt_4
  Test #325: RunCMake.CMP0019
  Test #326: RunCMake.CMP0022
  Test #327: RunCMake.CMP0026
  Test #328: RunCMake.CMP0027
  Test #329: RunCMake.CMP0028
  Test #330: RunCMake.CMP0037
  Test #331: RunCMake.CMP0038
  Test #332: RunCMake.CMP0039
  Test #333: RunCMake.CMP0040
  Test #334: RunCMake.CMP0041
  Test #335: RunCMake.CMP0043
  Test #336: RunCMake.CMP0045
  Test #337: RunCMake.CMP0046
  Test #338: RunCMake.CMP0049
  Test #339: RunCMake.CMP0050
  Test #340: RunCMake.CMP0051
  Test #341: RunCMake.CMP0053
  Test #342: RunCMake.CMP0054
  Test #343: RunCMake.CMP0055
  Test #344: RunCMake.CMP0057
  Test #345: RunCMake.CMP0059
  Test #346: RunCMake.CMP0060
  Test #347: RunCMake.CMP0064
  Test #348: RunCMake.CMP0069
  Test #349: RunCMake.CMP0081
  Test #350: RunCMake.CMP0102
  Test #351: RunCMake.CMP0106
  Test #352: RunCMake.CMP0111
  Test #353: RunCMake.CMP0115
  Test #354: RunCMake.CMP0118
  Test #355: RunCMake.CMP0119
  Test #356: RunCMake.CMP0121
  Test #357: RunCMake.CMP0065
  Test #358: RunCMake.Make
  Test #359: RunCMake.CTest
  Test #360: RunCMake.ctest_memcheck
  Test #361: RunCMake.ABI
  Test #362: RunCMake.AndroidTestUtilities
  Test #363: RunCMake.Autogen
  Test #364: RunCMake.ArtifactOutputDirs
  Test #365: RunCMake.BuildDepends
  Test #366: RunCMake.Byproducts
  Test #367: RunCMake.CMakeRoleGlobalProperty
  Test #368: RunCMake.CompilerChange
  Test #369: RunCMake.CompilerNotFound
  Test #370: RunCMake.Configure
  Test #371: RunCMake.DisallowedCommands
  Test #372: RunCMake.ExportCompileCommands
  Test #373: RunCMake.ExcludeFromAll
  Test #374: RunCMake.ExternalData
  Test #375: RunCMake.FeatureSummary
  Test #376: RunCMake.FPHSA
  Test #377: RunCMake.FileAPI
  Test #378: RunCMake.FindBoost
  Test #379: RunCMake.FindLua
  Test #380: RunCMake.FindOpenGL
  Test #381: RunCMake.GenerateExportHeader
  Test #382: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #383: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #384: RunCMake.GenEx-LINK_LANGUAGE
  Test #385: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #386: RunCMake.GenEx-HOST_LINK
  Test #387: RunCMake.GenEx-DEVICE_LINK
  Test #388: RunCMake.GenEx-TARGET_FILE
  Test #389: RunCMake.GenEx-GENEX_EVAL
  Test #390: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #391: RunCMake.GeneratorExpression
  Test #392: RunCMake.GeneratorInstance
  Test #393: RunCMake.GeneratorPlatform
  Test #394: RunCMake.GeneratorToolset
  Test #395: RunCMake.GetPrerequisites
  Test #396: RunCMake.GNUInstallDirs
  Test #397: RunCMake.GoogleTest
  Test #398: RunCMake.Graphviz
  Test #399: RunCMake.TargetPropertyGeneratorExpressions
  Test #400: RunCMake.Languages
  Test #401: RunCMake.LinkStatic
  Test #402: RunCMake.ObjectLibrary
  Test #403: RunCMake.ParseImplicitIncludeInfo
  Test #404: RunCMake.ParseImplicitLinkInfo
  Test #405: RunCMake.RuntimePath
  Test #406: RunCMake.ScriptMode
  Test #407: RunCMake.Swift
  Test #408: RunCMake.TargetObjects
  Test #409: RunCMake.TargetSources
  Test #410: RunCMake.TargetProperties
  Test #411: RunCMake.ToolchainFile
  Test #412: RunCMake.find_dependency
  Test #413: RunCMake.CompileDefinitions
  Test #414: RunCMake.CompileFeatures
  Test #415: RunCMake.Policy
  Test #416: RunCMake.PolicyScope
  Test #417: RunCMake.WriteBasicConfigVersionFile
  Test #418: RunCMake.WriteCompilerDetectionHeader
  Test #419: RunCMake.SourceProperties
  Test #420: RunCMake.PositionIndependentCode
  Test #421: RunCMake.VisibilityPreset
  Test #422: RunCMake.CompatibleInterface
  Test #423: RunCMake.Syntax
  Test #424: RunCMake.WorkingDirectory
  Test #425: RunCMake.MaxRecursionDepth
  Test #426: RunCMake.add_custom_command
  Test #427: RunCMake.add_custom_target
  Test #428: RunCMake.add_dependencies
  Test #429: RunCMake.add_executable
  Test #430: RunCMake.add_library
  Test #431: RunCMake.add_subdirectory
  Test #432: RunCMake.add_test
  Test #433: RunCMake.build_command
  Test #434: RunCMake.execute_process
  Test #435: RunCMake.export
  Test #436: RunCMake.cmake_language
  Test #437: RunCMake.cmake_minimum_required
  Test #438: RunCMake.cmake_parse_arguments
  Test #439: RunCMake.cmake_path
  Test #440: RunCMake.continue
  Test #441: RunCMake.ctest_build
  Test #442: RunCMake.ctest_cmake_error
  Test #443: RunCMake.ctest_configure
  Test #444: RunCMake.ctest_coverage
  Test #445: RunCMake.ctest_start
  Test #446: RunCMake.ctest_submit
  Test #447: RunCMake.ctest_test
  Test #448: RunCMake.ctest_disabled_test
  Test #449: RunCMake.ctest_skipped_test
  Test #450: RunCMake.ctest_update
  Test #451: RunCMake.ctest_upload
  Test #452: RunCMake.ctest_fixtures
  Test #453: RunCMake.file
  Test #454: RunCMake.file-CHMOD
  Test #455: RunCMake.file-RPATH
  Test #456: RunCMake.find_file
  Test #457: RunCMake.find_library
  Test #458: RunCMake.find_package
  Test #459: RunCMake.find_path
  Test #460: RunCMake.find_program
  Test #461: RunCMake.foreach
  Test #462: RunCMake.function
  Test #463: RunCMake.get_filename_component
  Test #464: RunCMake.get_property
  Test #465: RunCMake.if
  Test #466: RunCMake.include
  Test #467: RunCMake.include_directories
  Test #468: RunCMake.include_guard
  Test #469: RunCMake.list
  Test #470: RunCMake.load_cache
  Test #471: RunCMake.math
  Test #472: RunCMake.message
  Test #473: RunCMake.option
  Test #474: RunCMake.project
  Test #475: RunCMake.project_injected
  Test #476: RunCMake.return
  Test #477: RunCMake.separate_arguments
  Test #478: RunCMake.set_property
  Test #479: RunCMake.string
  Test #480: RunCMake.test_include_dirs
  Test #481: RunCMake.BundleUtilities
  Test #482: RunCMake.try_compile
  Test #483: RunCMake.try_run
  Test #484: RunCMake.set
  Test #485: RunCMake.variable_watch
  Test #486: RunCMake.while
  Test #487: RunCMake.CMP0004
  Test #488: RunCMake.TargetPolicies
  Test #489: RunCMake.alias_targets
  Test #490: RunCMake.InterfaceLibrary
  Test #491: RunCMake.no_install_prefix
  Test #492: RunCMake.configure_file
  Test #493: RunCMake.CTestTimeout
  Test #494: RunCMake.CTestTimeoutAfterMatch
  Test #495: RunCMake.DependencyGraph
  Test #496: RunCMake.CTestResourceAllocation
  Test #497: RunCMake.SymlinkTrees
  Test #498: RunCMake.FindPkgConfig
  Test #499: RunCMake.File_Archive
  Test #500: RunCMake.File_Configure
  Test #501: RunCMake.File_Generate
  Test #502: RunCMake.ExportWithoutLanguage
  Test #503: RunCMake.target_link_directories
  Test #504: RunCMake.target_link_libraries
  Test #505: RunCMake.target_link_libraries-ALIAS
  Test #506: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #507: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #508: RunCMake.add_link_options
  Test #509: RunCMake.target_link_options
  Test #510: RunCMake.target_compile_definitions
  Test #511: RunCMake.target_compile_features
  Test #512: RunCMake.target_compile_options
  Test #513: RunCMake.target_include_directories
  Test #514: RunCMake.target_sources
  Test #515: RunCMake.CheckCompilerFlag
  Test #516: RunCMake.CheckSourceCompiles
  Test #517: RunCMake.CheckSourceRuns
  Test #518: RunCMake.CheckModules
  Test #519: RunCMake.CheckIPOSupported
  Test #520: RunCMake.CheckLinkerFlag
  Test #521: RunCMake.CommandLine
  Test #522: RunCMake.CommandLineTar
  Test #523: RunCMake.install
  Test #524: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #525: RunCMake.CPackCommandLine
  Test #526: RunCMake.CPackConfig
  Test #527: RunCMake.CPackInstallProperties
  Test #528: RunCMake.ExternalProject
  Test #529: RunCMake.FetchContent
  Test #530: RunCMake.CTestCommandLine
  Test #531: RunCMake.CacheNewline
  Test #532: RunCMake.CPackSymlinks
  Test #533: RunCMake.IfacePaths_INCDIRS
  Test #534: RunCMake.IfacePaths_SOURCES
  Test #535: RunCMake.CrosscompilingEmulator
  Test #536: RunCMake.LinkWhatYouUse
  Test #537: RunCMake.ClangTidy
  Test #538: RunCMake.IncludeWhatYouUse
  Test #539: RunCMake.Cpplint
  Test #540: RunCMake.Cppcheck
  Test #541: RunCMake.MultiLint
  Test #542: RunCMake.CompilerLauncher
  Test #543: RunCMake.ctest_labels_for_subprojects
  Test #544: RunCMake.CompilerArgs
  Test #545: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #546: RunCMake.CPack_DEB.DEBUGINFO
  Test #547: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #548: RunCMake.CPack_DEB.DEPENDENCIES
  Test #549: RunCMake.CPack_DEB.EMPTY_DIR
  Test #550: RunCMake.CPack_DEB.VERSION
  Test #551: RunCMake.CPack_DEB.EXTRA
  Test #552: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #553: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #554: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #555: RunCMake.CPack_DEB.MINIMAL
  Test #556: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #557: RunCMake.CPack_DEB.TIMESTAMPS
  Test #558: RunCMake.CPack_DEB.MD5SUMS
  Test #559: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #560: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #561: RunCMake.CPack_DEB.PROJECT_META
  Test #562: RunCMake.CPack_7Z
  Test #563: RunCMake.CPack_TBZ2
  Test #564: RunCMake.CPack_TGZ
  Test #565: RunCMake.CPack_TXZ
  Test #566: RunCMake.CPack_TZ
  Test #567: RunCMake.CPack_ZIP
  Test #568: RunCMake.CPack_STGZ
  Test #569: RunCMake.CPack_External
  Test #570: RunCMake.AutoExportDll
  Test #571: RunCMake.AndroidMK
  Test #572: RunCMake.CTestCommandExpandLists
  Test #573: RunCMake.PrecompileHeaders
  Test #574: RunCMake.UnityBuild
  Test #575: RunCMake.CMakePresets
  Test #576: RunCMake.CMakePresetsBuild
  Test #577: RunCMake.CMakePresetsTest
  Test #578: RunCMake.TransformDepfile
  Test #579: FindPackageModeMakefileTest
  Test #580: FindThreads.C-only
  Test #581: FindThreads.CXX-only
  Test #582: CMake.List
  Test #583: CMake.VariableWatch
  Test #584: CMake.Include
  Test #585: CMake.FindBase
  Test #586: CMake.Toolchain
  Test #587: CMake.GetFilenameComponentRealpath
  Test #588: CMake.Version
  Test #589: CMake.Message
  Test #590: CMake.File
  Test #591: CMake.ImplicitLinkInfo
  Test #592: CMake.ModuleNotices
  Test #593: CMake.GetProperty
  Test #594: CMake.If
  Test #595: CMake.String
  Test #596: CMake.Math
  Test #597: CMake.CMakeMinimumRequired
  Test #598: CMake.CompilerIdVendor
  Test #599: CMake.ProcessorCount
  Test #600: CMake.PushCheckState
  Test #601: CMake.While
  Test #602: CMake.CMakeHostSystemInformation
  Test #603: CMake.FileDownload
  Test #604: CMake.FileDownloadBadHash
  Test #605: CMake.FileUpload
  Test #606: CMake.EndStuff
  Test #607: CMake.GetPrerequisites
  Test #608: CMake.PolicyCheck
  Test #609: CMake.CheckSourceTree

Total Tests: 609
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N -I 10-  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test  #10: kwsys.testFStream
  Test  #11: kwsys.testConsoleBuf
  Test  #12: kwsys.testSystemInformation
  Test  #13: kwsys.testDynamicLoader
  Test  #14: kwsys.testProcess-1
  Test  #15: kwsys.testProcess-2
  Test  #16: kwsys.testProcess-3
  Test  #17: kwsys.testProcess-4
  Test  #18: kwsys.testProcess-5
  Test  #19: kwsys.testProcess-6
  Test  #20: kwsys.testProcess-9
  Test  #21: kwsys.testProcess-10
  Test  #22: kwsys.testSharedForward
  Test  #23: kwiml.test
  Test  #24: curl
  Test  #25: CMake.Copyright
  Test  #26: CommandLineTest
  Test  #27: FindPackageTest
  Test  #28: StringFileTest
  Test  #29: TryCompile
  Test  #30: SystemInformation
  Test  #31: MathTest
  Test  #32: CompileFeatures
  Test  #33: CMakeCommands.target_compile_features
  Test  #34: MSManifest
  Test  #35: Simple
  Test  #36: PreOrder
  Test  #37: MissingSourceFile
  Test  #38: COnly
  Test  #39: CxxOnly
  Test  #40: CxxSubdirC
  Test  #41: OutDir
  Test  #42: OutName
  Test  #43: ObjectLibrary
  Test  #44: NewlineArgs
  Test  #45: SetLang
  Test  #46: EmptyProperty
  Test  #47: ExternalOBJ
  Test  #48: LoadCommand
  Test  #49: LinkDirectory
  Test  #50: LinkLanguage
  Test  #51: LinkLine
  Test  #52: MacroTest
  Test  #53: FunctionTest
  Test  #54: ReturnTest
  Test  #55: Properties
  Test  #56: Assembler
  Test  #57: SourceGroups
  Test  #58: Preprocess
  Test  #59: ExportImport
  Test  #60: Unset
  Test  #61: PolicyScope
  Test  #62: EmptyLibrary
  Test  #63: CompileDefinitions
  Test  #64: CompileOptions
  Test  #65: CompatibleInterface
  Test  #66: AliasTarget
  Test  #67: StagingPrefix
  Test  #68: ImportedSameName
  Test  #69: InterfaceLibrary
  Test  #70: ConfigSources
  Test  #71: SourcesProperty
  Test  #72: SourceFileProperty
  Test  #73: SourceFileIncludeDirProperty
  Test  #74: CxxDialect
  Test  #75: CrossCompile
  Test  #76: Policy0002
  Test  #77: BundleUtilities
  Test  #78: CMakeBuildTest
  Test  #79: CMakeDoubleProject
  Test  #80: Module.CheckTypeSize
  Test  #81: Module.CheckIPOSupported-C
  Test  #82: Module.CheckIPOSupported-CXX
  Test  #83: Module.ExternalData
  Test  #84: Module.FindDependency
  Test  #85: Module.WriteCompilerDetectionHeader
  Test  #86: PositionIndependentTargets
  Test  #87: Visibility
  Test  #88: LinkFlags-prepare
  Test  #89: LinkFlags-lib
  Test  #90: LinkFlags-dll
  Test  #91: LinkFlags-mod
  Test  #92: LinkFlags-exe
  Test  #93: LinkFlags-lib_config
  Test  #94: LinkFlags-dll_config
  Test  #95: LinkFlags-mod_config
  Test  #96: LinkFlags-exe_config
  Test  #97: LinkFlags-lib_flags
  Test  #98: LinkFlags-dll_flags
  Test  #99: LinkFlags-mod_flags
  Test #100: LinkFlags-exe_flags
  Test #101: LinkFlags-lib_flags_config
  Test #102: LinkFlags-dll_flags_config
  Test #103: LinkFlags-mod_flags_config
  Test #104: LinkFlags-exe_flags_config
  Test #105: Simple_CodeBlocksGenerator
  Test #106: Simple_CodeLiteGenerator
  Test #107: Simple_EclipseCDT4Generator
  Test #108: Simple_KateGenerator
  Test #109: Simple_SublimeText2Generator
  Test #110: SubProject
  Test #111: SubProject-Stage2
  Test #112: Framework
  Test #113: TargetName
  Test #114: LibName
  Test #115: CustComDepend
  Test #116: ArgumentExpansion
  Test #117: GeneratorExpression
  Test #118: CustomCommand
  Test #119: CustomCommandByproducts
  Test #120: CommandLength
  Test #121: EmptyDepends
  Test #122: CustomCommandWorkingDirectory
  Test #123: OutOfSource
  Test #124: BuildDepends
  Test #125: MissingInstall
  Test #126: CPackUseDefaultVersion
  Test #127: CPackUseProjectVersion
  Test #128: CPackUseShortProjectVersion
  Test #129: CPackComponents
  Test #130: CPackComponentsForAll-DEB-default
  Test #131: CPackComponentsForAll-DEB-OnePackPerGroup
  Test #132: CPackComponentsForAll-DEB-IgnoreGroup
  Test #133: CPackComponentsForAll-DEB-AllInOne
  Test #134: CPackComponentsForAll-ZIP-default
  Test #135: CPackComponentsForAll-ZIP-OnePackPerGroup
  Test #136: CPackComponentsForAll-ZIP-IgnoreGroup
  Test #137: CPackComponentsForAll-ZIP-AllInOne
  Test #138: CPackComponentsDEB-components-lintian-dpkgdeb-checks
  Test #139: CPackComponentsDEB-components-description1
  Test #140: CPackComponentsDEB-components-description2
  Test #141: CPackComponentsDEB-components-source
  Test #142: CPackComponentsDEB-components-shlibdeps1
  Test #143: CPackComponentsDEB-components-depend1
  Test #144: CPackComponentsDEB-components-depend2
  Test #145: CPackComponentsDEB-compression
  Test #146: CPackComponentsDEB-shlibdeps-with-private-lib-failure
  Test #147: CPackComponentsDEB-shlibdeps-with-private-lib-success
  Test #148: CPackTestAllGenerators
  Test #149: CPackComponentsPrefix
  Test #150: X11
  Test #151: CMakeTestAllGenerators
  Test #152: LoadedCommandOneConfig
  Test #153: complex
  Test #154: complexOneConfig
  Test #155: Environment
  Test #156: QtAutomocNoQt
  Test #157: ExternalProject
  Test #158: ExternalProjectSubdir
  Test #159: ExternalProjectSourceSubdir
  Test #160: ExternalProjectSourceSubdirNotCMake
  Test #161: ExternalProjectLocal
  Test #162: ExternalProjectUpdateSetup
  Test #163: ExternalProjectUpdate
  Test #164: TutorialStep2
  Test #165: TutorialStep3
  Test #166: TutorialStep4
  Test #167: TutorialStep5
  Test #168: TutorialStep6
  Test #169: TutorialStep7
  Test #170: TutorialStep8
  Test #171: TutorialStep9
  Test #172: TutorialStep10
  Test #173: TutorialStep11
  Test #174: TutorialStep12
  Test #175: TutorialComplete
  Test #176: TutorialStep3_MYMATH
  Test #177: TutorialStep4_MYMATH
  Test #178: TutorialStep5_MYMATH
  Test #179: TutorialStep6_MYMATH
  Test #180: TutorialStep7_MYMATH
  Test #181: TutorialStep8_MYMATH
  Test #182: TutorialStep9_MYMATH
  Test #183: TutorialStep10_MYMATH
  Test #184: TutorialStep11_MYMATH
  Test #185: TutorialStep12_MYMATH
  Test #186: TutorialComplete_MYMATH
  Test #187: Guide.ImportExport.MyExe
  Test #188: Guide.ImportExport.Importing
  Test #189: Guide.ImportExport.MathFunctions
  Test #190: Guide.ImportExport.Downstream
  Test #191: Guide.ImportExport.MathFunctionsComponents
  Test #192: Guide.ImportExport.DownstreamComponents
  Test #193: testing
  Test #194: wrapping
  Test #195: qtwrapping
  Test #196: testdriver1
  Test #197: testdriver2
  Test #198: testdriver3
  Test #199: Dependency
  Test #200: JumpWithLibOut
  Test #201: JumpNoLibOut
  Test #202: Plugin
  Test #203: RuntimePath
  Test #204: linkorder1
  Test #205: linkorder2
  Test #206: SubDirSpaces
  Test #207: SubDir
  Test #208: CheckCompilerRelatedVariables
  Test #209: MakeClean
  Test #210: WarnUnusedCliUnused
  Test #211: WarnUnusedCliUsed
  Test #212: WarnUninitialized
  Test #213: TestsWorkingDirectory
  Test #214: CTest.NoNewline
  Test #215: CTest.BuildCommand.ProjectInSubdir
  Test #216: CTest.UpdateGIT
  Test #217: CTestTestNoBuild
  Test #218: CTestTestNoExe
  Test #219: CTestTestUpload
  Test #220: CTestCoverageCollectGCOV
  Test #221: CTestTestEmptyBinaryDirectory
  Test #222: CTestGTMCoverage
  Test #223: CTestCacheCoverage
  Test #224: CTestPythonCoverage
  Test #225: CTestCoberturaCoverage
  Test #226: CTestJacocoCoverage
  Test #227: CTestJavascriptCoverage
  Test #228: CTestDelphiCoverage
  Test #229: CTestConfig.Script.Debug
  Test #230: CTestConfig.Dashboard.Debug
  Test #231: CTestConfig.Script.MinSizeRel
  Test #232: CTestConfig.Dashboard.MinSizeRel
  Test #233: CTestConfig.Script.Release
  Test #234: CTestConfig.Dashboard.Release
  Test #235: CTestConfig.Script.RelWithDebInfo
  Test #236: CTestConfig.Dashboard.RelWithDebInfo
  Test #237: CTestConfig.ScriptWithArgs
  Test #238: CMakeCommands.add_compile_definitions
  Test #239: CMakeCommands.add_compile_options
  Test #240: CMakeCommands.target_link_libraries
  Test #241: CMakeCommands.target_include_directories
  Test #242: CMakeCommands.target_compile_definitions
  Test #243: CMakeCommands.target_compile_options
  Test #244: CMakeCommands.target_sources
  Test #245: CMakeCommands.add_link_options
  Test #246: CMakeCommands.target_link_options
  Test #247: CMakeCommands.link_directories
  Test #248: CMakeCommands.target_link_directories
  Test #249: CTestTestCrash
  Test #250: CTestTestBadExe
  Test #251: CTestTestBadGenerator
  Test #252: CTestTestParallel
  Test #253: CTestTestVerboseOutput
  Test #254: CTestTestSkipReturnCode
  Test #255: CTestTestSerialInDepends
  Test #256: CTestTestMissingDependsExe
  Test #257: CTestTestSerialOrder
  Test #258: CTestLimitDashJ
  Test #259: CTestTestPrintLabels
  Test #260: CTestTestLabelRegExp
  Test #261: CTestTestResourceLock
  Test #262: CTestTestScheduler
  Test #263: CTestTestCostSerial
  Test #264: CTestTestStopTime
  Test #265: CTestTestSubdir
  Test #266: CTestTestTimeout
  Test #267: CTestTestRerunFailed
  Test #268: CTestTestZeroTimeout
  Test #269: CTestTestDepends
  Test #270: CTestTestCycle
  Test #271: CTestTestRunScript
  Test #272: CTestTestShowOnly
  Test #273: CTestTestFdSetSize
  Test #274: BootstrapTest
  Test #275: JavaExportImport
  Test #276: CompileCommandOutput
  Test #277: IncludeDirectories
  Test #278: IncludeDirectoriesCPATH
  Test #279: InterfaceLinkLibraries
  Test #280: CMakeLib.testArgumentParser
  Test #281: CMakeLib.testCTestBinPacker
  Test #282: CMakeLib.testCTestResourceAllocator
  Test #283: CMakeLib.testCTestResourceSpec
  Test #284: CMakeLib.testCTestResourceGroups
  Test #285: CMakeLib.testGccDepfileReader
  Test #286: CMakeLib.testGeneratedFileStream
  Test #287: CMakeLib.testJSONHelpers
  Test #288: CMakeLib.testRST
  Test #289: CMakeLib.testRange
  Test #290: CMakeLib.testOptional
  Test #291: CMakeLib.testString
  Test #292: CMakeLib.testStringAlgorithms
  Test #293: CMakeLib.testSystemTools
  Test #294: CMakeLib.testUTF8
  Test #295: CMakeLib.testXMLParser
  Test #296: CMakeLib.testXMLSafe
  Test #297: CMakeLib.testFindPackageCommand
  Test #298: CMakeLib.testUVProcessChain
  Test #299: CMakeLib.testUVRAII
  Test #300: CMakeLib.testUVStreambuf
  Test #301: CMakeLib.testCMExtMemory
  Test #302: CMakeLib.testCMExtAlgorithm
  Test #303: CMakeOnly.LinkInterfaceLoop
  Test #304: CMakeOnly.CheckSymbolExists
  Test #305: CMakeOnly.CheckCXXSymbolExists
  Test #306: CMakeOnly.CheckCXXCompilerFlag
  Test #307: CMakeOnly.CheckLanguage
  Test #308: CMakeOnly.CheckStructHasMember
  Test #309: CMakeOnly.CompilerIdC
  Test #310: CMakeOnly.CompilerIdCXX
  Test #311: CMakeOnly.AllFindModules
  Test #312: CMakeOnly.SelectLibraryConfigurations
  Test #313: CMakeOnly.TargetScope
  Test #314: CMakeOnly.find_library
  Test #315: CMakeOnly.find_path
  Test #316: CMakeOnly.ProjectInclude
  Test #317: CMakeOnly.ProjectIncludeAny
  Test #318: CMakeOnly.ProjectIncludeBefore
  Test #319: CMakeOnly.ProjectIncludeBeforeAny
  Test #320: CMakeOnly.MajorVersionSelection-PythonLibs_2
  Test #321: CMakeOnly.MajorVersionSelection-PythonLibs_3
  Test #322: CMakeOnly.MajorVersionSelection-PythonInterp_3
  Test #323: CMakeOnly.MajorVersionSelection-Qt_3
  Test #324: CMakeOnly.MajorVersionSelection-Qt_4
  Test #325: RunCMake.CMP0019
  Test #326: RunCMake.CMP0022
  Test #327: RunCMake.CMP0026
  Test #328: RunCMake.CMP0027
  Test #329: RunCMake.CMP0028
  Test #330: RunCMake.CMP0037
  Test #331: RunCMake.CMP0038
  Test #332: RunCMake.CMP0039
  Test #333: RunCMake.CMP0040
  Test #334: RunCMake.CMP0041
  Test #335: RunCMake.CMP0043
  Test #336: RunCMake.CMP0045
  Test #337: RunCMake.CMP0046
  Test #338: RunCMake.CMP0049
  Test #339: RunCMake.CMP0050
  Test #340: RunCMake.CMP0051
  Test #341: RunCMake.CMP0053
  Test #342: RunCMake.CMP0054
  Test #343: RunCMake.CMP0055
  Test #344: RunCMake.CMP0057
  Test #345: RunCMake.CMP0059
  Test #346: RunCMake.CMP0060
  Test #347: RunCMake.CMP0064
  Test #348: RunCMake.CMP0069
  Test #349: RunCMake.CMP0081
  Test #350: RunCMake.CMP0102
  Test #351: RunCMake.CMP0106
  Test #352: RunCMake.CMP0111
  Test #353: RunCMake.CMP0115
  Test #354: RunCMake.CMP0118
  Test #355: RunCMake.CMP0119
  Test #356: RunCMake.CMP0121
  Test #357: RunCMake.CMP0065
  Test #358: RunCMake.Make
  Test #359: RunCMake.CTest
  Test #360: RunCMake.ctest_memcheck
  Test #361: RunCMake.ABI
  Test #362: RunCMake.AndroidTestUtilities
  Test #363: RunCMake.Autogen
  Test #364: RunCMake.ArtifactOutputDirs
  Test #365: RunCMake.BuildDepends
  Test #366: RunCMake.Byproducts
  Test #367: RunCMake.CMakeRoleGlobalProperty
  Test #368: RunCMake.CompilerChange
  Test #369: RunCMake.CompilerNotFound
  Test #370: RunCMake.Configure
  Test #371: RunCMake.DisallowedCommands
  Test #372: RunCMake.ExportCompileCommands
  Test #373: RunCMake.ExcludeFromAll
  Test #374: RunCMake.ExternalData
  Test #375: RunCMake.FeatureSummary
  Test #376: RunCMake.FPHSA
  Test #377: RunCMake.FileAPI
  Test #378: RunCMake.FindBoost
  Test #379: RunCMake.FindLua
  Test #380: RunCMake.FindOpenGL
  Test #381: RunCMake.GenerateExportHeader
  Test #382: RunCMake.GenEx-COMPILE_LANGUAGE
  Test #383: RunCMake.GenEx-COMPILE_LANG_AND_ID
  Test #384: RunCMake.GenEx-LINK_LANGUAGE
  Test #385: RunCMake.GenEx-LINK_LANG_AND_ID
  Test #386: RunCMake.GenEx-HOST_LINK
  Test #387: RunCMake.GenEx-DEVICE_LINK
  Test #388: RunCMake.GenEx-TARGET_FILE
  Test #389: RunCMake.GenEx-GENEX_EVAL
  Test #390: RunCMake.GenEx-TARGET_RUNTIME_DLLS
  Test #391: RunCMake.GeneratorExpression
  Test #392: RunCMake.GeneratorInstance
  Test #393: RunCMake.GeneratorPlatform
  Test #394: RunCMake.GeneratorToolset
  Test #395: RunCMake.GetPrerequisites
  Test #396: RunCMake.GNUInstallDirs
  Test #397: RunCMake.GoogleTest
  Test #398: RunCMake.Graphviz
  Test #399: RunCMake.TargetPropertyGeneratorExpressions
  Test #400: RunCMake.Languages
  Test #401: RunCMake.LinkStatic
  Test #402: RunCMake.ObjectLibrary
  Test #403: RunCMake.ParseImplicitIncludeInfo
  Test #404: RunCMake.ParseImplicitLinkInfo
  Test #405: RunCMake.RuntimePath
  Test #406: RunCMake.ScriptMode
  Test #407: RunCMake.Swift
  Test #408: RunCMake.TargetObjects
  Test #409: RunCMake.TargetSources
  Test #410: RunCMake.TargetProperties
  Test #411: RunCMake.ToolchainFile
  Test #412: RunCMake.find_dependency
  Test #413: RunCMake.CompileDefinitions
  Test #414: RunCMake.CompileFeatures
  Test #415: RunCMake.Policy
  Test #416: RunCMake.PolicyScope
  Test #417: RunCMake.WriteBasicConfigVersionFile
  Test #418: RunCMake.WriteCompilerDetectionHeader
  Test #419: RunCMake.SourceProperties
  Test #420: RunCMake.PositionIndependentCode
  Test #421: RunCMake.VisibilityPreset
  Test #422: RunCMake.CompatibleInterface
  Test #423: RunCMake.Syntax
  Test #424: RunCMake.WorkingDirectory
  Test #425: RunCMake.MaxRecursionDepth
  Test #426: RunCMake.add_custom_command
  Test #427: RunCMake.add_custom_target
  Test #428: RunCMake.add_dependencies
  Test #429: RunCMake.add_executable
  Test #430: RunCMake.add_library
  Test #431: RunCMake.add_subdirectory
  Test #432: RunCMake.add_test
  Test #433: RunCMake.build_command
  Test #434: RunCMake.execute_process
  Test #435: RunCMake.export
  Test #436: RunCMake.cmake_language
  Test #437: RunCMake.cmake_minimum_required
  Test #438: RunCMake.cmake_parse_arguments
  Test #439: RunCMake.cmake_path
  Test #440: RunCMake.continue
  Test #441: RunCMake.ctest_build
  Test #442: RunCMake.ctest_cmake_error
  Test #443: RunCMake.ctest_configure
  Test #444: RunCMake.ctest_coverage
  Test #445: RunCMake.ctest_start
  Test #446: RunCMake.ctest_submit
  Test #447: RunCMake.ctest_test
  Test #448: RunCMake.ctest_disabled_test
  Test #449: RunCMake.ctest_skipped_test
  Test #450: RunCMake.ctest_update
  Test #451: RunCMake.ctest_upload
  Test #452: RunCMake.ctest_fixtures
  Test #453: RunCMake.file
  Test #454: RunCMake.file-CHMOD
  Test #455: RunCMake.file-RPATH
  Test #456: RunCMake.find_file
  Test #457: RunCMake.find_library
  Test #458: RunCMake.find_package
  Test #459: RunCMake.find_path
  Test #460: RunCMake.find_program
  Test #461: RunCMake.foreach
  Test #462: RunCMake.function
  Test #463: RunCMake.get_filename_component
  Test #464: RunCMake.get_property
  Test #465: RunCMake.if
  Test #466: RunCMake.include
  Test #467: RunCMake.include_directories
  Test #468: RunCMake.include_guard
  Test #469: RunCMake.list
  Test #470: RunCMake.load_cache
  Test #471: RunCMake.math
  Test #472: RunCMake.message
  Test #473: RunCMake.option
  Test #474: RunCMake.project
  Test #475: RunCMake.project_injected
  Test #476: RunCMake.return
  Test #477: RunCMake.separate_arguments
  Test #478: RunCMake.set_property
  Test #479: RunCMake.string
  Test #480: RunCMake.test_include_dirs
  Test #481: RunCMake.BundleUtilities
  Test #482: RunCMake.try_compile
  Test #483: RunCMake.try_run
  Test #484: RunCMake.set
  Test #485: RunCMake.variable_watch
  Test #486: RunCMake.while
  Test #487: RunCMake.CMP0004
  Test #488: RunCMake.TargetPolicies
  Test #489: RunCMake.alias_targets
  Test #490: RunCMake.InterfaceLibrary
  Test #491: RunCMake.no_install_prefix
  Test #492: RunCMake.configure_file
  Test #493: RunCMake.CTestTimeout
  Test #494: RunCMake.CTestTimeoutAfterMatch
  Test #495: RunCMake.DependencyGraph
  Test #496: RunCMake.CTestResourceAllocation
  Test #497: RunCMake.SymlinkTrees
  Test #498: RunCMake.FindPkgConfig
  Test #499: RunCMake.File_Archive
  Test #500: RunCMake.File_Configure
  Test #501: RunCMake.File_Generate
  Test #502: RunCMake.ExportWithoutLanguage
  Test #503: RunCMake.target_link_directories
  Test #504: RunCMake.target_link_libraries
  Test #505: RunCMake.target_link_libraries-ALIAS
  Test #506: RunCMake.target_link_libraries-LINK_LANGUAGE
  Test #507: RunCMake.target_link_libraries-LINK_LANG_AND_ID
  Test #508: RunCMake.add_link_options
  Test #509: RunCMake.target_link_options
  Test #510: RunCMake.target_compile_definitions
  Test #511: RunCMake.target_compile_features
  Test #512: RunCMake.target_compile_options
  Test #513: RunCMake.target_include_directories
  Test #514: RunCMake.target_sources
  Test #515: RunCMake.CheckCompilerFlag
  Test #516: RunCMake.CheckSourceCompiles
  Test #517: RunCMake.CheckSourceRuns
  Test #518: RunCMake.CheckModules
  Test #519: RunCMake.CheckIPOSupported
  Test #520: RunCMake.CheckLinkerFlag
  Test #521: RunCMake.CommandLine
  Test #522: RunCMake.CommandLineTar
  Test #523: RunCMake.install
  Test #524: RunCMake.file-GET_RUNTIME_DEPENDENCIES
  Test #525: RunCMake.CPackCommandLine
  Test #526: RunCMake.CPackConfig
  Test #527: RunCMake.CPackInstallProperties
  Test #528: RunCMake.ExternalProject
  Test #529: RunCMake.FetchContent
  Test #530: RunCMake.CTestCommandLine
  Test #531: RunCMake.CacheNewline
  Test #532: RunCMake.CPackSymlinks
  Test #533: RunCMake.IfacePaths_INCDIRS
  Test #534: RunCMake.IfacePaths_SOURCES
  Test #535: RunCMake.CrosscompilingEmulator
  Test #536: RunCMake.LinkWhatYouUse
  Test #537: RunCMake.ClangTidy
  Test #538: RunCMake.IncludeWhatYouUse
  Test #539: RunCMake.Cpplint
  Test #540: RunCMake.Cppcheck
  Test #541: RunCMake.MultiLint
  Test #542: RunCMake.CompilerLauncher
  Test #543: RunCMake.ctest_labels_for_subprojects
  Test #544: RunCMake.CompilerArgs
  Test #545: RunCMake.CPack_DEB.CUSTOM_NAMES
  Test #546: RunCMake.CPack_DEB.DEBUGINFO
  Test #547: RunCMake.CPack_DEB.DEFAULT_PERMISSIONS
  Test #548: RunCMake.CPack_DEB.DEPENDENCIES
  Test #549: RunCMake.CPack_DEB.EMPTY_DIR
  Test #550: RunCMake.CPack_DEB.VERSION
  Test #551: RunCMake.CPack_DEB.EXTRA
  Test #552: RunCMake.CPack_DEB.GENERATE_SHLIBS
  Test #553: RunCMake.CPack_DEB.GENERATE_SHLIBS_LDCONFIG
  Test #554: RunCMake.CPack_DEB.LONG_FILENAMES
  Test #555: RunCMake.CPack_DEB.MINIMAL
  Test #556: RunCMake.CPack_DEB.PER_COMPONENT_FIELDS
  Test #557: RunCMake.CPack_DEB.TIMESTAMPS
  Test #558: RunCMake.CPack_DEB.MD5SUMS
  Test #559: RunCMake.CPack_DEB.DEB_PACKAGE_VERSION_BACK_COMPATIBILITY
  Test #560: RunCMake.CPack_DEB.DEB_DESCRIPTION
  Test #561: RunCMake.CPack_DEB.PROJECT_META
  Test #562: RunCMake.CPack_7Z
  Test #563: RunCMake.CPack_TBZ2
  Test #564: RunCMake.CPack_TGZ
  Test #565: RunCMake.CPack_TXZ
  Test #566: RunCMake.CPack_TZ
  Test #567: RunCMake.CPack_ZIP
  Test #568: RunCMake.CPack_STGZ
  Test #569: RunCMake.CPack_External
  Test #570: RunCMake.AutoExportDll
  Test #571: RunCMake.AndroidMK
  Test #572: RunCMake.CTestCommandExpandLists
  Test #573: RunCMake.PrecompileHeaders
  Test #574: RunCMake.UnityBuild
  Test #575: RunCMake.CMakePresets
  Test #576: RunCMake.CMakePresetsBuild
  Test #577: RunCMake.CMakePresetsTest
  Test #578: RunCMake.TransformDepfile
  Test #579: FindPackageModeMakefileTest
  Test #580: FindThreads.C-only
  Test #581: FindThreads.CXX-only
  Test #582: CMake.List
  Test #583: CMake.VariableWatch
  Test #584: CMake.Include
  Test #585: CMake.FindBase
  Test #586: CMake.Toolchain
  Test #587: CMake.GetFilenameComponentRealpath
  Test #588: CMake.Version
  Test #589: CMake.Message
  Test #590: CMake.File
  Test #591: CMake.ImplicitLinkInfo
  Test #592: CMake.ModuleNotices
  Test #593: CMake.GetProperty
  Test #594: CMake.If
  Test #595: CMake.String
  Test #596: CMake.Math
  Test #597: CMake.CMakeMinimumRequired
  Test #598: CMake.CompilerIdVendor
  Test #599: CMake.ProcessorCount
  Test #600: CMake.PushCheckState
  Test #601: CMake.While
  Test #602: CMake.CMakeHostSystemInformation
  Test #603: CMake.FileDownload
  Test #604: CMake.FileDownloadBadHash
  Test #605: CMake.FileUpload
  Test #606: CMake.EndStuff
  Test #607: CMake.GetPrerequisites
  Test #608: CMake.PolicyCheck
  Test #609: CMake.CheckSourceTree

Total Tests: 600
running cd "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/../.." && /home/zachary/oss/labs/lab-08/build/bin/ctest -N -I 3,4  2>&1
Test project /home/zachary/oss/labs/lab-08/build
Guessing configuration NoConfig
  Test #3: kwsys.testTerminal
  Test #4: kwsys.testConfigure

Total Tests: 2
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help  2>&1
Usage

  ctest [options]

Options
  --preset <preset>, --preset=<preset>
                               = Read arguments from a test preset.
  --list-presets               = List available test presets.
  -C <cfg>, --build-config <cfg>
                               = Choose configuration to test.
  --progress                   = Enable short progress output from tests.
  -V,--verbose                 = Enable verbose output from tests.
  -VV,--extra-verbose          = Enable more verbose output from tests.
  --debug                      = Displaying more verbose internals of CTest.
  --output-on-failure          = Output anything outputted by the test
                                 program if the test should fail.
  --stop-on-failure            = Stop running the tests after one has failed.
  --test-output-size-passed <size>
                               = Limit the output for passed tests to <size>
                                 bytes
  --test-output-size-failed <size>
                               = Limit the output for failed tests to <size>
                                 bytes
  -F                           = Enable failover.
  -j <jobs>, --parallel <jobs> = Run the tests in parallel using the given
                                 number of jobs.
  -Q,--quiet                   = Make ctest quiet.
  -O <file>, --output-log <file>
                               = Output to log file
  -N,--show-only[=format]      = Disable actual execution of tests.  The
                                 optional 'format' defines the format of the
                                 test information and can be 'human' for the
                                 current text format or 'json-v1' for json
                                 format.  Defaults to 'human'.
  -L <regex>, --label-regex <regex>
                               = Run tests with labels matching regular
                                 expression.  With multiple -L, run tests
                                 where each regular expression matches at
                                 least one label.
  -R <regex>, --tests-regex <regex>
                               = Run tests matching regular expression.
  -E <regex>, --exclude-regex <regex>
                               = Exclude tests matching regular expression.
  -LE <regex>, --label-exclude <regex>
                               = Exclude tests with labels matching regular
                                 expression.  With multiple -LE, exclude
                                 tests where each regular expression matches
                                 at least one label.
  -FA <regex>, --fixture-exclude-any <regex>
                               = Do not automatically add any tests for
                                 fixtures matching regular expression.
  -FS <regex>, --fixture-exclude-setup <regex>
                               = Do not automatically add setup tests for
                                 fixtures matching regular expression.
  -FC <regex>, --fixture-exclude-cleanup <regex>
                               = Do not automatically add cleanup tests for
                                 fixtures matching regular expression.
  -D <dashboard>, --dashboard <dashboard>
                               = Execute dashboard test
  -D <var>:<type>=<value>      = Define a variable for script mode
  -M <model>, --test-model <model>
                               = Sets the model for a dashboard
  -T <action>, --test-action <action>
                               = Sets the dashboard action to perform
  --group <group>              = Specify what build group on the dashboard
                                 you'd like to submit results to.
  -S <script>, --script <script>
                               = Execute a dashboard for a configuration
  -SP <script>, --script-new-process <script>
                               = Execute a dashboard for a configuration
  -A <file>, --add-notes <file>= Add a notes file with submission
  -I [Start,End,Stride,test#,test#|Test file], --tests-information
                               = Run a specific number of tests by number.
  -U, --union                  = Take the Union of -I and -R
  --rerun-failed               = Run only the tests that failed previously
  --repeat until-fail:<n>, --repeat-until-fail <n>
                               = Require each test to run <n> times without
                                 failing in order to pass
  --repeat until-pass:<n>      = Allow each test to run up to <n> times in
                                 order to pass
  --repeat after-timeout:<n>   = Allow each test to run up to <n> times if it
                                 times out
  --max-width <width>          = Set the max width for a test name to output
  --interactive-debug-mode [0|1]
                               = Set the interactive mode to 0 or 1.
  --resource-spec-file <file>  = Set the resource spec file to use.
  --no-label-summary           = Disable timing summary information for
                                 labels.
  --no-subproject-summary      = Disable timing summary information for
                                 subprojects.
  --test-dir <dir>             = Specify the directory in which to look for
                                 tests.
  --build-and-test             = Configure, build and run a test.
  --build-target               = Specify a specific target to build.
  --build-nocmake              = Run the build without running cmake first.
  --build-run-dir              = Specify directory to run programs from.
  --build-two-config           = Run CMake twice
  --build-exe-dir              = Specify the directory for the executable.
  --build-generator            = Specify the generator to use.
  --build-generator-platform   = Specify the generator-specific platform.
  --build-generator-toolset    = Specify the generator-specific toolset.
  --build-project              = Specify the name of the project to build.
  --build-makeprogram          = Specify the make program to use.
  --build-noclean              = Skip the make clean step.
  --build-config-sample        = A sample executable to use to determine the
                                 configuration
  --build-options              = Add extra options to the build step.
  --test-command               = The test to run with the --build-and-test
                                 option.
  --test-timeout               = The time limit in seconds, internal use
                                 only.
  --test-load                  = CPU load threshold for starting new parallel
                                 tests.
  --tomorrow-tag               = Nightly or experimental starts with next day
                                 tag.
  --overwrite                  = Overwrite CTest configuration option.
  --extra-submit <file>[;<file>]
                               = Submit extra files to the dashboard.
  --force-new-ctest-process    = Run child CTest instances as new processes
  --schedule-random            = Use a random order for scheduling tests
  --submit-index               = Submit individual dashboard tests with
                                 specific index
  --timeout <seconds>          = Set the default test timeout.
  --stop-time <time>           = Set a time at which all tests should stop
                                 running.
  --http1.0                    = Submit using HTTP 1.0.
  --no-compress-output         = Do not compress test output when submitting.
  --print-labels               = Print all available test labels.
  --no-tests=<[error|ignore]>  = Regard no tests found either as 'error' or
                                 'ignore' it.
  --help,-help,-usage,-h,-H,/? = Print usage information and exit.
  --version,-version,/V [<f>]  = Print version number and exit.
  --help-full [<f>]            = Print all help manuals and exit.
  --help-manual <man> [<f>]    = Print one help manual and exit.
  --help-manual-list [<f>]     = List help manuals available and exit.
  --help-command <cmd> [<f>]   = Print help for one command and exit.
  --help-command-list [<f>]    = List commands with help available and exit.
  --help-commands [<f>]        = Print cmake-commands manual and exit.
  --help-module <mod> [<f>]    = Print help for one module and exit.
  --help-module-list [<f>]     = List modules with help available and exit.
  --help-modules [<f>]         = Print cmake-modules manual and exit.
  --help-policy <cmp> [<f>]    = Print help for one policy and exit.
  --help-policy-list [<f>]     = List policies with help available and exit.
  --help-policies [<f>]        = Print cmake-policies manual and exit.
  --help-property <prop> [<f>] = Print help for one property and exit.
  --help-property-list [<f>]   = List properties with help available and
                                 exit.
  --help-properties [<f>]      = Print cmake-properties manual and exit.
  --help-variable var [<f>]    = Print help for one variable and exit.
  --help-variable-list [<f>]   = List variables with help available and exit.
  --help-variables [<f>]       = Print cmake-variables manual and exit.

running /home/zachary/oss/labs/lab-08/build/bin/ctest --copyright  2>&1
Warning: --copyright no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help-full "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/ctest.txt"  2>&1
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help-man "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/ctest.man"  2>&1
Warning: --help-man no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/ctest --help-html "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/ctest.html"  2>&1
Warning: --help-html no longer supported
running /home/zachary/oss/labs/lab-08/build/bin/ctest --version  2>&1
ctest version 3.20.20210331-gbd4ebf1

CMake suite maintained and supported by Kitware (kitware.com/cmake).
***************************
PreLoad.cmake works fine.
***************************
Environment variable set to: Environment variable set
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building CXX object CMakeFiles/CommandLineTest.dir/CommandLineTest.cxx.o
[100%] Linking CXX executable CommandLineTest
[100%] Built target CommandLineTest

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/CommandLineTest/CommandLineTest"

<end of output>
Test time =   3.89 sec
----------------------------------------------------------
Test Passed.
"CommandLineTest" end time: Mar 31 13:41 EDT
"CommandLineTest" time elapsed: 00:00:03
----------------------------------------------------------

27/609 Testing: FindPackageTest
27/609 Test: FindPackageTest
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/FindPackageTest" "/home/zachary/oss/labs/lab-08/build/Tests/FindPackageTest" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "FindPackageTest" "--build-options" "--test-command" "FindPackageTest"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"FindPackageTest" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/FindPackageTest
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
CMake Warning (dev) at /home/zachary/cmake/Modules/FindOpenGL.cmake:315 (message):
  Policy CMP0072 is not set: FindOpenGL prefers GLVND by default when
  available.  Run "cmake --help-policy CMP0072" for policy details.  Use the
  cmake_policy command to set the policy and suppress this warning.

  FindOpenGL found both a legacy GL library:

    OPENGL_gl_LIBRARY: /usr/lib/x86_64-linux-gnu/libGL.so

  and GLVND libraries for OpenGL and GLX:

    OPENGL_opengl_LIBRARY: /usr/lib/x86_64-linux-gnu/libOpenGL.so
    OPENGL_glx_LIBRARY: /usr/lib/x86_64-linux-gnu/libGLX.so

  OpenGL_GL_PREFERENCE has not been set to "GLVND" or "LEGACY", so for
  compatibility with CMake 3.10 and below the legacy GL library will be used.
Call Stack (most recent call first):
  CMakeLists.txt:17 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

Found LotsOfComponents: TRUE  found components: AComp CComp missing components: BComp
Found SomePackage: TRUE  
Found UpperCasePackage: TRUE  
CMake Warning at CMakeLists.txt:153 (find_package):
  Found package configuration file:

    /home/zachary/cmake/Tests/FindPackageTest/cmake/SetFoundFALSEConfig.cmake

  but it set SetFoundFALSE_FOUND to FALSE so package "SetFoundFALSE" is
  considered to be NOT FOUND.


Preparing export(PACKAGE) test project
CMake Deprecation Warning at /home/zachary/cmake/Tests/FindPackageTest/Exporter/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Searching for export(PACKAGE) test project
Searching for export(PACKAGE) with CMAKE_FIND_USE_PACKAGE_REGISTRY=TRUE
Searching for export(PACKAGE) with CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=FALSE
Searching for export(PACKAGE) with CMAKE_FIND_USE_PACKAGE_REGISTRY=TRUE and CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=TRUE
Searching for export(PACKAGE) with CMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE and CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=FALSE
Remove export(PACKAGE) test project
Preparing export(PACKAGE) test project with CMAKE_EXPORT_NO_PACKAGE_REGISTRY=TRUE
CMake Deprecation Warning at /home/zachary/cmake/Tests/FindPackageTest/Exporter/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Searching for export(PACKAGE) test project
Remove export(PACKAGE) test project
Preparing export(PACKAGE) test project with POLICY CMP0090=NEW
CMake Deprecation Warning at /home/zachary/cmake/Tests/FindPackageTest/Exporter/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Searching for export(PACKAGE) test project
SortLib 3.1.1 config reached
SortLib 3.10.1 config reached
Could NOT find ACME (missing: ACME_DIR)
Could NOT find ACME (missing: ACME_DIR)
CMake Warning at CMakeLists.txt:661 (find_package):
  By not providing "FindDoesNotExist.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "DoesNotExist", but CMake did not find one.

  Could not find a package configuration file provided by "DoesNotExist" with
  any of the following names:

    DoesNotExistConfig.cmake
    doesnotexist-config.cmake

  Add the installation prefix of "DoesNotExist" to CMAKE_PREFIX_PATH or set
  "DoesNotExist_DIR" to a directory containing one of the above files.  If
  "DoesNotExist" provides a separate development package or SDK, be sure it
  has been installed.


Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/FindPackageTest
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at /home/zachary/cmake/Modules/FindOpenGL.cmake:315 (message):
  Policy CMP0072 is not set: FindOpenGL prefers GLVND by default when
  available.  Run "cmake --help-policy CMP0072" for policy details.  Use the
  cmake_policy command to set the policy and suppress this warning.

  FindOpenGL found both a legacy GL library:

    OPENGL_gl_LIBRARY: /usr/lib/x86_64-linux-gnu/libGL.so

  and GLVND libraries for OpenGL and GLX:

    OPENGL_opengl_LIBRARY: /usr/lib/x86_64-linux-gnu/libOpenGL.so
    OPENGL_glx_LIBRARY: /usr/lib/x86_64-linux-gnu/libGLX.so

  OpenGL_GL_PREFERENCE has not been set to "GLVND" or "LEGACY", so for
  compatibility with CMake 3.10 and below the legacy GL library will be used.
Call Stack (most recent call first):
  CMakeLists.txt:17 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning at CMakeLists.txt:153 (find_package):
  Found package configuration file:

    /home/zachary/cmake/Tests/FindPackageTest/cmake/SetFoundFALSEConfig.cmake

  but it set SetFoundFALSE_FOUND to FALSE so package "SetFoundFALSE" is
  considered to be NOT FOUND.


Preparing export(PACKAGE) test project
CMake Deprecation Warning at /home/zachary/cmake/Tests/FindPackageTest/Exporter/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Searching for export(PACKAGE) test project
Searching for export(PACKAGE) with CMAKE_FIND_USE_PACKAGE_REGISTRY=TRUE
Searching for export(PACKAGE) with CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=FALSE
Searching for export(PACKAGE) with CMAKE_FIND_USE_PACKAGE_REGISTRY=TRUE and CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=TRUE
Searching for export(PACKAGE) with CMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE and CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=FALSE
Remove export(PACKAGE) test project
Preparing export(PACKAGE) test project with CMAKE_EXPORT_NO_PACKAGE_REGISTRY=TRUE
CMake Deprecation Warning at /home/zachary/cmake/Tests/FindPackageTest/Exporter/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Searching for export(PACKAGE) test project
Remove export(PACKAGE) test project
Preparing export(PACKAGE) test project with POLICY CMP0090=NEW
CMake Deprecation Warning at /home/zachary/cmake/Tests/FindPackageTest/Exporter/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Searching for export(PACKAGE) test project
SortLib 3.1.1 config reached
SortLib 3.10.1 config reached
Could NOT find ACME (missing: ACME_DIR)
Could NOT find ACME (missing: ACME_DIR)
CMake Warning at CMakeLists.txt:661 (find_package):
  By not providing "FindDoesNotExist.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "DoesNotExist", but CMake did not find one.

  Could not find a package configuration file provided by "DoesNotExist" with
  any of the following names:

    DoesNotExistConfig.cmake
    doesnotexist-config.cmake

  Add the installation prefix of "DoesNotExist" to CMAKE_PREFIX_PATH or set
  "DoesNotExist_DIR" to a directory containing one of the above files.  If
  "DoesNotExist" provides a separate development package or SDK, be sure it
  has been installed.


Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/FindPackageTest
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/FindPackageTest

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building CXX object CMakeFiles/FindPackageTest.dir/FindPackageTest.cxx.o
[100%] Linking CXX executable FindPackageTest
[100%] Built target FindPackageTest

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/FindPackageTest/FindPackageTest"

<end of output>
Test time =   1.34 sec
----------------------------------------------------------
Test Passed.
"FindPackageTest" end time: Mar 31 13:41 EDT
"FindPackageTest" time elapsed: 00:00:01
----------------------------------------------------------

28/609 Testing: StringFileTest
28/609 Test: StringFileTest
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/StringFileTest" "/home/zachary/oss/labs/lab-08/build/Tests/StringFileTest" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "StringFileTest" "--build-options" "--test-command" "StringFileTest"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"StringFileTest" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/StringFileTest
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
file(READ HEX) correctly read [0001027700]
file(STRINGS) correctly read [#include "includefile"
]
file(STRINGS) correctly read from hex file ["INFO:compiler[SDCC-HEX]]
file(STRINGS) correctly read from srec file ["INFO:compiler[SDCC-SREC]]
file(STRINGS) correctly read from utf8 file [The value of π (pi) is 3.141593;Line mixed with binary partially matches valid utf8: π is ;93.1593]
[ST1] == [ST1]
[ST2] == [ST2]
[ST3] == [ST3]
Output: [$(VAR1)$(VAR2)/$(VAR3)]
Files in /home/zachary/cmake/Tests/StringFileTest are /home/zachary/cmake/Tests/StringFileTest/CMakeLists.txt;/home/zachary/cmake/Tests/StringFileTest/InputFile.h.in;/home/zachary/cmake/Tests/StringFileTest/StringFile.cxx;/home/zachary/cmake/Tests/StringFileTest/main.ihx;/home/zachary/cmake/Tests/StringFileTest/main.srec;/home/zachary/cmake/Tests/StringFileTest/test.bin;/home/zachary/cmake/Tests/StringFileTest/test.utf8
Glob expression is [/home/zachary/oss/labs/lab-08/build/Tests/StringFileTest/src/[sS][!a-su-zA-Z0-9][^a-qs-zA-Z0-9]ing?ile*.cxx].
Globbed files [/home/zachary/oss/labs/lab-08/build/Tests/StringFileTest/src/StringFile.cxx].
Globbed files [BuildDepends/Project/bar.cxx;BuildDepends/Project/dep.cxx;BuildDepends/Project/dep_custom.cxx;BuildDepends/Project/dep_custom2.cxx;BuildDepends/Project/generator.cxx;BuildDepends/Project/linkdep.cxx;BuildDepends/Project/object_depends.cxx;BuildDepends/Project/zot.cxx;BuildDepends/Project/zot_macro_dir.cxx;BuildDepends/Project/zot_macro_tgt.cxx;BuildDepends/Project/zot_pch.cxx;BundleGeneratorTest/Executable.cxx;BundleGeneratorTest/Library.cxx;BundleTest/BundleLib.cxx;BundleTest/BundleTest.cxx;CMakeGUI/CMakeGUITest.cxx;CMakeGUI/CatchShow.cxx;CMakeGUI/CatchShowTest.cxx;CMakeGUI/EnvironmentDialogTest.cxx;CMakeGUI/QCMakeCacheModelTest.cxx;CMakeGUI/QCMakePresetComboBoxTest.cxx;CMakeGUI/QCMakePresetItemModelTest.cxx;CMakeGUI/QCMakePresetTest.cxx;CMakeLib/run_compile_commands.cxx;CMakeLib/testAffinity.cxx;CMakeLib/testArgumentParser.cxx;CMakeLib/testCMExtAlgorithm.cxx;CMakeLib/testCMExtMemory.cxx;CMakeLib/testCMFilesystemPath.cxx;CMakeLib/testCTestBinPacker.cxx;CMakeLib/testCTestResourceAllocator.cxx;CMakeLib/testCTestResourceGroups.cxx;CMakeLib/testCTestResourceSpec.cxx;CMakeLib/testEncoding.cxx;CMakeLib/testFindPackageCommand.cxx;CMakeLib/testGccDepfileReader.cxx;CMakeLib/testGeneratedFileStream.cxx;CMakeLib/testJSONHelpers.cxx;CMakeLib/testOptional.cxx;CMakeLib/testRST.cxx;CMakeLib/testRange.cxx;CMakeLib/testString.cxx;CMakeLib/testStringAlgorithms.cxx;CMakeLib/testSystemTools.cxx;CMakeLib/testUTF8.cxx;CMakeLib/testUVProcessChain.cxx;CMakeLib/testUVProcessChainHelper.cxx;CMakeLib/testUVRAII.cxx;CMakeLib/testUVStreambuf.cxx;CMakeLib/testVisualStudioSlnParser.cxx;CMakeLib/testXMLParser.cxx;CMakeLib/testXMLSafe.cxx;CTestConfig/CTestConfig.cxx;CTestTest/SmallAndFast/intentional_compile_error.cxx;CTestTest/SmallAndFast/intentional_compile_warning.cxx;CTestTestCrash/crash.cxx;CTestTestCycle/simple.cxx;CTestTestDepends/simple.cxx;CTestTestFailure/badCode.cxx;CTestTestLaunchers/launcher_compiler_test_project/build_error.cxx;CTestTestLaunchers/launcher_linker_test_project/link_error.cxx;CommandLineTest/CommandLineTest.cxx;CompileCommandOutput/compile_command_output.cxx;CompileCommandOutput/file with spaces.cxx;CompileCommandOutput/file_with_underscores.cxx;CompileCommandOutput/relative.cxx;Complex/Executable/A.cxx;Complex/Executable/complex.cxx;Complex/Executable/complex.file.cxx;Complex/Executable/complex_nobuild.cxx;Complex/Executable/notInAllExe.cxx;Complex/Executable/testSystemDir.cxx;Complex/Library/ExtraSources/file1.cxx;Complex/Library/create_file.cxx;Complex/Library/file2.cxx;Complex/Library/notInAllLib.cxx;Complex/Library/sharedFile.cxx;ComplexOneConfig/Executable/A.cxx;ComplexOneConfig/Executable/complex.cxx;ComplexOneConfig/Executable/complex.file.cxx;ComplexOneConfig/Executable/complex_nobuild.cxx;ComplexOneConfig/Executable/notInAllExe.cxx;ComplexOneConfig/Executable/testSystemDir.cxx;ComplexOneConfig/Library/ExtraSources/file1.cxx;ComplexOneConfig/Library/create_file.cxx;ComplexOneConfig/Library/file2.cxx;ComplexOneConfig/Library/notInAllLib.cxx;ComplexOneConfig/Library/sharedFile.cxx;Cuda/NotEnabled/lib.cxx;Cuda/NotEnabled/main.cxx;Cuda/ProperDeviceLibraries/use_pthreads.cxx;Cuda/ProperLinkFlags/main.cxx;CustComDepend/foo.cxx;CustomCommand/empty_command.cxx;CustomCommand/generator.cxx;CustomCommand/main.cxx;CustomCommand/tcat.cxx;CustomCommand/wrapper.cxx;CxxDialect/use_constexpr.cxx;CxxDialect/use_constexpr_and_typeof.cxx;CxxDialect/use_typeof.cxx;CxxOnly/cxxonly.cxx;CxxOnly/libcxx1.cxx;CxxOnly/libcxx2.cxx;CxxOnly/testCxxModule.cxx;CxxSubdirC/main.cxx;EmptyProperty/EmptyProperty.cxx;Environment/main.cxx;ExportImport/Export/renamed/renamed.cxx;ExportImport/Export/testLib6.cxx;ExternalOBJ/Object/external_main.cxx;ExternalOBJ/Object/external_object.cxx;ExternalOBJ/executable.cxx;ExternalProjectLocal/Step5/MathFunctions/MakeTable.cxx;ExternalProjectLocal/Step5/MathFunctions/mysqrt.cxx;ExternalProjectLocal/Step5/tutorial.cxx;FindBoost/Test/main.cxx;FindBoost/TestFail/main.cxx;FindBoost/TestHeaders/main.cxx;FindGTest/Test/main.cxx;FindIconv/Test/main.cxx;FindIntl/Test/main.cxx;FindJsonCpp/Test/main.cxx;FindOpenACC/CXXTest/main.cxx;FindPackageTest/FindPackageTest.cxx;FindProtobuf/Test/main-desc.cxx;FindProtobuf/Test/main-generate.cxx;FindProtobuf/Test/main-protoc.cxx;FindProtobuf/Test/main.cxx;FindTIFF/Test/main.cxx;FindXalanC/Test/main.cxx;FindXercesC/Test/main.cxx;Fortran/mycxx.cxx;Framework/bar.cxx;Framework/foo.cxx;GoogleTest/Test/empty.cxx;GoogleTest/Test/main1.cxx;GoogleTest/Test/main2.cxx;GoogleTest/Test/main3.cxx;GoogleTest/Test/main4.cxx;ISPC/ChainedStaticLibraries/extra.cxx;ISPC/ChainedStaticLibraries/main.cxx;ISPC/CustomHeaderSuffix/extra.cxx;ISPC/CustomHeaderSuffix/main.cxx;ISPC/Defines/main.cxx;ISPC/DynamicLibrary/extra.cxx;ISPC/DynamicLibrary/main.cxx;ISPC/DynamicLibrary/shim.cxx;ISPC/DynamicLibrary/simple.cxx;ISPC/ObjectGenex/main.cxx;ISPC/ObjectLibrary/extra.cxx;ISPC/ObjectLibrary/main.cxx;ISPC/ResponseAndDefine/main.cxx;ISPC/StaticLibrary/main.cxx;ISPC/SystemIncludes/main.cxx;ISPC/TryCompile/main.cxx;IncludeDirectories/SystemIncludeDirectoriesPerLang/smoke_out_includes.cxx;JCTest/TestTime.cxx;Jump/Executable/jumpExecutable.cxx;Jump/Library/Shared/jumpShared.cxx;Jump/Library/Static/jumpStatic.cxx;LinkLanguage/foo.cxx;MSVCRuntimeLibrary/verify.cxx;MakeClean/ToClean/toclean.cxx;MathTest/MathTestExec.cxx;Module/CheckTypeSize/CheckTypeSize.cxx;NewlineArgs/cxxonly.cxx;NewlineArgs/libcxx1.cxx;ObjectLibrary/ExportLanguages/a.cxx;OutOfSource/OutOfSourceSubdir/simple.cxx;OutOfSource/OutOfSourceSubdir/testlib.cxx;OutOfSource/simple.cxx;Plugin/src/DynamicLoader.cxx;Plugin/src/example_exe.cxx;PreOrder/Library/simpleLib.cxx;PreOrder/simple.cxx;Preprocess/preprocess.cxx;Properties/SubDir/properties3.cxx;Properties/subdirtest.cxx;RunCMake/Android/android.cxx;RunCMake/Android/android_lib.cxx;RunCMake/Android/android_sysinc.cxx;RunCMake/AndroidMK/foo.cxx;RunCMake/AutoExportDll/cppCLI.cxx;RunCMake/AutoExportDll/hello.cxx;RunCMake/AutoExportDll/say.cxx;RunCMake/AutoExportDll/sub/sub.cxx;RunCMake/AutoExportDll/world.cxx;RunCMake/BuildDepends/MakeCustomIncludes.cxx;RunCMake/CMP0104/main.cxx;RunCMake/CSharpReferenceImport/ImportLibMixed.cxx;RunCMake/CSharpReferenceImport/ImportLibMixedNative.cxx;RunCMake/CSharpReferenceImport/ImportLibNative.cxx;RunCMake/CSharpReferenceImport/ImportLibPure.cxx;RunCMake/CSharpReferenceImport/ImportLibSafe.cxx;RunCMake/CSharpReferenceImport/ReferenceImportMixed.cxx;RunCMake/CSharpReferenceImport/ReferenceImportNative.cxx;RunCMake/CSharpReferenceImport/ReferenceImportPure.cxx;RunCMake/CSharpReferenceImport/ReferenceImportSafe.cxx;RunCMake/CTestResourceAllocation/ctresalloc.cxx;RunCMake/ClangTidy/main.cxx;RunCMake/CompilerArgs/main.cxx;RunCMake/CompilerLauncher/main.cxx;RunCMake/Cppcheck/main.cxx;RunCMake/Cpplint/main.cxx;RunCMake/CrosscompilingEmulator/generated_exe_emulator_unexpected.cxx;RunCMake/CrosscompilingEmulator/simple_src_exiterror.cxx;RunCMake/FileAPI/empty.cxx;RunCMake/IncludeWhatYouUse/main.cxx;RunCMake/LinkWhatYouUse/main.cxx;RunCMake/MetaCompileFeatures/a.cxx;RunCMake/MultiLint/main.cxx;RunCMake/NinjaMultiConfig/qt5.cxx;RunCMake/PrecompileHeaders/use_pch.cxx;RunCMake/UnityBuild/f.cxx;RunCMake/VS10Project/empty.cxx;RunCMake/add_link_options/LinkOptionsLib.cxx;RunCMake/target_link_libraries-LINK_LANGUAGE/func.cxx;RunCMake/target_link_libraries-LINK_LANGUAGE/main.cxx;RunCMake/target_link_libraries-LINK_LANG_AND_ID/func.cxx;RunCMake/target_link_libraries-LINK_LANG_AND_ID/main.cxx;RunCMake/try_compile/CxxStandardGNU.cxx;RunCMake/try_compile/src.cxx;SBCS/SBCS.cxx;SetLang/stay_cxx.cxx;Simple/simple.cxx;Simple/simpleLib.cxx;StringFileTest/StringFile.cxx;SubDir/Examples/example1/example1.cxx;SubDir/Examples/example2/example2.cxx;SubDir/Executable/test.cxx;SubDirSpaces/Executable Sources/test.cxx;SubDirSpaces/Executable/test.cxx;SubDirSpaces/Some Examples/example1/example1.cxx;SubDirSpaces/Some Examples/example2/example2.cxx;SubProject/bar.cxx;SubProject/car.cxx;SubProject/foo/foo.cxx;SystemInformation/DumpInformation.cxx;TestDriver/subdir/test3.cxx;TestDriver/test1.cxx;TestDriver/test2.cxx;TestDriver/testExtraStuff.cxx;TestDriver/testExtraStuff2.cxx;TestDriver/testExtraStuff3.cxx;Testing/Sub/Sub2/testing2.cxx;Testing/testing.cxx;TryCompile/pass2b.cxx;UseSWIG/MultipleFiles/add.cxx;UseSWIG/MultipleFiles/sub.cxx;UseSWIG/example.cxx;Wrapping/fakefluid.cxx;Wrapping/itkWrapperConfig.cxx;Wrapping/qtnoqtmain.cxx;Wrapping/qtwrappingmain.cxx;Wrapping/vtkExcluded.cxx;Wrapping/vtkIncluded.cxx;Wrapping/wrapFLTK.cxx;Wrapping/wrapping.cxx;X11/HelloWorldX11.cxx].
Cheack if FOREACH with RANGE works
FOREACH with RANGE 5 produces 0;1;2;3;4;5
FOREACH with RANGE 3;5 produces 3;4;5
FOREACH with RANGE 5;3 produces 5;4;3
FOREACH with RANGE 3;10;2 produces 3;5;7;9
FOREACH with RANGE 10;0;-3 produces 10;7;4;1
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/StringFileTest
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


file(READ HEX) correctly read [0001027700]
file(STRINGS) correctly read [#include "includefile"
]
file(STRINGS) correctly read from hex file ["INFO:compiler[SDCC-HEX]]
file(STRINGS) correctly read from srec file ["INFO:compiler[SDCC-SREC]]
file(STRINGS) correctly read from utf8 file [The value of π (pi) is 3.141593;Line mixed with binary partially matches valid utf8: π is ;93.1593]
[ST1] == [ST1]
[ST2] == [ST2]
[ST3] == [ST3]
Output: [$(VAR1)$(VAR2)/$(VAR3)]
Files in /home/zachary/cmake/Tests/StringFileTest are /home/zachary/cmake/Tests/StringFileTest/CMakeLists.txt;/home/zachary/cmake/Tests/StringFileTest/InputFile.h.in;/home/zachary/cmake/Tests/StringFileTest/StringFile.cxx;/home/zachary/cmake/Tests/StringFileTest/main.ihx;/home/zachary/cmake/Tests/StringFileTest/main.srec;/home/zachary/cmake/Tests/StringFileTest/test.bin;/home/zachary/cmake/Tests/StringFileTest/test.utf8
Glob expression is [/home/zachary/oss/labs/lab-08/build/Tests/StringFileTest/src/[sS][!a-su-zA-Z0-9][^a-qs-zA-Z0-9]ing?ile*.cxx].
Globbed files [/home/zachary/oss/labs/lab-08/build/Tests/StringFileTest/src/StringFile.cxx].
Globbed files [BuildDepends/Project/bar.cxx;BuildDepends/Project/dep.cxx;BuildDepends/Project/dep_custom.cxx;BuildDepends/Project/dep_custom2.cxx;BuildDepends/Project/generator.cxx;BuildDepends/Project/linkdep.cxx;BuildDepends/Project/object_depends.cxx;BuildDepends/Project/zot.cxx;BuildDepends/Project/zot_macro_dir.cxx;BuildDepends/Project/zot_macro_tgt.cxx;BuildDepends/Project/zot_pch.cxx;BundleGeneratorTest/Executable.cxx;BundleGeneratorTest/Library.cxx;BundleTest/BundleLib.cxx;BundleTest/BundleTest.cxx;CMakeGUI/CMakeGUITest.cxx;CMakeGUI/CatchShow.cxx;CMakeGUI/CatchShowTest.cxx;CMakeGUI/EnvironmentDialogTest.cxx;CMakeGUI/QCMakeCacheModelTest.cxx;CMakeGUI/QCMakePresetComboBoxTest.cxx;CMakeGUI/QCMakePresetItemModelTest.cxx;CMakeGUI/QCMakePresetTest.cxx;CMakeLib/run_compile_commands.cxx;CMakeLib/testAffinity.cxx;CMakeLib/testArgumentParser.cxx;CMakeLib/testCMExtAlgorithm.cxx;CMakeLib/testCMExtMemory.cxx;CMakeLib/testCMFilesystemPath.cxx;CMakeLib/testCTestBinPacker.cxx;CMakeLib/testCTestResourceAllocator.cxx;CMakeLib/testCTestResourceGroups.cxx;CMakeLib/testCTestResourceSpec.cxx;CMakeLib/testEncoding.cxx;CMakeLib/testFindPackageCommand.cxx;CMakeLib/testGccDepfileReader.cxx;CMakeLib/testGeneratedFileStream.cxx;CMakeLib/testJSONHelpers.cxx;CMakeLib/testOptional.cxx;CMakeLib/testRST.cxx;CMakeLib/testRange.cxx;CMakeLib/testString.cxx;CMakeLib/testStringAlgorithms.cxx;CMakeLib/testSystemTools.cxx;CMakeLib/testUTF8.cxx;CMakeLib/testUVProcessChain.cxx;CMakeLib/testUVProcessChainHelper.cxx;CMakeLib/testUVRAII.cxx;CMakeLib/testUVStreambuf.cxx;CMakeLib/testVisualStudioSlnParser.cxx;CMakeLib/testXMLParser.cxx;CMakeLib/testXMLSafe.cxx;CTestConfig/CTestConfig.cxx;CTestTest/SmallAndFast/intentional_compile_error.cxx;CTestTest/SmallAndFast/intentional_compile_warning.cxx;CTestTestCrash/crash.cxx;CTestTestCycle/simple.cxx;CTestTestDepends/simple.cxx;CTestTestFailure/badCode.cxx;CTestTestLaunchers/launcher_compiler_test_project/build_error.cxx;CTestTestLaunchers/launcher_linker_test_project/link_error.cxx;CommandLineTest/CommandLineTest.cxx;CompileCommandOutput/compile_command_output.cxx;CompileCommandOutput/file with spaces.cxx;CompileCommandOutput/file_with_underscores.cxx;CompileCommandOutput/relative.cxx;Complex/Executable/A.cxx;Complex/Executable/complex.cxx;Complex/Executable/complex.file.cxx;Complex/Executable/complex_nobuild.cxx;Complex/Executable/notInAllExe.cxx;Complex/Executable/testSystemDir.cxx;Complex/Library/ExtraSources/file1.cxx;Complex/Library/create_file.cxx;Complex/Library/file2.cxx;Complex/Library/notInAllLib.cxx;Complex/Library/sharedFile.cxx;ComplexOneConfig/Executable/A.cxx;ComplexOneConfig/Executable/complex.cxx;ComplexOneConfig/Executable/complex.file.cxx;ComplexOneConfig/Executable/complex_nobuild.cxx;ComplexOneConfig/Executable/notInAllExe.cxx;ComplexOneConfig/Executable/testSystemDir.cxx;ComplexOneConfig/Library/ExtraSources/file1.cxx;ComplexOneConfig/Library/create_file.cxx;ComplexOneConfig/Library/file2.cxx;ComplexOneConfig/Library/notInAllLib.cxx;ComplexOneConfig/Library/sharedFile.cxx;Cuda/NotEnabled/lib.cxx;Cuda/NotEnabled/main.cxx;Cuda/ProperDeviceLibraries/use_pthreads.cxx;Cuda/ProperLinkFlags/main.cxx;CustComDepend/foo.cxx;CustomCommand/empty_command.cxx;CustomCommand/generator.cxx;CustomCommand/main.cxx;CustomCommand/tcat.cxx;CustomCommand/wrapper.cxx;CxxDialect/use_constexpr.cxx;CxxDialect/use_constexpr_and_typeof.cxx;CxxDialect/use_typeof.cxx;CxxOnly/cxxonly.cxx;CxxOnly/libcxx1.cxx;CxxOnly/libcxx2.cxx;CxxOnly/testCxxModule.cxx;CxxSubdirC/main.cxx;EmptyProperty/EmptyProperty.cxx;Environment/main.cxx;ExportImport/Export/renamed/renamed.cxx;ExportImport/Export/testLib6.cxx;ExternalOBJ/Object/external_main.cxx;ExternalOBJ/Object/external_object.cxx;ExternalOBJ/executable.cxx;ExternalProjectLocal/Step5/MathFunctions/MakeTable.cxx;ExternalProjectLocal/Step5/MathFunctions/mysqrt.cxx;ExternalProjectLocal/Step5/tutorial.cxx;FindBoost/Test/main.cxx;FindBoost/TestFail/main.cxx;FindBoost/TestHeaders/main.cxx;FindGTest/Test/main.cxx;FindIconv/Test/main.cxx;FindIntl/Test/main.cxx;FindJsonCpp/Test/main.cxx;FindOpenACC/CXXTest/main.cxx;FindPackageTest/FindPackageTest.cxx;FindProtobuf/Test/main-desc.cxx;FindProtobuf/Test/main-generate.cxx;FindProtobuf/Test/main-protoc.cxx;FindProtobuf/Test/main.cxx;FindTIFF/Test/main.cxx;FindXalanC/Test/main.cxx;FindXercesC/Test/main.cxx;Fortran/mycxx.cxx;Framework/bar.cxx;Framework/foo.cxx;GoogleTest/Test/empty.cxx;GoogleTest/Test/main1.cxx;GoogleTest/Test/main2.cxx;GoogleTest/Test/main3.cxx;GoogleTest/Test/main4.cxx;ISPC/ChainedStaticLibraries/extra.cxx;ISPC/ChainedStaticLibraries/main.cxx;ISPC/CustomHeaderSuffix/extra.cxx;ISPC/CustomHeaderSuffix/main.cxx;ISPC/Defines/main.cxx;ISPC/DynamicLibrary/extra.cxx;ISPC/DynamicLibrary/main.cxx;ISPC/DynamicLibrary/shim.cxx;ISPC/DynamicLibrary/simple.cxx;ISPC/ObjectGenex/main.cxx;ISPC/ObjectLibrary/extra.cxx;ISPC/ObjectLibrary/main.cxx;ISPC/ResponseAndDefine/main.cxx;ISPC/StaticLibrary/main.cxx;ISPC/SystemIncludes/main.cxx;ISPC/TryCompile/main.cxx;IncludeDirectories/SystemIncludeDirectoriesPerLang/smoke_out_includes.cxx;JCTest/TestTime.cxx;Jump/Executable/jumpExecutable.cxx;Jump/Library/Shared/jumpShared.cxx;Jump/Library/Static/jumpStatic.cxx;LinkLanguage/foo.cxx;MSVCRuntimeLibrary/verify.cxx;MakeClean/ToClean/toclean.cxx;MathTest/MathTestExec.cxx;Module/CheckTypeSize/CheckTypeSize.cxx;NewlineArgs/cxxonly.cxx;NewlineArgs/libcxx1.cxx;ObjectLibrary/ExportLanguages/a.cxx;OutOfSource/OutOfSourceSubdir/simple.cxx;OutOfSource/OutOfSourceSubdir/testlib.cxx;OutOfSource/simple.cxx;Plugin/src/DynamicLoader.cxx;Plugin/src/example_exe.cxx;PreOrder/Library/simpleLib.cxx;PreOrder/simple.cxx;Preprocess/preprocess.cxx;Properties/SubDir/properties3.cxx;Properties/subdirtest.cxx;RunCMake/Android/android.cxx;RunCMake/Android/android_lib.cxx;RunCMake/Android/android_sysinc.cxx;RunCMake/AndroidMK/foo.cxx;RunCMake/AutoExportDll/cppCLI.cxx;RunCMake/AutoExportDll/hello.cxx;RunCMake/AutoExportDll/say.cxx;RunCMake/AutoExportDll/sub/sub.cxx;RunCMake/AutoExportDll/world.cxx;RunCMake/BuildDepends/MakeCustomIncludes.cxx;RunCMake/CMP0104/main.cxx;RunCMake/CSharpReferenceImport/ImportLibMixed.cxx;RunCMake/CSharpReferenceImport/ImportLibMixedNative.cxx;RunCMake/CSharpReferenceImport/ImportLibNative.cxx;RunCMake/CSharpReferenceImport/ImportLibPure.cxx;RunCMake/CSharpReferenceImport/ImportLibSafe.cxx;RunCMake/CSharpReferenceImport/ReferenceImportMixed.cxx;RunCMake/CSharpReferenceImport/ReferenceImportNative.cxx;RunCMake/CSharpReferenceImport/ReferenceImportPure.cxx;RunCMake/CSharpReferenceImport/ReferenceImportSafe.cxx;RunCMake/CTestResourceAllocation/ctresalloc.cxx;RunCMake/ClangTidy/main.cxx;RunCMake/CompilerArgs/main.cxx;RunCMake/CompilerLauncher/main.cxx;RunCMake/Cppcheck/main.cxx;RunCMake/Cpplint/main.cxx;RunCMake/CrosscompilingEmulator/generated_exe_emulator_unexpected.cxx;RunCMake/CrosscompilingEmulator/simple_src_exiterror.cxx;RunCMake/FileAPI/empty.cxx;RunCMake/IncludeWhatYouUse/main.cxx;RunCMake/LinkWhatYouUse/main.cxx;RunCMake/MetaCompileFeatures/a.cxx;RunCMake/MultiLint/main.cxx;RunCMake/NinjaMultiConfig/qt5.cxx;RunCMake/PrecompileHeaders/use_pch.cxx;RunCMake/UnityBuild/f.cxx;RunCMake/VS10Project/empty.cxx;RunCMake/add_link_options/LinkOptionsLib.cxx;RunCMake/target_link_libraries-LINK_LANGUAGE/func.cxx;RunCMake/target_link_libraries-LINK_LANGUAGE/main.cxx;RunCMake/target_link_libraries-LINK_LANG_AND_ID/func.cxx;RunCMake/target_link_libraries-LINK_LANG_AND_ID/main.cxx;RunCMake/try_compile/CxxStandardGNU.cxx;RunCMake/try_compile/src.cxx;SBCS/SBCS.cxx;SetLang/stay_cxx.cxx;Simple/simple.cxx;Simple/simpleLib.cxx;StringFileTest/StringFile.cxx;SubDir/Examples/example1/example1.cxx;SubDir/Examples/example2/example2.cxx;SubDir/Executable/test.cxx;SubDirSpaces/Executable Sources/test.cxx;SubDirSpaces/Executable/test.cxx;SubDirSpaces/Some Examples/example1/example1.cxx;SubDirSpaces/Some Examples/example2/example2.cxx;SubProject/bar.cxx;SubProject/car.cxx;SubProject/foo/foo.cxx;SystemInformation/DumpInformation.cxx;TestDriver/subdir/test3.cxx;TestDriver/test1.cxx;TestDriver/test2.cxx;TestDriver/testExtraStuff.cxx;TestDriver/testExtraStuff2.cxx;TestDriver/testExtraStuff3.cxx;Testing/Sub/Sub2/testing2.cxx;Testing/testing.cxx;TryCompile/pass2b.cxx;UseSWIG/MultipleFiles/add.cxx;UseSWIG/MultipleFiles/sub.cxx;UseSWIG/example.cxx;Wrapping/fakefluid.cxx;Wrapping/itkWrapperConfig.cxx;Wrapping/qtnoqtmain.cxx;Wrapping/qtwrappingmain.cxx;Wrapping/vtkExcluded.cxx;Wrapping/vtkIncluded.cxx;Wrapping/wrapFLTK.cxx;Wrapping/wrapping.cxx;X11/HelloWorldX11.cxx].
Cheack if FOREACH with RANGE works
FOREACH with RANGE 5 produces 0;1;2;3;4;5
FOREACH with RANGE 3;5 produces 3;4;5
FOREACH with RANGE 5;3 produces 5;4;3
FOREACH with RANGE 3;10;2 produces 3;5;7;9
FOREACH with RANGE 10;0;-3 produces 10;7;4;1
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/StringFileTest
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/StringFileTest

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building CXX object CMakeFiles/StringFileTest.dir/src/StringFile.cxx.o
[100%] Linking CXX executable StringFileTest
[100%] Built target StringFileTest

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/StringFileTest/StringFileTest"

<end of output>
Test time =   0.68 sec
----------------------------------------------------------
Test Passed.
"StringFileTest" end time: Mar 31 13:41 EDT
"StringFileTest" time elapsed: 00:00:00
----------------------------------------------------------

29/609 Testing: TryCompile
29/609 Test: TryCompile
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/TryCompile" "/home/zachary/oss/labs/lab-08/build/Tests/TryCompile" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "TryCompile" "--build-options" "--test-command" "TryCompile"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"TryCompile" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/TryCompile
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
All Tests passed, ignore all previous output.
Compiler supports ansi for
Compiler supports ansi for
use the module now
Compiler supports ansi for
Testing try_compile project mode
CMake Deprecation Warning at /home/zachary/cmake/Tests/TryCompile/Inner/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


COMPILE_DEFINITIONS list expanded correctly
try_compile with bad#source.c correctly failed
Performing Test C_BUILD_SHOULD_FAIL
Performing Test C_BUILD_SHOULD_FAIL - Failed
Performing Test C_BUILD_SHOULD_WORK
Performing Test C_BUILD_SHOULD_WORK - Success
Performing Test C_RUN_SHOULD_FAIL
Performing Test C_RUN_SHOULD_FAIL - Failed
Performing Test C_RUN_SHOULD_WORK
Performing Test C_RUN_SHOULD_WORK - Success
Performing Test CXX_BUILD_SHOULD_FAIL
Performing Test CXX_BUILD_SHOULD_FAIL - Failed
Performing Test CXX_BUILD_SHOULD_WORK
Performing Test CXX_BUILD_SHOULD_WORK - Success
Performing Test CXX_BUILD_SHOULD_WORK_COMPLEX
Performing Test CXX_BUILD_SHOULD_WORK_COMPLEX - Success
Performing Test CXX_RUN_SHOULD_FAIL
Performing Test CXX_RUN_SHOULD_FAIL - Failed
Performing Test CXX_RUN_SHOULD_WORK
Performing Test CXX_RUN_SHOULD_WORK - Success
Performing Test C_BOGUS_FLAG
Performing Test C_BOGUS_FLAG - Failed
Performing Test CXX_BOGUS_FLAG
Performing Test CXX_BOGUS_FLAG - Failed
Performing Test C_STRICT_PROTOTYPES
Performing Test C_STRICT_PROTOTYPES - Success
Checking prototype remove for TEST_REMOVE_PROTO
Checking prototype remove for TEST_REMOVE_PROTO - True
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/TryCompile
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


All Tests passed, ignore all previous output.
Compiler supports ansi for
Compiler supports ansi for
use the module now
Compiler supports ansi for
Testing try_compile project mode
CMake Deprecation Warning at /home/zachary/cmake/Tests/TryCompile/Inner/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


COMPILE_DEFINITIONS list expanded correctly
try_compile with bad#source.c correctly failed
Performing Test C_BOGUS_FLAG
Performing Test C_BOGUS_FLAG - Failed
Performing Test CXX_BOGUS_FLAG
Performing Test CXX_BOGUS_FLAG - Failed
Performing Test C_STRICT_PROTOTYPES
Performing Test C_STRICT_PROTOTYPES - Success
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/TryCompile
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/TryCompile

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building C object CMakeFiles/TryCompile.dir/pass.c.o
[100%] Linking C executable TryCompile
[100%] Built target TryCompile

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/TryCompile/TryCompile"

<end of output>
Test time =   3.21 sec
----------------------------------------------------------
Test Passed.
"TryCompile" end time: Mar 31 13:41 EDT
"TryCompile" time elapsed: 00:00:03
----------------------------------------------------------

30/609 Testing: SystemInformation
30/609 Test: SystemInformation
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/SystemInformation" "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "SystemInformation" "--build-options" "--test-command" "SystemInformation"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"SystemInformation" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation
======== CMake output     ======
The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
To prevent CTest from stripping output, you have to display: CTEST_FULL_OUTPUT
Test macro
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation
To prevent CTest from stripping output, you have to display: CTEST_FULL_OUTPUT
Test macro
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building CXX object CMakeFiles/SystemInformation.dir/DumpInformation.cxx.o
[100%] Linking CXX executable SystemInformation
[100%] Built target SystemInformation

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/SystemInformation"
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/SystemInformation.out":
----------------------------------------------------------------
CMAKE_STATIC_LIBRARY_PREFIX == "lib"
CMAKE_STATIC_LIBRARY_SUFFIX == ".a"
CMAKE_SHARED_LIBRARY_PREFIX == "lib"
CMAKE_SHARED_LIBRARY_SUFFIX == ".so"
CMAKE_SHARED_MODULE_PREFIX == "lib"
CMAKE_SHARED_MODULE_SUFFIX == ".so"


CMAKE_DL_LIBS == "dl"
CMAKE_LIBRARY_PATH_FLAG == "-L"
CMAKE_LINK_LIBRARY_FLAG == "-l"
CMAKE_SKIP_RPATH == "NO"
CMAKE_SYSTEM_INFO_FILE == "Platform/Linux"
CMAKE_SYSTEM_NAME == "Linux"
CMAKE_SYSTEM == "Linux-5.8.0-45-generic"
CMAKE_CXX_COMPILER == "/usr/bin/c++"
CMAKE_C_COMPILER == "/usr/bin/cc"
CMAKE_COMPILER_IS_GNUCC == "1"
CMAKE_COMPILER_IS_GNUCXX == "1"
CMAKE_C_COMPILER_ID == "GNU"
CMAKE_C_COMPILER_VERSION == "9.3.0"
CMAKE_C90_STANDARD_COMPILE_OPTION == "-std=c90"
CMAKE_C99_STANDARD_COMPILE_OPTION == "-std=c99"
CMAKE_C11_STANDARD_COMPILE_OPTION == "-std=c11"
CMAKE_C90_EXTENSION_COMPILE_OPTION == "-std=gnu90"
CMAKE_C99_EXTENSION_COMPILE_OPTION == "-std=gnu99"
CMAKE_C11_EXTENSION_COMPILE_OPTION == "-std=gnu11"
CMAKE_C_COMPILE_FEATURES == "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23"
CMAKE_C90_COMPILE_FEATURES == "c_std_90;c_function_prototypes"
CMAKE_C99_COMPILE_FEATURES == "c_std_99;c_restrict;c_variadic_macros"
CMAKE_C11_COMPILE_FEATURES == "c_std_11;c_static_assert"
CMAKE_CXX_COMPILER_ID == "GNU"
CMAKE_CXX_COMPILER_VERSION == "9.3.0"
CMAKE_CXX98_STANDARD_COMPILE_OPTION == "-std=c++98"
CMAKE_CXX11_STANDARD_COMPILE_OPTION == "-std=c++11"
CMAKE_CXX98_EXTENSION_COMPILE_OPTION == "-std=gnu++98"
CMAKE_CXX11_EXTENSION_COMPILE_OPTION == "-std=gnu++11"
CMAKE_CXX_COMPILE_FEATURES == "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20"
CMAKE_CXX98_COMPILE_FEATURES == "cxx_std_98;cxx_template_template_parameters"
CMAKE_CXX11_COMPILE_FEATURES == "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates"
CMAKE_CXX14_COMPILE_FEATURES == "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates"

// C shared library flag
CMAKE_SHARED_LIBRARY_C_FLAGS == "-fPIC"
CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS == "-shared"
CMAKE_SHARED_LIBRARY_LINK_FLAGS == ""
CMAKE_SHARED_LIBRARY_RUNTIME_FLAG == ""
CMAKE_SHARED_LIBRARY_RUNTIME_FLAG_SEP == ""
CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS == "-Wl,-Bdynamic"
CMAKE_C_COMPILE_OPTIONS_PIC == "-fPIC"
CMAKE_C_COMPILE_OPTIONS_PIE == "-fPIE"
CMAKE_C_COMPILE_OPTIONS_DLL == ""

// C shared module flags
CMAKE_SHARED_MODULE_C_FLAGS  == "-fPIC"
CMAKE_SHARED_MODULE_CREATE_C_FLAGS == "-shared"
CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS == "-Wl,-Bdynamic"

// C exe flags
CMAKE_EXE_LINK_STATIC_C_FLAGS == "-Wl,-Bstatic"
CMAKE_EXE_LINK_DYNAMIC_C_FLAGS == "-Wl,-Bdynamic"

// CXX shared library flags
CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS == "-shared"
CMAKE_SHARED_LIBRARY_CXX_FLAGS == "-fPIC"
CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS == "-rdynamic"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG == "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP == ":"
CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS == "-Wl,-Bdynamic"
CMAKE_CXX_COMPILE_OPTIONS_PIC == "-fPIC"
CMAKE_CXX_COMPILE_OPTIONS_PIE == "-fPIE"
CMAKE_CXX_COMPILE_OPTIONS_DLL == ""

// CXX shared module flags
CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS == "-shared"
CMAKE_SHARED_MODULE_CXX_FLAGS == "-fPIC"
CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS == "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS == "-Wl,-Bdynamic"

// CXX exe flags
CMAKE_EXE_LINK_STATIC_CXX_FLAGS == "-Wl,-Bstatic"
CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS == "-Wl,-Bdynamic"

CMAKE_USER_MAKE_RULES_OVERRIDE == ""
CMAKE_VERBOSE_MAKEFILE == "FALSE"
CMAKE_BUILD_TYPE == ""
CMAKE_CXX_FLAGS == ""
CMAKE_CXX_FLAGS_DEBUG == "-g"
CMAKE_CXX_FLAGS_MINSIZEREL == "-Os -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE == "-O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO == "-O2 -g -DNDEBUG"

CMAKE_C_FLAGS == ""
CMAKE_C_FLAGS_DEBUG == "-g"
CMAKE_C_FLAGS_MINSIZEREL == "-Os -DNDEBUG"
CMAKE_C_FLAGS_RELEASE == "-O3 -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO == "-O2 -g -DNDEBUG"

// build rules
CMAKE_CXX_CREATE_SHARED_LIBRARY == "&lt;CMAKE_CXX_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_CXX_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_CXX_CREATE_SHARED_MODULE == "&lt;CMAKE_CXX_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_CXX_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_C_CREATE_SHARED_LIBRARY == "&lt;CMAKE_C_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_C_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_C_CREATE_SHARED_MODULE == "&lt;CMAKE_C_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_C_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_CXX_CREATE_STATIC_LIBRARY == ""
CMAKE_C_CREATE_STATIC_LIBRARY == ""
CMAKE_CXX_COMPILE_OBJECT == "&lt;CMAKE_CXX_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -o &lt;OBJECT&gt; -c &lt;SOURCE&gt;"
CMAKE_C_COMPILE_OBJECT == "&lt;CMAKE_C_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -o &lt;OBJECT&gt; -c &lt;SOURCE&gt;"
CMAKE_C_LINK_EXECUTABLE == "&lt;CMAKE_C_COMPILER&gt; &lt;FLAGS&gt; &lt;CMAKE_C_LINK_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt; -o &lt;TARGET&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_CXX_LINK_EXECUTABLE == "&lt;CMAKE_CXX_COMPILER&gt; &lt;FLAGS&gt; &lt;CMAKE_CXX_LINK_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt; -o &lt;TARGET&gt; &lt;LINK_LIBRARIES&gt;"

// implicit link info
CMAKE_C_IMPLICIT_LINK_LIBRARIES == "gcc;gcc_s;c;gcc;gcc_s"
CMAKE_C_IMPLICIT_LINK_DIRECTORIES == "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib"
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES == ""
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES == "stdc++;m;gcc_s;gcc;c;gcc_s;gcc"
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES == "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib"
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES == ""

XCODE_VERSION == ""
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/AllVariables.txt":
----------------------------------------------------------------
CMAKE_ADDR2LINE "/usr/bin/addr2line"
CMAKE_AR "/usr/bin/ar"
CMAKE_AR "/usr/bin/ar"
CMAKE_AUTOGEN_ORIGIN_DEPENDS "ON"
CMAKE_AUTOMOC_COMPILER_PREDEFINES "ON"
CMAKE_AUTOMOC_MACRO_NAMES "Q_OBJECT;Q_GADGET;Q_NAMESPACE;Q_NAMESPACE_EXPORT"
CMAKE_AUTOMOC_PATH_PREFIX "OFF"
CMAKE_BASE_NAME "g++"
CMAKE_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation"
CMAKE_BUILD_TOOL "/usr/bin/make"
CMAKE_BUILD_TYPE ""
CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert"
CMAKE_C11_EXTENSION_COMPILE_OPTION "-std=gnu11"
CMAKE_C11_STANDARD_COMPILE_OPTION "-std=c11"
CMAKE_C11_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_C17_COMPILE_FEATURES "c_std_17"
CMAKE_C17_EXTENSION_COMPILE_OPTION "-std=gnu17"
CMAKE_C17_STANDARD_COMPILE_OPTION "-std=c17"
CMAKE_C23_COMPILE_FEATURES "c_std_23"
CMAKE_C23_EXTENSION_COMPILE_OPTION "-std=gnu23"
CMAKE_C23_STANDARD_COMPILE_OPTION "-std=c23"
CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes"
CMAKE_C90_EXTENSION_COMPILE_OPTION "-std=gnu90"
CMAKE_C90_STANDARD_COMPILE_OPTION "-std=c90"
CMAKE_C90_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros"
CMAKE_C99_EXTENSION_COMPILE_OPTION "-std=gnu99"
CMAKE_C99_STANDARD_COMPILE_OPTION "-std=c99"
CMAKE_C99_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CACHEFILE_DIR "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation"
CMAKE_CACHE_MAJOR_VERSION "3"
CMAKE_CACHE_MINOR_VERSION "20"
CMAKE_CACHE_PATCH_VERSION "20210331"
CMAKE_CFG_INTDIR "."
CMAKE_COLOR_MAKEFILE "ON"
CMAKE_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/cmake"
CMAKE_COMPILER_IS_GNUCC "1"
CMAKE_COMPILER_IS_GNUCXX "1"
CMAKE_CPACK_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/cpack"
CMAKE_CROSSCOMPILING "FALSE"
CMAKE_CTEST_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/ctest"
CMAKE_CURRENT_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation"
CMAKE_CURRENT_LIST_DIR "/home/zachary/cmake/Tests/SystemInformation"
CMAKE_CURRENT_LIST_FILE "/home/zachary/cmake/Tests/SystemInformation/CMakeLists.txt"
CMAKE_CURRENT_SOURCE_DIR "/home/zachary/cmake/Tests/SystemInformation"
CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates"
CMAKE_CXX11_EXTENSION_COMPILE_OPTION "-std=gnu++11"
CMAKE_CXX11_STANDARD_COMPILE_OPTION "-std=c++11"
CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates"
CMAKE_CXX14_EXTENSION_COMPILE_OPTION "-std=gnu++14"
CMAKE_CXX14_STANDARD_COMPILE_OPTION "-std=c++14"
CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17"
CMAKE_CXX17_EXTENSION_COMPILE_OPTION "-std=gnu++17"
CMAKE_CXX17_STANDARD_COMPILE_OPTION "-std=c++17"
CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20"
CMAKE_CXX20_EXTENSION_COMPILE_OPTION "-std=gnu++2a"
CMAKE_CXX20_STANDARD_COMPILE_OPTION "-std=c++2a"
CMAKE_CXX23_COMPILE_FEATURES ""
CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters"
CMAKE_CXX98_EXTENSION_COMPILE_OPTION "-std=gnu++98"
CMAKE_CXX98_STANDARD_COMPILE_OPTION "-std=c++98"
CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT "ON"
CMAKE_CXX_ABI_COMPILED "TRUE"
CMAKE_CXX_ARCHIVE_APPEND "&lt;CMAKE_AR&gt; q &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_CXX_ARCHIVE_APPEND_IPO ""/usr/bin/gcc-ar-9" r &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_CXX_ARCHIVE_CREATE "&lt;CMAKE_AR&gt; qc &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_CXX_ARCHIVE_CREATE_IPO ""/usr/bin/gcc-ar-9" cr &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_CXX_ARCHIVE_FINISH "&lt;CMAKE_RANLIB&gt; &lt;TARGET&gt;"
CMAKE_CXX_ARCHIVE_FINISH_IPO ""/usr/bin/gcc-ranlib-9" &lt;TARGET&gt;"
CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN"
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX ""
CMAKE_CXX_COMPILER "/usr/bin/c++"
CMAKE_CXX_COMPILER "/usr/bin/c++"
CMAKE_CXX_COMPILER_ABI "ELF"
CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_CXX_COMPILER_ARG1 ""
CMAKE_CXX_COMPILER_ENV_VAR "CXX"
CMAKE_CXX_COMPILER_FRONTEND_VARIANT ""
CMAKE_CXX_COMPILER_ID "GNU"
CMAKE_CXX_COMPILER_ID_RUN "1"
CMAKE_CXX_COMPILER_LOADED "1"
CMAKE_CXX_COMPILER_PREDEFINES_COMMAND "/usr/bin/c++;-dM;-E;-c;/home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp"
CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_CXX_COMPILER_VERSION "9.3.0"
CMAKE_CXX_COMPILER_VERSION_INTERNAL ""
CMAKE_CXX_COMPILER_WORKS "TRUE"
CMAKE_CXX_COMPILER_WRAPPER ""
CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20"
CMAKE_CXX_COMPILE_OBJECT "&lt;CMAKE_CXX_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -o &lt;OBJECT&gt; -c &lt;SOURCE&gt;"
CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH "-x;c++-header;-include;&lt;PCH_HEADER&gt;"
CMAKE_CXX_COMPILE_OPTIONS_EXPLICIT_LANGUAGE "-x;c++"
CMAKE_CXX_COMPILE_OPTIONS_INVALID_PCH "-Winvalid-pch"
CMAKE_CXX_COMPILE_OPTIONS_IPO "-flto;-fno-fat-lto-objects"
CMAKE_CXX_COMPILE_OPTIONS_PIC "-fPIC"
CMAKE_CXX_COMPILE_OPTIONS_PIE "-fPIE"
CMAKE_CXX_COMPILE_OPTIONS_SYSROOT "--sysroot="
CMAKE_CXX_COMPILE_OPTIONS_USE_PCH "-include;&lt;PCH_HEADER&gt;"
CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY "-fvisibility="
CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN "-fvisibility-inlines-hidden"
CMAKE_CXX_CREATE_ASSEMBLY_SOURCE "&lt;CMAKE_CXX_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -S &lt;SOURCE&gt; -o &lt;ASSEMBLY_SOURCE&gt;"
CMAKE_CXX_CREATE_PREPROCESSED_SOURCE "&lt;CMAKE_CXX_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -E &lt;SOURCE&gt; &gt; &lt;PREPROCESSED_SOURCE&gt;"
CMAKE_CXX_CREATE_SHARED_LIBRARY "&lt;CMAKE_CXX_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_CXX_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_CXX_CREATE_SHARED_MODULE "&lt;CMAKE_CXX_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_CXX_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_CXX_DEPENDS_USE_COMPILER "TRUE"
CMAKE_CXX_DEPFILE_FORMAT "gcc"
CMAKE_CXX_FLAGS ""
CMAKE_CXX_FLAGS_DEBUG "-g"
CMAKE_CXX_FLAGS_DEBUG_INIT " -g"
CMAKE_CXX_FLAGS_INIT "  "
CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG"
CMAKE_CXX_FLAGS_MINSIZEREL_INIT " -Os -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELEASE_INIT " -O3 -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG"
CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT " -O2 -g -DNDEBUG"
CMAKE_CXX_IGNORE_EXTENSIONS "inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC"
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include"
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib"
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES ""
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc"
CMAKE_CXX_INFORMATION_LOADED "1"
CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu"
CMAKE_CXX_LINKER_PREFERENCE "30"
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES "1"
CMAKE_CXX_LINKER_WRAPPER_FLAG "-Wl,"
CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP ","
CMAKE_CXX_LINK_EXECUTABLE "&lt;CMAKE_CXX_COMPILER&gt; &lt;FLAGS&gt; &lt;CMAKE_CXX_LINK_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt; -o &lt;TARGET&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_CXX_LINK_OPTIONS_NO_PIE "-no-pie"
CMAKE_CXX_LINK_OPTIONS_PIE "-fPIE;-pie"
CMAKE_CXX_OUTPUT_EXTENSION ".o"
CMAKE_CXX_PLATFORM_ID "Linux"
CMAKE_CXX_SIMULATE_ID ""
CMAKE_CXX_SIMULATE_VERSION ""
CMAKE_CXX_SIZEOF_DATA_PTR "8"
CMAKE_CXX_SOURCE_FILE_EXTENSIONS "C;M;c++;cc;cpp;cxx;mm;mpp;CPP;ixx;cppm"
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14"
CMAKE_CXX_STANDARD_DEFAULT "14"
CMAKE_CXX_VERBOSE_FLAG "-v"
CMAKE_C_ABI_COMPILED "TRUE"
CMAKE_C_ARCHIVE_APPEND "&lt;CMAKE_AR&gt; q &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_C_ARCHIVE_APPEND_IPO ""/usr/bin/gcc-ar-9" r &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_C_ARCHIVE_CREATE "&lt;CMAKE_AR&gt; qc &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_C_ARCHIVE_CREATE_IPO ""/usr/bin/gcc-ar-9" cr &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"
CMAKE_C_ARCHIVE_FINISH "&lt;CMAKE_RANLIB&gt; &lt;TARGET&gt;"
CMAKE_C_ARCHIVE_FINISH_IPO ""/usr/bin/gcc-ranlib-9" &lt;TARGET&gt;"
CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN"
CMAKE_C_CL_SHOWINCLUDES_PREFIX ""
CMAKE_C_COMPILER "/usr/bin/cc"
CMAKE_C_COMPILER "/usr/bin/cc"
CMAKE_C_COMPILER_ABI "ELF"
CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar-9"
CMAKE_C_COMPILER_ARG1 ""
CMAKE_C_COMPILER_ENV_VAR "CC"
CMAKE_C_COMPILER_FRONTEND_VARIANT ""
CMAKE_C_COMPILER_ID "GNU"
CMAKE_C_COMPILER_ID_RUN "1"
CMAKE_C_COMPILER_LOADED "1"
CMAKE_C_COMPILER_PREDEFINES_COMMAND "/usr/bin/cc;-dM;-E;-c;/home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp"
CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9"
CMAKE_C_COMPILER_VERSION "9.3.0"
CMAKE_C_COMPILER_VERSION_INTERNAL ""
CMAKE_C_COMPILER_WORKS "TRUE"
CMAKE_C_COMPILER_WRAPPER ""
CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23"
CMAKE_C_COMPILE_OBJECT "&lt;CMAKE_C_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -o &lt;OBJECT&gt; -c &lt;SOURCE&gt;"
CMAKE_C_COMPILE_OPTIONS_CREATE_PCH "-x;c-header;-include;&lt;PCH_HEADER&gt;"
CMAKE_C_COMPILE_OPTIONS_EXPLICIT_LANGUAGE "-x;c"
CMAKE_C_COMPILE_OPTIONS_INVALID_PCH "-Winvalid-pch"
CMAKE_C_COMPILE_OPTIONS_IPO "-flto;-fno-fat-lto-objects"
CMAKE_C_COMPILE_OPTIONS_PIC "-fPIC"
CMAKE_C_COMPILE_OPTIONS_PIE "-fPIE"
CMAKE_C_COMPILE_OPTIONS_SYSROOT "--sysroot="
CMAKE_C_COMPILE_OPTIONS_USE_PCH "-include;&lt;PCH_HEADER&gt;"
CMAKE_C_COMPILE_OPTIONS_VISIBILITY "-fvisibility="
CMAKE_C_CREATE_ASSEMBLY_SOURCE "&lt;CMAKE_C_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -S &lt;SOURCE&gt; -o &lt;ASSEMBLY_SOURCE&gt;"
CMAKE_C_CREATE_PREPROCESSED_SOURCE "&lt;CMAKE_C_COMPILER&gt; &lt;DEFINES&gt; &lt;INCLUDES&gt; &lt;FLAGS&gt; -E &lt;SOURCE&gt; &gt; &lt;PREPROCESSED_SOURCE&gt;"
CMAKE_C_CREATE_SHARED_LIBRARY "&lt;CMAKE_C_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_C_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_C_CREATE_SHARED_MODULE "&lt;CMAKE_C_COMPILER&gt; &lt;CMAKE_SHARED_LIBRARY_C_FLAGS&gt; &lt;LANGUAGE_COMPILE_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS&gt; &lt;SONAME_FLAG&gt;&lt;TARGET_SONAME&gt; -o &lt;TARGET&gt; &lt;OBJECTS&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_C_DEPENDS_USE_COMPILER "TRUE"
CMAKE_C_DEPFILE_FORMAT "gcc"
CMAKE_C_FLAGS ""
CMAKE_C_FLAGS_DEBUG "-g"
CMAKE_C_FLAGS_DEBUG_INIT " -g"
CMAKE_C_FLAGS_INIT "  "
CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG"
CMAKE_C_FLAGS_MINSIZEREL_INIT " -Os -DNDEBUG"
CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG"
CMAKE_C_FLAGS_RELEASE_INIT " -O3 -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG"
CMAKE_C_FLAGS_RELWITHDEBINFO_INIT " -O2 -g -DNDEBUG"
CMAKE_C_IGNORE_EXTENSIONS "h;H;o;O;obj;OBJ;def;DEF;rc;RC"
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include"
CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib"
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES ""
CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s"
CMAKE_C_INFORMATION_LOADED "1"
CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu"
CMAKE_C_LINKER_PREFERENCE "10"
CMAKE_C_LINKER_WRAPPER_FLAG "-Wl,"
CMAKE_C_LINKER_WRAPPER_FLAG_SEP ","
CMAKE_C_LINK_EXECUTABLE "&lt;CMAKE_C_COMPILER&gt; &lt;FLAGS&gt; &lt;CMAKE_C_LINK_FLAGS&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt; -o &lt;TARGET&gt; &lt;LINK_LIBRARIES&gt;"
CMAKE_C_LINK_OPTIONS_NO_PIE "-no-pie"
CMAKE_C_LINK_OPTIONS_PIE "-fPIE;-pie"
CMAKE_C_OUTPUT_EXTENSION ".o"
CMAKE_C_PLATFORM_ID "Linux"
CMAKE_C_SIMULATE_ID ""
CMAKE_C_SIMULATE_VERSION ""
CMAKE_C_SIZEOF_DATA_PTR "8"
CMAKE_C_SOURCE_FILE_EXTENSIONS "c;m"
CMAKE_C_STANDARD_COMPUTED_DEFAULT "17"
CMAKE_C_STANDARD_DEFAULT "17"
CMAKE_C_VERBOSE_FLAG "-v"
CMAKE_DEPFILE_FLAGS_C "-MD -MT &lt;DEP_TARGET&gt; -MF &lt;DEP_FILE&gt;"
CMAKE_DEPFILE_FLAGS_CXX "-MD -MT &lt;DEP_TARGET&gt; -MF &lt;DEP_FILE&gt;"
CMAKE_DLLTOOL "CMAKE_DLLTOOL-NOTFOUND"
CMAKE_DL_LIBS "dl"
CMAKE_EDIT_COMMAND "/home/zachary/oss/labs/lab-08/build/bin/ccmake"
CMAKE_EFFECTIVE_SYSTEM_NAME "Linux"
CMAKE_EXECUTABLE_FORMAT "ELF"
CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,"
CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG "-Wl,-rpath-link,"
CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG "-Wl,-rpath,"
CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ":"
CMAKE_EXECUTABLE_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ":"
CMAKE_EXECUTABLE_SUFFIX ""
CMAKE_EXE_EXPORTS_CXX_FLAG "-Wl,--export-dynamic"
CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic"
CMAKE_EXE_LINKER_FLAGS ""
CMAKE_EXE_LINKER_FLAGS_DEBUG ""
CMAKE_EXE_LINKER_FLAGS_INIT "  "
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ""
CMAKE_EXE_LINKER_FLAGS_RELEASE ""
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_EXE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_EXE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_EXE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_EXPORT_COMPILE_COMMANDS ""
CMAKE_EXTRA_GENERATOR ""
CMAKE_FILES_DIRECTORY "/CMakeFiles"
CMAKE_FIND_LIBRARY_PREFIXES "lib"
CMAKE_FIND_LIBRARY_SUFFIXES ".so;.a"
CMAKE_GENERATOR "Unix Makefiles"
CMAKE_GENERATOR_INSTANCE ""
CMAKE_GENERATOR_PLATFORM ""
CMAKE_GENERATOR_TOOLSET ""
CMAKE_HOME_DIRECTORY "/home/zachary/cmake/Tests/SystemInformation"
CMAKE_HOST_SYSTEM "Linux-5.8.0-45-generic"
CMAKE_HOST_SYSTEM_NAME "Linux"
CMAKE_HOST_SYSTEM_PROCESSOR "x86_64"
CMAKE_HOST_SYSTEM_VERSION "5.8.0-45-generic"
CMAKE_HOST_UNIX "1"
CMAKE_INCLUDE_FLAG_C "-I"
CMAKE_INCLUDE_FLAG_CXX "-I"
CMAKE_INCLUDE_SYSTEM_FLAG_C "-isystem "
CMAKE_INCLUDE_SYSTEM_FLAG_CXX "-isystem "
CMAKE_INSTALL_DEFAULT_COMPONENT_NAME "Unspecified"
CMAKE_INSTALL_PREFIX "/usr/local"
CMAKE_INSTALL_SO_NO_EXE "1"
CMAKE_INTERNAL_PLATFORM_ABI "ELF"
CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu"
CMAKE_LIBRARY_ARCHITECTURE_REGEX "[a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]*"
CMAKE_LIBRARY_ARCHITECTURE_REGEX_VERSIONED "gcc/[a-z0-9_]+(-[a-z0-9_]+)?-linux(-gnu)?/[0-9]+(\.[0-9]+\.[0-9]+)*"
CMAKE_LIBRARY_PATH_FLAG "-L"
CMAKE_LIBRARY_PATH_TERMINATOR ""
CMAKE_LINKER "/usr/bin/ld"
CMAKE_LINKER "/usr/bin/ld"
CMAKE_LINK_LIBRARY_FLAG "-l"
CMAKE_LINK_LIBRARY_SUFFIX ""
CMAKE_MAJOR_VERSION "3"
CMAKE_MAKE_PROGRAM "/usr/bin/make"
CMAKE_MATCH_0 "6.0 14"
CMAKE_MATCH_COUNT "0"
CMAKE_MINIMUM_REQUIRED_VERSION "3.0"
CMAKE_MINOR_VERSION "20"
CMAKE_MODULE_LINKER_FLAGS ""
CMAKE_MODULE_LINKER_FLAGS_DEBUG ""
CMAKE_MODULE_LINKER_FLAGS_INIT "  "
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ""
CMAKE_MODULE_LINKER_FLAGS_RELEASE ""
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_MT ""
CMAKE_NM "/usr/bin/nm"
CMAKE_NUMBER_OF_MAKEFILES "1"
CMAKE_OBJCOPY "/usr/bin/objcopy"
CMAKE_OBJDUMP "/usr/bin/objdump"
CMAKE_PARENT_LIST_FILE "/home/zachary/cmake/Tests/SystemInformation/CMakeLists.txt"
CMAKE_PATCH_VERSION "20210331"
CMAKE_PCH_EXTENSION ".gch"
CMAKE_PCH_PROLOGUE "#pragma GCC system_header"
CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "/lib;/lib32;/lib64;/usr/lib;/usr/lib32;/usr/lib64"
CMAKE_PLATFORM_INFO_DIR "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/3.20.20210331-gbd4ebf1"
CMAKE_PLATFORM_INFO_INITIALIZED "1"
CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME "1"
CMAKE_PROJECT_DESCRIPTION ""
CMAKE_PROJECT_HOMEPAGE_URL ""
CMAKE_PROJECT_NAME "SystemInformation"
CMAKE_RANLIB "/usr/bin/ranlib"
CMAKE_RANLIB "/usr/bin/ranlib"
CMAKE_READELF "/usr/bin/readelf"
CMAKE_ROOT "/home/zachary/cmake"
CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "-shared"
CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-shared"
CMAKE_SHARED_LIBRARY_CXX_FLAGS "-fPIC"
CMAKE_SHARED_LIBRARY_C_FLAGS "-fPIC"
CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "-rdynamic"
CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-rdynamic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_LIBRARY_PREFIX "lib"
CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,"
CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,"
CMAKE_SHARED_LIBRARY_RPATH_ORIGIN_TOKEN "$ORIGIN"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ":"
CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,"
CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP ":"
CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname,"
CMAKE_SHARED_LIBRARY_SUFFIX ".so"
CMAKE_SHARED_LINKER_FLAGS ""
CMAKE_SHARED_LINKER_FLAGS_DEBUG ""
CMAKE_SHARED_LINKER_FLAGS_INIT "  "
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ""
CMAKE_SHARED_LINKER_FLAGS_RELEASE ""
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS "-shared"
CMAKE_SHARED_MODULE_CREATE_C_FLAGS "-shared"
CMAKE_SHARED_MODULE_CXX_FLAGS "-fPIC"
CMAKE_SHARED_MODULE_C_FLAGS "-fPIC"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic"
CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic"
CMAKE_SHARED_MODULE_PREFIX "lib"
CMAKE_SHARED_MODULE_SUFFIX ".so"
CMAKE_SIZEOF_VOID_P "8"
CMAKE_SKIP_INSTALL_RPATH "NO"
CMAKE_SKIP_RPATH "NO"
CMAKE_SOURCE_DIR "/home/zachary/cmake/Tests/SystemInformation"
CMAKE_STATIC_LIBRARY_PREFIX "lib"
CMAKE_STATIC_LIBRARY_SUFFIX ".a"
CMAKE_STATIC_LINKER_FLAGS ""
CMAKE_STATIC_LINKER_FLAGS_DEBUG ""
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL ""
CMAKE_STATIC_LINKER_FLAGS_RELEASE ""
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO ""
CMAKE_STRIP "/usr/bin/strip"
CMAKE_SYSTEM "Linux-5.8.0-45-generic"
CMAKE_SYSTEM_INCLUDE_PATH "/usr/include/X11"
CMAKE_SYSTEM_INFO_FILE "Platform/Linux"
CMAKE_SYSTEM_LIBRARY_PATH "/usr/lib/X11"
CMAKE_SYSTEM_LOADED "1"
CMAKE_SYSTEM_NAME "Linux"
CMAKE_SYSTEM_PREFIX_PATH "/usr/local;/usr;/;/home;/usr/local;/usr/X11R6;/usr/pkg;/opt"
CMAKE_SYSTEM_PROCESSOR "x86_64"
CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED "1"
CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED "1"
CMAKE_SYSTEM_VERSION "5.8.0-45-generic"
CMAKE_TWEAK_VERSION "0"
CMAKE_UNAME "/usr/bin/uname"
CMAKE_VERBOSE_MAKEFILE "FALSE"
CMAKE_VERSION "3.20.20210331-gbd4ebf1"
PROJECT_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation"
PROJECT_DESCRIPTION ""
PROJECT_HOMEPAGE_URL ""
PROJECT_IS_TOP_LEVEL "ON"
PROJECT_NAME "SystemInformation"
PROJECT_SOURCE_DIR "/home/zachary/cmake/Tests/SystemInformation"
RUN_CONFIGURE "ON"
SystemInformation_BINARY_DIR "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation"
SystemInformation_DESCRIPTION ""
SystemInformation_HOMEPAGE_URL ""
SystemInformation_IS_TOP_LEVEL "ON"
SystemInformation_SOURCE_DIR "/home/zachary/cmake/Tests/SystemInformation"
UNIX "1"
_CMAKE_CUDA_IMPLICIT_INCLUDE_DIRECTORIES_INIT "/usr/include"
_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT "/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include;/usr/include"
_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER "YES"
_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE "YES"
_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER "YES"
_CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES_INIT "/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include;/usr/include"
_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER "YES"
_CMAKE_C_IPO_SUPPORTED_BY_CMAKE "YES"
_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER "YES"
_CMAKE_INSTALL_DIR "/home"
_INCLUDED_FILE "/home/zachary/cmake/Modules/Platform/Linux-GNU-CXX.cmake"
_INCLUDED_SYSTEM_INFO_FILE "/home/zachary/cmake/Modules/Platform/Linux.cmake"
_IN_TC "0"
__COMPILER_CMAKE_COMMON_COMPILER_MACROS "1"
__COMPILER_GNU "1"
__LINUX_COMPILER_GNU "1"
__UNIX_PATHS_INCLUDED "1"
__lto_flags "-flto;-fno-fat-lto-objects"
__pch_header_C "c-header"
__pch_header_CXX "c++-header"
__pch_header_OBJC "objective-c-header"
__pch_header_OBJCXX "objective-c++-header"
extension ""
incl "/home/zachary/cmake/Tests/SystemInformation/This does not exists"
lang ""
type ""
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/AllCommands.txt":
----------------------------------------------------------------
___cmake_include_compiler_wrapper
__cmake_include_compiler_wrapper
__compiler_check_default_language_standard
__compiler_gnu
__linux_compiler_gnu
add_compile_definitions
add_compile_options
add_custom_command
add_custom_target
add_definitions
add_dependencies
add_executable
add_library
add_link_options
add_subdirectory
add_test
aux_source_directory
break
build_command
build_name
cmake_host_system_information
cmake_initialize_per_config_variable
cmake_language
cmake_minimum_required
cmake_parse_arguments
cmake_path
cmake_policy
cmake_record_c_compile_features
cmake_record_cuda_compile_features
cmake_record_cxx_compile_features
configure_file
continue
create_test_sourcelist
define_property
else
elseif
enable_language
enable_testing
endforeach
endfunction
endif
endmacro
endwhile
exec_program
execute_process
export
export_library_dependencies
file
find_file
find_library
find_package
find_path
find_program
fltk_wrap_ui
foo
foreach
function
get_cmake_property
get_directory_property
get_filename_component
get_property
get_source_file_property
get_target_property
get_test_property
getdefaultwindowsprefixbase
if
include
include_directories
include_external_msproject
include_guard
include_regular_expression
install
install_files
install_programs
install_targets
link_directories
link_libraries
list
load_cache
load_command
macro
make_directory
mark_as_advanced
math
message
option
output_required_files
project
qt_wrap_cpp
qt_wrap_ui
remove
remove_definitions
return
separate_arguments
set
set_directory_properties
set_property
set_source_files_properties
set_target_properties
set_tests_properties
site_name
source_group
string
subdir_depends
subdirs
target_compile_definitions
target_compile_features
target_compile_options
target_include_directories
target_link_directories
target_link_libraries
target_link_options
target_precompile_headers
target_sources
try_compile
try_run
unset
use_mangled_mesa
utility_source
variable_requires
variable_watch
while
write_file
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/AllMacros.txt":
----------------------------------------------------------------
__cmake_include_compiler_wrapper
__compiler_check_default_language_standard
cmake_record_c_compile_features
cmake_record_cxx_compile_features
cmake_record_cuda_compile_features
__compiler_gnu
__linux_compiler_gnu
__cmake_include_compiler_wrapper
FOO
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/OtherProperties.txt":
----------------------------------------------------------------
INCLUDE_DIRECTORY: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation
INCLUDE_DIRECTORY: /home/zachary/cmake/Tests/SystemInformation
INCLUDE_REGULAR_EXPRESSION: ^.*$
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../Source/cmConfigure.h":
----------------------------------------------------------------
/* Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
   file Copyright.txt or https://cmake.org/licensing for details.  */
#pragma once

#include "cmsys/Configure.hxx" // IWYU pragma: export

#ifdef _MSC_VER
#pragma warning(disable : 4786)
#pragma warning(disable : 4503)
#endif

#ifdef __ICL
#pragma warning(disable : 985)
#pragma warning(disable : 1572) /* floating-point equality test */
#endif

/* #undef HAVE_ENVIRON_NOT_REQUIRE_PROTOTYPE */
#define HAVE_UNSETENV
#define CMake_USE_ELF_PARSER
/* #undef CMake_USE_MACH_PARSER */
/* #undef CMake_USE_XCOFF_PARSER */
#define CMake_DEFAULT_RECURSION_LIMIT 100
#define CMAKE_BIN_DIR "/bin"
#define CMAKE_DATA_DIR "/share/cmake-3.20"
#define CMAKE_DOC_DIR "/doc/cmake-3.20"

#define CM_FALLTHROUGH cmsys_FALLTHROUGH

#if defined(_WIN32) &amp;&amp; !defined(NOMINMAX)
#  define NOMINMAX
#endif
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../CMakeCache.txt":
----------------------------------------------------------------
# This is the CMakeCache file.
# For build in directory: /home/zachary/oss/labs/lab-08/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build the CMake Curses Dialog ccmake
BUILD_CursesDialog:BOOL=ON

//Build Qt dialog for CMake
BUILD_QtDialog:BOOL=OFF

//Build the testing tree.
BUILD_TESTING:BOOL=ON

//Path to a program.
BZRCOMMAND:FILEPATH=BZRCOMMAND-NOTFOUND

//Path to a program.
BZR_EXECUTABLE:FILEPATH=BZR_EXECUTABLE-NOTFOUND

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Location under install prefix for bin (default "bin")
CMAKE_BIN_DIR:STRING=

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//Build with RPATH set to match install-tree RPATH.
CMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Location under install prefix for data (default "share/cmake-3.20")
CMAKE_DATA_DIR:STRING=

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Location under install prefix for docs (default "doc/cmake-3.20")
CMAKE_DOC_DIR:STRING=

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Value Computed by CMake
CMAKE_FORM_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Source/CursesDialog/form

//Value Computed by CMake
CMAKE_FORM_SOURCE_DIR:STATIC=/home/zachary/cmake/Source/CursesDialog/form

//Fortran compiler
CMAKE_Fortran_COMPILER:FILEPATH=NOTFOUND

//Fortran compiler Id
CMAKE_Fortran_COMPILER_ID:STRING=

//Fortran compiler supports F90
CMAKE_Fortran_COMPILER_SUPPORTS_F90:BOOL=OFF

//Fortran flags
CMAKE_Fortran_FLAGS:STRING=

//Location under install prefix for Info manual (default "info")
CMAKE_INFO_DIR:STRING=

//Install Microsoft runtime debug libraries with CMake.
CMAKE_INSTALL_DEBUG_LIBRARIES:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Install with RPATH set to find custom-built libraries.
CMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Location under install prefix for man pages (default "man")
CMAKE_MAN_DIR:STRING=

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=CMake

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

//Should the long tests be run (such as Bootstrap).
CMAKE_RUN_LONG_TESTS:BOOL=ON

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//Enable folder grouping of projects in IDEs.
CMAKE_USE_FOLDERS:BOOL=ON

//Use OpenSSL.
CMAKE_USE_OPENSSL:BOOL=ON

//Use system-installed bzip2
CMAKE_USE_SYSTEM_BZIP2:BOOL=OFF

//Use system-installed curl
CMAKE_USE_SYSTEM_CURL:BOOL=OFF

//Use system-installed expat
CMAKE_USE_SYSTEM_EXPAT:BOOL=OFF

//Use system-installed libform
CMAKE_USE_SYSTEM_FORM:BOOL=OFF

//Use system-installed jsoncpp
CMAKE_USE_SYSTEM_JSONCPP:BOOL=OFF

//Use system-installed KWIML
CMAKE_USE_SYSTEM_KWIML:BOOL=OFF

//Use system-installed libarchive
CMAKE_USE_SYSTEM_LIBARCHIVE:BOOL=OFF

//Use system-installed liblzma
CMAKE_USE_SYSTEM_LIBLZMA:BOOL=OFF

//Use system-installed librhash
CMAKE_USE_SYSTEM_LIBRHASH:BOOL=OFF

//Use system-installed libuv
CMAKE_USE_SYSTEM_LIBUV:BOOL=OFF

//Use system-installed nghttp2
CMAKE_USE_SYSTEM_NGHTTP2:BOOL=OFF

//Use system-installed zlib
CMAKE_USE_SYSTEM_ZLIB:BOOL=OFF

//Use system-installed zstd
CMAKE_USE_SYSTEM_ZSTD:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Location under install prefix for XDG specific files (default
// "share")
CMAKE_XDGDATA_DIR:STRING=

//Value Computed by CMake
CMLIBLZMA_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmliblzma

//Value Computed by CMake
CMLIBLZMA_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmliblzma

//Value Computed by CMake
CMZLIB_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmzlib

//Value Computed by CMake
CMZLIB_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmzlib

//Value Computed by CMake
CMakeDeveloperReference_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/Doxygen

//Value Computed by CMake
CMakeDeveloperReference_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/Doxygen

//Value Computed by CMake
CMakeHelp_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/Sphinx

//Value Computed by CMake
CMakeHelp_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/Sphinx

//Value Computed by CMake
CMake_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build

//Build CMake Developer Reference
CMake_BUILD_DEVELOPER_REFERENCE:BOOL=OFF

//Compile CMake with link-time optimization if supported
CMake_BUILD_LTO:BOOL=OFF

//Using components when installing
CMake_INSTALL_COMPONENTS:BOOL=OFF

//Whether to install 3rd-party runtime dependencies
CMake_INSTALL_DEPENDENCIES:BOOL=OFF

//Intermediate installation path (empty by default)
CMake_INSTALL_INFIX:STRING=

//Run clang-tidy with the compiler.
CMake_RUN_CLANG_TIDY:BOOL=OFF

//Run include-what-you-use with the compiler.
CMake_RUN_IWYU:BOOL=OFF

//Value Computed by CMake
CMake_SOURCE_DIR:STATIC=/home/zachary/cmake

//Test CMake Installation
CMake_TEST_INSTALL:BOOL=OFF

//Path to program used to compress files for transfer to the dart
// server
COMPRESSIONCOMMAND:FILEPATH=/usr/bin/gzip

//Path to the coverage program that CTest uses for performing coverage
// inspection
COVERAGE_COMMAND:FILEPATH=/usr/bin/gcov

//Extra command line flags to pass to the coverage tool
COVERAGE_EXTRA_FLAGS:STRING=-l

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build FreeBSD packages
CPACK_BINARY_FREEBSD:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//Enable to build TZ packages
CPACK_BINARY_TZ:BOOL=ON

//Add FreeBSD pkg(8) generator to CPack.
CPACK_ENABLE_FREEBSD_PKG:BOOL=OFF

//Enable to build RPM source packages
CPACK_SOURCE_RPM:BOOL=OFF

//Enable to build TBZ2 source packages
CPACK_SOURCE_TBZ2:BOOL=ON

//Enable to build TGZ source packages
CPACK_SOURCE_TGZ:BOOL=ON

//Enable to build TXZ source packages
CPACK_SOURCE_TXZ:BOOL=ON

//Enable to build TZ source packages
CPACK_SOURCE_TZ:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=OFF

//How many times to retry timed-out CTest submissions.
CTEST_SUBMIT_RETRY_COUNT:STRING=3

//How long to wait between timed-out CTest submissions.
CTEST_SUBMIT_RETRY_DELAY:STRING=5

//Should the tests that use '--build-target package' be run?
CTEST_TEST_CPACK:BOOL=ON

//Should the tests that run a full sub ctest process be run?
CTEST_TEST_CTEST:BOOL=OFF

//Value Computed by CMake
CURL_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmcurl

//Path to SSL CA Certificate Bundle
CURL_CA_BUNDLE:FILEPATH=

//Path to SSL CA Certificate Directory
CURL_CA_PATH:PATH=

//Value Computed by CMake
CURL_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmcurl

//Path to a library.
CURSES_CURSES_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libcurses.so

//Path to a library.
CURSES_FORM_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libform.so

//Path to a file.
CURSES_INCLUDE_PATH:PATH=/usr/include

//Path to a library.
CURSES_NCURSES_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libncurses.so

//Path to a program.
CVSCOMMAND:FILEPATH=CVSCOMMAND-NOTFOUND

//CVS command line client
CVS_EXECUTABLE:FILEPATH=CVS_EXECUTABLE-NOTFOUND

//Options passed to the cvs update command.
CVS_UPDATE_OPTIONS:STRING=-d -A -P

//Limit of reported errors, -1 reports all.
DART_BUILD_ERROR_REPORT_LIMIT:BOOL=OFF

//Limit of reported warnings, -1 reports all.
DART_BUILD_WARNING_REPORT_LIMIT:BOOL=OFF

//If you have Dart installed, where is it located?
DART_ROOT:PATH=DART_ROOT-NOTFOUND

//Maximum time allowed before CTest will kill the test.
DART_TESTING_TIMEOUT:STRING=1500

//Show the actual output of the build, or if off show a . for each
// 1024 bytes.
DART_VERBOSE_BUILD:BOOL=OFF

//Should Dart server send email when build errors are found in
// Continuous builds?
DELIVER_CONTINUOUS_EMAIL:BOOL=OFF

//Path to a program.
DPKG_EXECUTABLE:FILEPATH=/usr/bin/dpkg

//Path to a library.
EXECINFO_LIB:FILEPATH=EXECINFO_LIB-NOTFOUND

//Path to a program.
FAKEROOT_EXECUTABLE:FILEPATH=/usr/bin/fakeroot

//Path to a program.
GITCOMMAND:FILEPATH=/usr/bin/git

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Path to gunzip executable
GUNZIPCOMMAND:FILEPATH=/usr/bin/gunzip

//Path to a program.
GUNZIP_EXECUTABLE:FILEPATH=/usr/bin/gunzip

//Path to a program.
HGCOMMAND:FILEPATH=HGCOMMAND-NOTFOUND

//Path to a program.
HG_EXECUTABLE:FILEPATH=HG_EXECUTABLE-NOTFOUND

//Path to java command, used by the Dart server to create html.
JAVACOMMAND:FILEPATH=/usr/bin/java

//Path to a file.
JNI_H:FILEPATH=JNI_H-NOTFOUND

//Path to a program.
Java_IDLJ_EXECUTABLE:FILEPATH=Java_IDLJ_EXECUTABLE-NOTFOUND

//Path to a program.
Java_JARSIGNER_EXECUTABLE:FILEPATH=/usr/bin/jarsigner

//Path to a program.
Java_JAR_EXECUTABLE:FILEPATH=/usr/bin/jar

//Path to a program.
Java_JAVAC_EXECUTABLE:FILEPATH=/usr/bin/javac

//Path to a program.
Java_JAVADOC_EXECUTABLE:FILEPATH=/usr/bin/javadoc

//Path to a program.
Java_JAVAH_EXECUTABLE:FILEPATH=Java_JAVAH_EXECUTABLE-NOTFOUND

//Path to a program.
Java_JAVA_EXECUTABLE:FILEPATH=/usr/bin/java

//Value Computed by CMake
JsonCpp_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmjsoncpp

//Value Computed by CMake
JsonCpp_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmjsoncpp

//Command to build the project
MAKECOMMAND:STRING=/usr/bin/cmake --build . --config "${CTEST_CONFIGURATION_TYPE}"

//Path to the memory checking command, used for memory error detection.
MEMORYCHECK_COMMAND:FILEPATH=MEMORYCHECK_COMMAND-NOTFOUND

//File that contains suppressions for the memory checker
MEMORYCHECK_SUPPRESSIONS_FILE:FILEPATH=

//Path to a program.
MINGW_CC_LINUX2WIN_EXECUTABLE:FILEPATH=MINGW_CC_LINUX2WIN_EXECUTABLE-NOTFOUND

//Path to a program.
MINGW_CXX_LINUX2WIN_EXECUTABLE:FILEPATH=MINGW_CXX_LINUX2WIN_EXECUTABLE-NOTFOUND

//Path to a program.
MINGW_RC_LINUX2WIN_EXECUTABLE:FILEPATH=MINGW_RC_LINUX2WIN_EXECUTABLE-NOTFOUND

//makensis program location
NSIS_MAKENSIS_EXECUTABLE:FILEPATH=NSIS_MAKENSIS_EXECUTABLE-NOTFOUND

//Path to a program.
NUGET_EXECUTABLE:FILEPATH=NUGET_EXECUTABLE-NOTFOUND

//Path to a library.
OPENSSL_CRYPTO_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libcrypto.so

//Path to a file.
OPENSSL_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
OPENSSL_SSL_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libssl.so

//Path to a program.
P4COMMAND:FILEPATH=P4COMMAND-NOTFOUND

//Path to a program.
P4D_EXECUTABLE:FILEPATH=P4D_EXECUTABLE-NOTFOUND

//Path to a program.
P4_EXECUTABLE:FILEPATH=P4_EXECUTABLE-NOTFOUND

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3.8

QT_QMAKE_EXECUTABLE:FILEPATH=NOTFOUND

//The directory containing a CMake configuration file for Qt5Core.
Qt5Core_DIR:PATH=Qt5Core_DIR-NOTFOUND

//The directory containing a CMake configuration file for Qt5Widgets.
Qt5Widgets_DIR:PATH=Qt5Widgets_DIR-NOTFOUND

//Path to a file.
RANDOM_FILE:FILEPATH=/dev/urandom

//Path to a program.
READELF_EXECUTABLE:FILEPATH=/usr/bin/readelf

//Path to a program.
RPMBUILD_EXECUTABLE:FILEPATH=RPMBUILD_EXECUTABLE-NOTFOUND

//Path to a program.
RPM_EXECUTABLE:FILEPATH=RPM_EXECUTABLE-NOTFOUND

//Path to a program.
SDCC_EXECUTABLE:FILEPATH=SDCC_EXECUTABLE-NOTFOUND

//Path to a program.
SHLIBDEPS_EXECUTABLE:FILEPATH=/usr/bin/dpkg-shlibdeps

//Name of the computer/site where compile is being run
SITE:STRING=zachary-Blade

//Path to the SLURM sbatch executable
SLURM_SBATCH_COMMAND:FILEPATH=SLURM_SBATCH_COMMAND-NOTFOUND

//Path to the SLURM srun executable
SLURM_SRUN_COMMAND:FILEPATH=SLURM_SRUN_COMMAND-NOTFOUND

//Sphinx Documentation Builder (sphinx-doc.org)
SPHINX_EXECUTABLE:FILEPATH=SPHINX_EXECUTABLE-NOTFOUND

//Flags to pass to sphinx-build
SPHINX_FLAGS:STRING=

//Build html help with Sphinx
SPHINX_HTML:BOOL=OFF

//Build Info manual with Sphinx
SPHINX_INFO:BOOL=OFF

//Build PDF help with Sphinx using LaTeX
SPHINX_LATEXPDF:BOOL=OFF

//Build man pages with Sphinx
SPHINX_MAN:BOOL=OFF

//Build Qt help with Sphinx
SPHINX_QTHELP:BOOL=OFF

//Build html single page help with Sphinx
SPHINX_SINGLEHTML:BOOL=OFF

//Build text help with Sphinx (not installed)
SPHINX_TEXT:BOOL=OFF

//Path to a program.
SVNCOMMAND:FILEPATH=SVNCOMMAND-NOTFOUND

//subversion command line client
Subversion_SVN_EXECUTABLE:FILEPATH=Subversion_SVN_EXECUTABLE-NOTFOUND

//Value Computed by CMake
bzip2_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmbzip2

//Value Computed by CMake
bzip2_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmbzip2

//Value Computed by CMake
cmsys_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Source/kwsys

//Dependencies for the target
cmsys_LIB_DEPENDS:STATIC=general;dl;general;dl;

//Value Computed by CMake
cmsys_SOURCE_DIR:STATIC=/home/zachary/cmake/Source/kwsys

//Value Computed by CMake
libarchive_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmlibarchive

//Value Computed by CMake
libarchive_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmlibarchive

//Value Computed by CMake
librhash_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmlibrhash

//Value Computed by CMake
librhash_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmlibrhash

//Value Computed by CMake
libuv_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmlibuv

//Value Computed by CMake
libuv_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmlibuv

//Path to a library.
pkgcfg_lib_NCURSES_ncurses:FILEPATH=/usr/lib/x86_64-linux-gnu/libncurses.so

//Path to a library.
pkgcfg_lib_NCURSES_tinfo:FILEPATH=/usr/lib/x86_64-linux-gnu/libtinfo.so

//Path to a library.
pkgcfg_lib__OPENSSL_crypto:FILEPATH=/usr/lib/x86_64-linux-gnu/libcrypto.so

//Path to a library.
pkgcfg_lib__OPENSSL_ssl:FILEPATH=/usr/lib/x86_64-linux-gnu/libssl.so

//Value Computed by CMake
zstd_BINARY_DIR:STATIC=/home/zachary/oss/labs/lab-08/build/Utilities/cmzstd

//Value Computed by CMake
zstd_SOURCE_DIR:STATIC=/home/zachary/cmake/Utilities/cmzstd


########################
# INTERNAL cache entries
########################

//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_MD5_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_RMD160_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_RMD160_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_RMD160_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA1_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBC2:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBC3:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA256_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBC2:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBC3:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA384_OPENSSL:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBC:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBC2:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBC3:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBMD:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_LIBSYSTEM:INTERNAL=FALSE
//Result of TRY_COMPILE
ARCHIVE_CRYPTO_SHA512_OPENSSL:INTERNAL=FALSE
//Set to ON to build curl executable.
BUILD_CURL_EXE:INTERNAL=OFF
//No curl dashboard reports
BUILD_DASHBOARD_REPORTS:INTERNAL=OFF
//No curl release/debug dirs
BUILD_RELEASE_DEBUG_DIRS:INTERNAL=OFF
//Build shared libraries
BUILD_SHARED_LIBS:INTERNAL=OFF
//ADVANCED property for variable: BZRCOMMAND
BZRCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BZR_EXECUTABLE
BZR_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_BIN_DIR
CMAKE_BIN_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_BUILD_WITH_INSTALL_RPATH
CMAKE_BUILD_WITH_INSTALL_RPATH-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/zachary/oss/labs/lab-08/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=16
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//ADVANCED property for variable: CMAKE_CTEST_COMMAND
CMAKE_CTEST_COMMAND-ADVANCED:INTERNAL=1
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DATA_DIR
CMAKE_DATA_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DOC_DIR
CMAKE_DOC_DIR-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/cmake-gui
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//ADVANCED property for variable: CMAKE_Fortran_COMPILER
CMAKE_Fortran_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_Fortran_COMPILER_ID
CMAKE_Fortran_COMPILER_ID-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_Fortran_COMPILER_SUPPORTS_F90
CMAKE_Fortran_COMPILER_SUPPORTS_F90-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_Fortran_FLAGS
CMAKE_Fortran_FLAGS-ADVANCED:INTERNAL=1
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/zachary/cmake
//ADVANCED property for variable: CMAKE_INFO_DIR
CMAKE_INFO_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DEBUG_LIBRARIES
CMAKE_INSTALL_DEBUG_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RPATH_USE_LINK_PATH
CMAKE_INSTALL_RPATH_USE_LINK_PATH-ADVANCED:INTERNAL=1
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAN_DIR
CMAKE_MAN_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=35
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.16
//ADVANCED property for variable: CMAKE_RUN_LONG_TESTS
CMAKE_RUN_LONG_TESTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//Enable BearSSL for SSL/TLS
CMAKE_USE_BEARSSL:INTERNAL=OFF
//ADVANCED property for variable: CMAKE_USE_FOLDERS
CMAKE_USE_FOLDERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_USE_GSSAPI
CMAKE_USE_GSSAPI-ADVANCED:INTERNAL=1
//Use GSSAPI implementation (right now only Heimdal is supported
// with CMake build)
CMAKE_USE_GSSAPI:INTERNAL=OFF
//ADVANCED property for variable: CMAKE_USE_LIBSSH2
CMAKE_USE_LIBSSH2-ADVANCED:INTERNAL=1
//Use libSSH2
CMAKE_USE_LIBSSH2:INTERNAL=OFF
//Enable mbedTLS for SSL/TLS
CMAKE_USE_MBEDTLS:INTERNAL=OFF
//Enable NSS for SSL/TLS
CMAKE_USE_NSS:INTERNAL=OFF
//No curl OpenLDAP
CMAKE_USE_OPENLDAP:INTERNAL=OFF
//ADVANCED property for variable: CMAKE_USE_OPENSSL
CMAKE_USE_OPENSSL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_USE_SYSTEM_KWIML
CMAKE_USE_SYSTEM_KWIML-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_XDGDATA_DIR
CMAKE_XDGDATA_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMake_BUILD_DEVELOPER_REFERENCE
CMake_BUILD_DEVELOPER_REFERENCE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
CMake_C11_THREAD_LOCAL_WORKS:INTERNAL=TRUE
//Result of TRY_COMPILE
CMake_COMPILE_CXX_FILESYSTEM:INTERNAL=TRUE
//Result of TRY_COMPILE
CMake_CXX17_WORKS:INTERNAL=TRUE
//TRY_RUN
CMake_HAVE_CXX_FILESYSTEM:INTERNAL=ON
//Result of TRY_COMPILE
CMake_HAVE_CXX_MAKE_UNIQUE:INTERNAL=TRUE
//ADVANCED property for variable: CMake_INSTALL_COMPONENTS
CMake_INSTALL_COMPONENTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMake_INSTALL_DEPENDENCIES
CMake_INSTALL_DEPENDENCIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMake_INSTALL_INFIX
CMake_INSTALL_INFIX-ADVANCED:INTERNAL=1
//Result of TRY_RUN
CMake_RUN_CXX_FILESYSTEM:INTERNAL=0
//ADVANCED property for variable: CMake_TEST_INSTALL
CMake_TEST_INSTALL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPRESSIONCOMMAND
COMPRESSIONCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_COMMAND
COVERAGE_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_EXTRA_FLAGS
COVERAGE_EXTRA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_FREEBSD
CPACK_BINARY_FREEBSD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TZ
CPACK_BINARY_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_RPM
CPACK_SOURCE_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TBZ2
CPACK_SOURCE_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TGZ
CPACK_SOURCE_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TXZ
CPACK_SOURCE_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TZ
CPACK_SOURCE_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_COUNT
CTEST_SUBMIT_RETRY_COUNT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_DELAY
CTEST_SUBMIT_RETRY_DELAY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_TEST_CPACK
CTEST_TEST_CPACK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_TEST_CTEST
CTEST_TEST_CTEST-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURL_CA_BUNDLE
CURL_CA_BUNDLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURL_CA_PATH
CURL_CA_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURL_DISABLE_COOKIES
CURL_DISABLE_COOKIES-ADVANCED:INTERNAL=1
//to disable cookies support
CURL_DISABLE_COOKIES:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_CRYPTO_AUTH
CURL_DISABLE_CRYPTO_AUTH-ADVANCED:INTERNAL=1
//to disable cryptographic authentication
CURL_DISABLE_CRYPTO_AUTH:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_DICT
CURL_DISABLE_DICT-ADVANCED:INTERNAL=1
//disables DICT
CURL_DISABLE_DICT:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_FILE
CURL_DISABLE_FILE-ADVANCED:INTERNAL=1
//disables FILE
CURL_DISABLE_FILE:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_FTP
CURL_DISABLE_FTP-ADVANCED:INTERNAL=1
//disables FTP
CURL_DISABLE_FTP:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_GOPHER
CURL_DISABLE_GOPHER-ADVANCED:INTERNAL=1
//to disable Gopher
CURL_DISABLE_GOPHER:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_HTTP
CURL_DISABLE_HTTP-ADVANCED:INTERNAL=1
//disables HTTP
CURL_DISABLE_HTTP:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_IMAP
CURL_DISABLE_IMAP-ADVANCED:INTERNAL=1
//to disable IMAP
CURL_DISABLE_IMAP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_LDAP
CURL_DISABLE_LDAP-ADVANCED:INTERNAL=1
//disables LDAP
CURL_DISABLE_LDAP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_LDAPS
CURL_DISABLE_LDAPS-ADVANCED:INTERNAL=1
//to disable LDAPS
CURL_DISABLE_LDAPS:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_POP3
CURL_DISABLE_POP3-ADVANCED:INTERNAL=1
//to disable POP3
CURL_DISABLE_POP3:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_PROXY
CURL_DISABLE_PROXY-ADVANCED:INTERNAL=1
//to disable proxy
CURL_DISABLE_PROXY:INTERNAL=OFF
//ADVANCED property for variable: CURL_DISABLE_RTSP
CURL_DISABLE_RTSP-ADVANCED:INTERNAL=1
//to disable RTSP
CURL_DISABLE_RTSP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_SMTP
CURL_DISABLE_SMTP-ADVANCED:INTERNAL=1
//to disable SMTP
CURL_DISABLE_SMTP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_TELNET
CURL_DISABLE_TELNET-ADVANCED:INTERNAL=1
//disables Telnet
CURL_DISABLE_TELNET:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_TFTP
CURL_DISABLE_TFTP-ADVANCED:INTERNAL=1
//disables TFTP
CURL_DISABLE_TFTP:INTERNAL=ON
//ADVANCED property for variable: CURL_DISABLE_VERBOSE_STRINGS
CURL_DISABLE_VERBOSE_STRINGS-ADVANCED:INTERNAL=1
//to disable verbose strings
CURL_DISABLE_VERBOSE_STRINGS:INTERNAL=OFF
//No curl hidden symbols
CURL_HIDDEN_SYMBOLS:INTERNAL=OFF
//Turn on compiler Link Time Optimizations
CURL_LTO:INTERNAL=OFF
//Set to ON to build libcurl with static CRT on Windows (/MT).
CURL_STATIC_CRT:INTERNAL=OFF
//Turn compiler warnings into errors
CURL_WERROR:INTERNAL=OFF
//Have library /usr/lib/x86_64-linux-gnu/libcurses.so
CURSES_CURSES_HAS_WSYNCUP:INTERNAL=1
//ADVANCED property for variable: CURSES_CURSES_LIBRARY
CURSES_CURSES_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_FORM_LIBRARY
CURSES_FORM_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_INCLUDE_PATH
CURSES_INCLUDE_PATH-ADVANCED:INTERNAL=1
//Have library /usr/lib/x86_64-linux-gnu/libncurses.so
CURSES_NCURSES_HAS_CBREAK:INTERNAL=1
//ADVANCED property for variable: CURSES_NCURSES_LIBRARY
CURSES_NCURSES_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVSCOMMAND
CVSCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVS_EXECUTABLE
CVS_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVS_UPDATE_OPTIONS
CVS_UPDATE_OPTIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_BUILD_ERROR_REPORT_LIMIT
DART_BUILD_ERROR_REPORT_LIMIT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_BUILD_WARNING_REPORT_LIMIT
DART_BUILD_WARNING_REPORT_LIMIT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_ROOT
DART_ROOT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_TESTING_TIMEOUT
DART_TESTING_TIMEOUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_VERBOSE_BUILD
DART_VERBOSE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DELIVER_CONTINUOUS_EMAIL
DELIVER_CONTINUOUS_EMAIL-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(dev_t)
DEV_T:INTERNAL=8
//Curl can use thread-safe functions
DISABLED_THREADSAFE:INTERNAL=OFF
//Enable ACL support
ENABLE_ACL:INTERNAL=OFF
//Set to ON to enable c-ares support
ENABLE_ARES:INTERNAL=OFF
//Enable the use of the system BZip2 library if found
ENABLE_BZip2:INTERNAL=ON
//Enable the use of CNG(Crypto Next Generation)
ENABLE_CNG:INTERNAL=OFF
//Set to ON to build with TrackMemory feature enabled
ENABLE_CURLDEBUG:INTERNAL=OFF
//Set to ON to enable curl debug features
ENABLE_DEBUG:INTERNAL=OFF
//Enable the use of the system EXPAT library if found
ENABLE_EXPAT:INTERNAL=OFF
//Enable iconv support
ENABLE_ICONV:INTERNAL=OFF
//Set to OFF to prevent usage of inet_pton when building against
// modern SDKs while still requiring compatibility with older Windows
// versions, such as Windows XP, Windows Server 2003 etc.
ENABLE_INET_PTON:INTERNAL=OFF
//ADVANCED property for variable: ENABLE_IPV6
ENABLE_IPV6-ADVANCED:INTERNAL=1
//Define if you want to enable IPv6 support
ENABLE_IPV6:INTERNAL=ON
//Enable the use of the system LIBB2 library if found
ENABLE_LIBB2:INTERNAL=OFF
//Enable the use of the system libxml2 library if found
ENABLE_LIBXML2:INTERNAL=OFF
//Enable the use of the system LZ4 library if found
ENABLE_LZ4:INTERNAL=OFF
//Enable the use of the system LZMA library if found
ENABLE_LZMA:INTERNAL=ON
//Enable the use of the system LZO library if found
ENABLE_LZO:INTERNAL=OFF
//Enable the use of the system LibGCC library if found
ENABLE_LibGCC:INTERNAL=OFF
//No curl built-in manual
ENABLE_MANUAL:INTERNAL=OFF
//Enable use of mbed TLS
ENABLE_MBEDTLS:INTERNAL=OFF
//Enable use of Nettle
ENABLE_NETTLE:INTERNAL=OFF
//Enable use of OpenSSL
ENABLE_OPENSSL:INTERNAL=ON
//Enable the use of the system PCREPOSIX library if found
ENABLE_PCREPOSIX:INTERNAL=OFF
//No curl POSIX threaded DNS lookup
ENABLE_THREADED_RESOLVER:INTERNAL=OFF
//Define if you want Unix domain sockets support
ENABLE_UNIX_SOCKETS:INTERNAL=OFF
//Enable extended attribute support
ENABLE_XATTR:INTERNAL=OFF
//Enable the use of the system ZLIB library if found
ENABLE_ZLIB:INTERNAL=ON
//Enable the use of the system zstd library if found
ENABLE_ZSTD:INTERNAL=ON
//ADVANCED property for variable: EXECINFO_LIB
EXECINFO_LIB-ADVANCED:INTERNAL=1
//No configurable exe dir.
EXECUTABLE_OUTPUT_PATH:INTERNAL=
//Details about finding BZip2
FIND_PACKAGE_MESSAGE_DETAILS_BZip2:INTERNAL=[cmbzip2][/home/zachary/cmake/Utilities/cmbzip2][v1.0.8()]
//Details about finding Curses
FIND_PACKAGE_MESSAGE_DETAILS_Curses:INTERNAL=[/usr/lib/x86_64-linux-gnu/libncurses.so][/usr/include][v()]
//Details about finding LibLZMA
FIND_PACKAGE_MESSAGE_DETAILS_LibLZMA:INTERNAL=[cmliblzma][/home/zachary/cmake/Utilities/cmliblzma/liblzma/api][1][1][1][v5.2.4()]
//Details about finding NGHTTP2
FIND_PACKAGE_MESSAGE_DETAILS_NGHTTP2:INTERNAL=[cmnghttp2][/home/zachary/cmake/Utilities/cmnghttp2/lib/includes][v()]
//Details about finding OpenSSL
FIND_PACKAGE_MESSAGE_DETAILS_OpenSSL:INTERNAL=[/usr/lib/x86_64-linux-gnu/libcrypto.so][/usr/include][c ][v1.1.1f()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[cmzlib][/home/zachary/cmake/Utilities][v()]
//CHECK_TYPE_SIZE: sizeof(gid_t)
GID_T:INTERNAL=4
//ADVANCED property for variable: GITCOMMAND
GITCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GUNZIPCOMMAND
GUNZIPCOMMAND-ADVANCED:INTERNAL=1
//Have symbol alarm
HAVE_ALARM:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h
HAVE_ALLOCA_H:INTERNAL=1
//Have symbol arc4random
HAVE_ARC4RANDOM:INTERNAL=
//Have symbol arc4random_buf
HAVE_ARC4RANDOM_BUF:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h
HAVE_ARPA_INET_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h
HAVE_ARPA_TFTP_H:INTERNAL=1
//Have symbol basename
HAVE_BASENAME:INTERNAL=1
//Curl test 
HAVE_BOOL_T:INTERNAL=1
//Test HAVE_BSWAP_16
HAVE_BSWAP_16:INTERNAL=1
//Test HAVE_BSWAP_32
HAVE_BSWAP_32:INTERNAL=1
//Test HAVE_BSWAP_64
HAVE_BSWAP_64:INTERNAL=1
//Curl test 
HAVE_BUILTIN_AVAILABLE:INTERNAL=
//Have include byteswap.h
HAVE_BYTESWAP_H:INTERNAL=1
//Have function chflags
HAVE_CHFLAGS:INTERNAL=
//Have function chown
HAVE_CHOWN:INTERNAL=1
//Have function chroot
HAVE_CHROOT:INTERNAL=1
//Curl test 
HAVE_CLOCK_GETTIME_MONOTONIC:INTERNAL=1
//Have symbol closesocket
HAVE_CLOSESOCKET:INTERNAL=
//Have includes sys/types.h;ctype.h;copyfile.h
HAVE_COPYFILE_H:INTERNAL=
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;crypto.h
HAVE_CRYPTO_H:INTERNAL=
//Have function ctime_r
HAVE_CTIME_R:INTERNAL=1
//Have symbol use_default_colors
HAVE_CURSES_USE_DEFAULT_COLORS:INTERNAL=1
//Have function cygwin_conv_path
HAVE_CYGWIN_CONV_PATH:INTERNAL=
//Result of TRY_COMPILE
HAVE_DEV_T:INTERNAL=TRUE
//Have includes sys/types.h;ctype.h;direct.h
HAVE_DIRECT_H:INTERNAL=
//Test HAVE_DIRENT_H
HAVE_DIRENT_H:INTERNAL=1
//Test HAVE_DIRFD
HAVE_DIRFD:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have library dl;/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so;cmnghttp2
HAVE_DLOPEN:INTERNAL=
//Have symbol D_MD_ORDER
HAVE_D_MD_ORDER:INTERNAL=
//Have symbol EFTYPE
HAVE_EFTYPE:INTERNAL=
//Have symbol EILSEQ
HAVE_EILSEQ:INTERNAL=1
//Have include elf.h
HAVE_ELF_H:INTERNAL=1
//Have symbol environ
HAVE_ENVIRON_NOT_REQUIRE_PROTOTYPE:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h
HAVE_ERR_H:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;ext2fs/ext2_fs.h
HAVE_EXT2FS_EXT2_FS_H:INTERNAL=
//Have function fchdir
HAVE_FCHDIR:INTERNAL=1
//Have function fchflags
HAVE_FCHFLAGS:INTERNAL=
//Have function fchmod
HAVE_FCHMOD:INTERNAL=1
//Have function fchown
HAVE_FCHOWN:INTERNAL=1
//Have symbol fcntl
HAVE_FCNTL:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Curl test 
HAVE_FCNTL_O_NONBLOCK:INTERNAL=1
//Have function fdopendir
HAVE_FDOPENDIR:INTERNAL=1
//Curl test 
HAVE_FILE_OFFSET_BITS:INTERNAL=1
//Have symbol fork
HAVE_FORK:INTERNAL=1
//Have symbol freeaddrinfo
HAVE_FREEADDRINFO:INTERNAL=1
//Have symbol freeifaddrs
HAVE_FREEIFADDRS:INTERNAL=1
//Have function fseeko
HAVE_FSEEKO:INTERNAL=1
//Have symbol fsetxattr
HAVE_FSETXATTR:INTERNAL=1
//Curl test 
HAVE_FSETXATTR_5:INTERNAL=1
//Curl test 
HAVE_FSETXATTR_6:INTERNAL=
//Have function fstat
HAVE_FSTAT:INTERNAL=1
//Have function fstatat
HAVE_FSTATAT:INTERNAL=1
//Have function fstatfs
HAVE_FSTATFS:INTERNAL=1
//Have function fstatvfs
HAVE_FSTATVFS:INTERNAL=1
//Have symbol ftruncate
HAVE_FTRUNCATE:INTERNAL=1
//Have function futimens
HAVE_FUTIMENS:INTERNAL=1
//Have function futimes
HAVE_FUTIMES:INTERNAL=1
//Have function futimesat
HAVE_FUTIMESAT:INTERNAL=1
//Have symbol getaddrinfo
HAVE_GETADDRINFO:INTERNAL=1
//Have symbol geteuid
HAVE_GETEUID:INTERNAL=1
//Have function getgrgid_r
HAVE_GETGRGID_R:INTERNAL=1
//Have function getgrnam_r
HAVE_GETGRNAM_R:INTERNAL=1
//Have symbol gethostbyaddr
HAVE_GETHOSTBYADDR:INTERNAL=1
//Have symbol gethostbyaddr_r
HAVE_GETHOSTBYADDR_R:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYADDR_R_5:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_5_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_7:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_7_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYADDR_R_8:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYADDR_R_8_REENTRANT:INTERNAL=1
//Have symbol gethostbyname
HAVE_GETHOSTBYNAME:INTERNAL=1
//Have symbol gethostbyname_r
HAVE_GETHOSTBYNAME_R:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYNAME_R_3:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_3_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_5:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_5_REENTRANT:INTERNAL=
//Curl test 
HAVE_GETHOSTBYNAME_R_6:INTERNAL=1
//Curl test 
HAVE_GETHOSTBYNAME_R_6_REENTRANT:INTERNAL=1
//Have function gethostname
HAVE_GETHOSTNAME:INTERNAL=1
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=1
//Have symbol getpass_r
HAVE_GETPASS_R:INTERNAL=
//Have symbol getpeername
HAVE_GETPEERNAME:INTERNAL=1
//Have function getpid
HAVE_GETPID:INTERNAL=1
//Have symbol getprotobyname
HAVE_GETPROTOBYNAME:INTERNAL=1
//Have function getpwnam_r
HAVE_GETPWNAM_R:INTERNAL=1
//Have symbol getpwuid
HAVE_GETPWUID:INTERNAL=1
//Have symbol getpwuid_r
HAVE_GETPWUID_R:INTERNAL=1
//Have symbol getrandom
HAVE_GETRANDOM:INTERNAL=1
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=1
//Have symbol getsockname
HAVE_GETSOCKNAME:INTERNAL=1
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=1
//Have function getvfsbyname
HAVE_GETVFSBYNAME:INTERNAL=
//Result of TRY_COMPILE
HAVE_GID_T:INTERNAL=TRUE
//Curl test 
HAVE_GLIBC_STRERROR_R:INTERNAL=
//Have symbol gmtime_r
HAVE_GMTIME_R:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h
HAVE_GRP_H:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;idn2.h
HAVE_IDN2_H:INTERNAL=
//Result of TRY_COMPILE
HAVE_ID_T:INTERNAL=TRUE
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h
HAVE_IFADDRS_H:INTERNAL=1
//Have symbol if_nametoindex
HAVE_IF_NAMETOINDEX:INTERNAL=1
//Have symbol inet_addr
HAVE_INET_ADDR:INTERNAL=1
//Have symbol inet_ntoa
HAVE_INET_NTOA:INTERNAL=1
//Have symbol inet_ntoa_r
HAVE_INET_NTOA_R:INTERNAL=
//Curl test 
HAVE_INET_NTOA_R_DECL:INTERNAL=
//Curl test 
HAVE_INET_NTOA_R_DECL_REENTRANT:INTERNAL=
//Have symbol inet_pton
HAVE_INET_PTON:INTERNAL=1
//Have include stdio.h;inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Curl test 
HAVE_IN_ADDR_T:INTERNAL=1
//Have symbol ioctl
HAVE_IOCTL:INTERNAL=1
//Curl test 
HAVE_IOCTLSOCKET:INTERNAL=
//Curl test 
HAVE_IOCTLSOCKET_CAMEL:INTERNAL=
//Curl test 
HAVE_IOCTLSOCKET_CAMEL_FIONBIO:INTERNAL=
//Curl test 
HAVE_IOCTLSOCKET_FIONBIO:INTERNAL=
//Curl test 
HAVE_IOCTL_FIONBIO:INTERNAL=1
//Curl test 
HAVE_IOCTL_SIOCGIFADDR:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;io.h
HAVE_IO_H:INTERNAL=
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;krb.h
HAVE_KRB_H:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h
HAVE_LANGINFO_H:INTERNAL=1
//Have function lchflags
HAVE_LCHFLAGS:INTERNAL=
//Have function lchmod
HAVE_LCHMOD:INTERNAL=
//Have function lchown
HAVE_LCHOWN:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h
HAVE_LIBGEN_H:INTERNAL=1
//Have library network;dl
HAVE_LIBNETWORK:INTERNAL=
//Have library socket;dl
HAVE_LIBSOCKET:INTERNAL=
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have function link
HAVE_LINK:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h
HAVE_LINUX_FIEMAP_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h
HAVE_LINUX_FS_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h
HAVE_LINUX_MAGIC_H:INTERNAL=1
//Have include linux/tcp.h
HAVE_LINUX_TCP_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h
HAVE_LINUX_TYPES_H:INTERNAL=1
//Have symbol localtime_r
HAVE_LOCALTIME_R:INTERNAL=1
//Have function lstat
HAVE_LSTAT:INTERNAL=1
//Have function lutimes
HAVE_LUTIMES:INTERNAL=1
//Test HAVE_LZMA_STREAM_ENCODER_MT
HAVE_LZMA_STREAM_ENCODER_MT:INTERNAL=
//Have function mach_absolute_time
HAVE_MACH_ABSOLUTE_TIME:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have function mbrtowc
HAVE_MBRTOWC:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;membership.h
HAVE_MEMBERSHIP_H:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have function mkdir
HAVE_MKDIR:INTERNAL=1
//Have function mkfifo
HAVE_MKFIFO:INTERNAL=1
//Have function mknod
HAVE_MKNOD:INTERNAL=1
//Have function mkstemp
HAVE_MKSTEMP:INTERNAL=1
//Have symbol mmap
HAVE_MMAP:INTERNAL=1
//Result of TRY_COMPILE
HAVE_MODE_T:INTERNAL=TRUE
//Test HAVE_MSG_NOSIGNAL
HAVE_MSG_NOSIGNAL:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h
HAVE_NETDB_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h
HAVE_NETINET_IF_ETHER_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h
HAVE_NETINET_IN_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h
HAVE_NETINET_TCP_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h
HAVE_NET_IF_H:INTERNAL=1
//Have function nl_langinfo
HAVE_NL_LANGINFO:INTERNAL=1
//Result of TRY_COMPILE
HAVE_OFF_T:INTERNAL=TRUE
//Have function openat
HAVE_OPENAT:INTERNAL=1
//Have include openssl/crypto.h
HAVE_OPENSSL_CRYPTO_H:INTERNAL=1
//Have include openssl/err.h
HAVE_OPENSSL_ERR_H:INTERNAL=1
//Have include openssl/pem.h
HAVE_OPENSSL_PEM_H:INTERNAL=1
//Have include openssl/rand.h
HAVE_OPENSSL_RAND_H:INTERNAL=1
//Have include openssl/rsa.h
HAVE_OPENSSL_RSA_H:INTERNAL=1
//Have include openssl/ssl.h
HAVE_OPENSSL_SSL_H:INTERNAL=1
//Have include openssl/x509.h
HAVE_OPENSSL_X509_H:INTERNAL=1
//Curl test 
HAVE_O_NONBLOCK:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h
HAVE_PATHS_H:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;pem.h
HAVE_PEM_H:INTERNAL=
//Have symbol perror
HAVE_PERROR:INTERNAL=1
//Result of TRY_COMPILE
HAVE_PID_T:INTERNAL=TRUE
//Have symbol pipe
HAVE_PIPE:INTERNAL=1
//Have symbol poll
HAVE_POLL:INTERNAL=1
//Test HAVE_POLL_FINE
HAVE_POLL_FINE:INTERNAL=1
//Result of TRY_COMPILE
HAVE_POLL_FINE_COMPILED:INTERNAL=TRUE
//Result of TRY_RUN
HAVE_POLL_FINE_EXITCODE:INTERNAL=0
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h
HAVE_POLL_H:INTERNAL=1
//Have function posix_spawnp
HAVE_POSIX_SPAWNP:INTERNAL=1
//Curl test 
HAVE_POSIX_STRERROR_R:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;process.h
HAVE_PROCESS_H:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h
HAVE_PTHREAD_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h
HAVE_PWD_H:INTERNAL=1
//Have symbol RAND_egd
HAVE_RAND_EGD:INTERNAL=
//Have symbol RAND_screen
HAVE_RAND_SCREEN:INTERNAL=
//Have symbol RAND_status
HAVE_RAND_STATUS:INTERNAL=
//Test HAVE_READDIR_R
HAVE_READDIR_R:INTERNAL=1
//Have function readlink
HAVE_READLINK:INTERNAL=1
//Test HAVE_READLINKAT
HAVE_READLINKAT:INTERNAL=1
//Have function readpassphrase
HAVE_READPASSPHRASE:INTERNAL=
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;readpassphrase.h
HAVE_READPASSPHRASE_H:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h
HAVE_REGEX_H:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;rsa.h
HAVE_RSA_H:INTERNAL=
//Have symbol select
HAVE_SELECT:INTERNAL=1
//Have function setenv
HAVE_SETENV:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h
HAVE_SETJMP_H:INTERNAL=1
//Have symbol setmode
HAVE_SETMODE:INTERNAL=
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=1
//Have symbol setsockopt
HAVE_SETSOCKOPT:INTERNAL=1
//Curl test 
HAVE_SETSOCKOPT_SO_NONBLOCK:INTERNAL=
//Have symbol setvbuf
HAVE_SETVBUF:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h
HAVE_SGTTY_H:INTERNAL=1
//Have symbol sigaction
HAVE_SIGACTION:INTERNAL=1
//Have symbol siginterrupt
HAVE_SIGINTERRUPT:INTERNAL=1
//Have symbol signal
HAVE_SIGNAL_FUNC:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have symbol SIGALRM
HAVE_SIGNAL_MACRO:INTERNAL=1
//Have symbol sigsetjmp
HAVE_SIGSETJMP:INTERNAL=1
//Test HAVE_SIG_ATOMIC_T_NOT_VOLATILE
HAVE_SIG_ATOMIC_T_NOT_VOLATILE:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SIZEOF_CURL_OFF_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_OFF_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_SIG_ATOMIC_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_SIZE_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_SSIZE_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_STRUCT_SOCKADDR_STORAGE:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_TIME_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_WCHAR_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZE_T:INTERNAL=TRUE
//Test HAVE_SOCKADDR_IN6_SIN6_ADDR
HAVE_SOCKADDR_IN6_SIN6_ADDR:INTERNAL=1
//Test HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID
HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID:INTERNAL=1
//Have symbol socket
HAVE_SOCKET:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h;stdint.h;sockio.h
HAVE_SOCKIO_H:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h
HAVE_SPAWN_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SSIZE_T:INTERNAL=TRUE
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;ssl.h
HAVE_SSL_H:INTERNAL=
//Have function statfs
HAVE_STATFS:INTERNAL=1
//Have function statvfs
HAVE_STATVFS:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h
HAVE_STDARG_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h
HAVE_STDBOOL_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have symbol strcasecmp
HAVE_STRCASECMP:INTERNAL=1
//Have symbol strcmpi
HAVE_STRCMPI:INTERNAL=
//Have function strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=1
//Have symbol stricmp
HAVE_STRICMP:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h
HAVE_STRINGS_H:INTERNAL=1
//Have symbol strlcat
HAVE_STRLCAT:INTERNAL=
//Have symbol strncmpi
HAVE_STRNCMPI:INTERNAL=
//Have function strncpy_s
HAVE_STRNCPY_S:INTERNAL=
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;stropts.h
HAVE_STROPTS_H:INTERNAL=
//Have symbol strstr
HAVE_STRSTR:INTERNAL=1
//Have symbol strtok_r
HAVE_STRTOK_R:INTERNAL=1
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Test HAVE_STRUCT_STATFS_F_NAMEMAX
HAVE_STRUCT_STATFS_F_NAMEMAX:INTERNAL=
//Test HAVE_STRUCT_STATVFS_F_IOSIZE
HAVE_STRUCT_STATVFS_F_IOSIZE:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_BIRTHTIME
HAVE_STRUCT_STAT_ST_BIRTHTIME:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC
HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_BLKSIZE
HAVE_STRUCT_STAT_ST_BLKSIZE:INTERNAL=1
//Test HAVE_STRUCT_STAT_ST_FLAGS
HAVE_STRUCT_STAT_ST_FLAGS:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIME_N
HAVE_STRUCT_STAT_ST_MTIME_N:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIME_USEC
HAVE_STRUCT_STAT_ST_MTIME_USEC:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC:INTERNAL=1
//Test HAVE_STRUCT_STAT_ST_UMTIME
HAVE_STRUCT_STAT_ST_UMTIME:INTERNAL=
//Test HAVE_STRUCT_TIMEVAL
HAVE_STRUCT_TIMEVAL:INTERNAL=1
//Test HAVE_STRUCT_TM_TM_GMTOFF
HAVE_STRUCT_TM_TM_GMTOFF:INTERNAL=1
//Test HAVE_STRUCT_TM___TM_GMTOFF
HAVE_STRUCT_TM___TM_GMTOFF:INTERNAL=
//Test HAVE_STRUCT_VFSCONF
HAVE_STRUCT_VFSCONF:INTERNAL=
//Test HAVE_STRUCT_XVFSCONF
HAVE_STRUCT_XVFSCONF:INTERNAL=
//Have function symlink
HAVE_SYMLINK:INTERNAL=1
//Test HAVE_SYSCALL_GETRANDOM
HAVE_SYSCALL_GETRANDOM:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/acl.h
HAVE_SYS_ACL_H:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h
HAVE_SYS_CDEFS_H:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/extattr.h
HAVE_SYS_EXTATTR_H:INTERNAL=
//Have includes stdio.h;inttypes.h;sys/filio.h
HAVE_SYS_FILIO_H:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/mkdev.h
HAVE_SYS_MKDEV_H:INTERNAL=
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/mount.h
HAVE_SYS_MOUNT_H:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h
HAVE_SYS_POLL_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/richacl.h
HAVE_SYS_RICHACL_H:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h
HAVE_SYS_SELECT_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h
HAVE_SYS_SOCKET_H:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/sockio.h
HAVE_SYS_SOCKIO_H:INTERNAL=
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h
HAVE_SYS_STATFS_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h
HAVE_SYS_STATVFS_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/sysctl.h
HAVE_SYS_SYSCTL_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h
HAVE_SYS_SYSMACROS_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h
HAVE_SYS_UN_H:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/utime.h
HAVE_SYS_UTIME_H:INTERNAL=
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h;stdint.h;sys/utsname.h
HAVE_SYS_UTSNAME_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h
HAVE_SYS_VFS_H:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h
HAVE_SYS_WAIT_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h
HAVE_SYS_XATTR_H:INTERNAL=1
//Have symbol tcgetattr
HAVE_TCGETATTR:INTERNAL=1
//Have symbol tcsetattr
HAVE_TCSETATTR:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h
HAVE_TERMIOS_H:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h
HAVE_TERMIO_H:INTERNAL=1
//Have function timegm
HAVE_TIMEGM:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h
HAVE_TIME_H:INTERNAL=1
//Have function tzset
HAVE_TZSET:INTERNAL=1
//Result of TRY_COMPILE
HAVE_UID_T:INTERNAL=TRUE
//Have symbol uname
HAVE_UNAME:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have function unlinkat
HAVE_UNLINKAT:INTERNAL=1
//Have symbol unsetenv
HAVE_UNSETENV:INTERNAL=1
//Have symbol usleep
HAVE_USLEEP:INTERNAL=1
//Have symbol utime
HAVE_UTIME:INTERNAL=1
//Have function utimensat
HAVE_UTIMENSAT:INTERNAL=1
//Have function utimes
HAVE_UTIMES:INTERNAL=1
//Have include stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h
HAVE_UTIME_H:INTERNAL=1
//Curl test 
HAVE_VARIADIC_MACROS_C99:INTERNAL=1
//Curl test 
HAVE_VARIADIC_MACROS_GCC:INTERNAL=1
//Have function vfork
HAVE_VFORK:INTERNAL=1
//Have function vprintf
HAVE_VPRINTF:INTERNAL=1
//Have function wcrtomb
HAVE_WCRTOMB:INTERNAL=1
//Have function wcscmp
HAVE_WCSCMP:INTERNAL=1
//Have function wcscpy
HAVE_WCSCPY:INTERNAL=1
//Have function wcslen
HAVE_WCSLEN:INTERNAL=1
//Have function wctomb
HAVE_WCTOMB:INTERNAL=1
//Have include sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h
HAVE_WCTYPE_H:INTERNAL=1
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h;wincrypt.h
HAVE_WINCRYPT_H:INTERNAL=
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h;windows.h
HAVE_WINDOWS_H:INTERNAL=
//Have includes sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h;winioctl.h
HAVE_WINIOCTL_H:INTERNAL=
//Have function wmemcmp
HAVE_WMEMCMP:INTERNAL=1
//Have function wmemcpy
HAVE_WMEMCPY:INTERNAL=1
//Have function wmemmove
HAVE_WMEMMOVE:INTERNAL=1
//Result of TRY_COMPILE
HAVE_WORDS_BIGENDIAN:INTERNAL=TRUE
//Test HAVE_WORKING_EXT2_IOC_GETFLAGS
HAVE_WORKING_EXT2_IOC_GETFLAGS:INTERNAL=
//Test HAVE_WORKING_FS_IOC_GETFLAGS
HAVE_WORKING_FS_IOC_GETFLAGS:INTERNAL=1
//Have includes stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;x509.h
HAVE_X509_H:INTERNAL=
//Have function _ctime64_s
HAVE__CTIME64_S:INTERNAL=
//Have function _fseeki64
HAVE__FSEEKI64:INTERNAL=
//Have function _get_timezone
HAVE__GET_TIMEZONE:INTERNAL=
//Have function _gmtime64_s
HAVE__GMTIME64_S:INTERNAL=
//Have function _localtime64_s
HAVE__LOCALTIME64_S:INTERNAL=
//Have function _mkgmtime64
HAVE__MKGMTIME64:INTERNAL=
//Have symbol _strtoi64
HAVE__STRTOI64:INTERNAL=
//ADVANCED property for variable: HGCOMMAND
HGCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HG_EXECUTABLE
HG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HTTP_ONLY
HTTP_ONLY-ADVANCED:INTERNAL=1
//disables all protocols except HTTP (This overrides all CURL_DISABLE_*
// options)
HTTP_ONLY:INTERNAL=OFF
//CHECK_TYPE_SIZE: sizeof(id_t)
ID_T:INTERNAL=4
//ADVANCED property for variable: JAVACOMMAND
JAVACOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_IDLJ_EXECUTABLE
Java_IDLJ_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_JARSIGNER_EXECUTABLE
Java_JARSIGNER_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_JAR_EXECUTABLE
Java_JAR_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_JAVAC_EXECUTABLE
Java_JAVAC_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_JAVADOC_EXECUTABLE
Java_JAVADOC_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_JAVAH_EXECUTABLE
Java_JAVAH_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Java_JAVA_EXECUTABLE
Java_JAVA_EXECUTABLE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
KWSYS_CXX_HAS_BACKTRACE_COMPILED:INTERNAL=TRUE
//Have include cxxabi.h
KWSYS_CXX_HAS_CXXABIH:INTERNAL=1
//Result of TRY_COMPILE
KWSYS_CXX_HAS_CXXABI_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_DLADDR_COMPILED:INTERNAL=TRUE
//Have include dlfcn.h
KWSYS_CXX_HAS_DLFCNH:INTERNAL=1
//Result of TRY_COMPILE
KWSYS_CXX_HAS_ENVIRON_IN_STDLIB_H_COMPILED:INTERNAL=FALSE
//Have include execinfo.h
KWSYS_CXX_HAS_EXECINFOH:INTERNAL=1
//Result of TRY_COMPILE
KWSYS_CXX_HAS_EXT_STDIO_FILEBUF_H_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_GETLOADAVG_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_RLIMIT64_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_SETENV_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_UNSETENV_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_UTIMENSAT_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_HAS_UTIMES_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_CXX_STAT_HAS_ST_MTIMESPEC_COMPILED:INTERNAL=FALSE
//Result of TRY_COMPILE
KWSYS_CXX_STAT_HAS_ST_MTIM_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_C_HAS_CLOCK_GETTIME_MONOTONIC_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_C_HAS_PTRDIFF_T_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_C_HAS_SSIZE_T_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
KWSYS_STL_HAS_WSTRING_COMPILED:INTERNAL=TRUE
//Have include sys/types.h;ifaddrs.h
KWSYS_SYS_HAS_IFADDRS_H:INTERNAL=1
//Where to put the libraries for CMake
LIBRARY_OUTPUT_PATH:INTERNAL=
//Test MAJOR_IN_MKDEV
MAJOR_IN_MKDEV:INTERNAL=
//Test MAJOR_IN_SYSMACROS
MAJOR_IN_SYSMACROS:INTERNAL=1
//ADVANCED property for variable: MAKECOMMAND
MAKECOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MEMORYCHECK_COMMAND
MEMORYCHECK_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MEMORYCHECK_SUPPRESSIONS_FILE
MEMORYCHECK_SUPPRESSIONS_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MINGW_CC_LINUX2WIN_EXECUTABLE
MINGW_CC_LINUX2WIN_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MINGW_CXX_LINUX2WIN_EXECUTABLE
MINGW_CXX_LINUX2WIN_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MINGW_RC_LINUX2WIN_EXECUTABLE
MINGW_RC_LINUX2WIN_EXECUTABLE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(mode_t)
MODE_T:INTERNAL=4
NCURSES_CFLAGS:INTERNAL=-D_DEFAULT_SOURCE;-D_XOPEN_SOURCE=600
NCURSES_CFLAGS_I:INTERNAL=
NCURSES_CFLAGS_OTHER:INTERNAL=-D_DEFAULT_SOURCE;-D_XOPEN_SOURCE=600
NCURSES_FOUND:INTERNAL=1
NCURSES_INCLUDEDIR:INTERNAL=/usr/include
NCURSES_INCLUDE_DIRS:INTERNAL=
NCURSES_LDFLAGS:INTERNAL=-Wl,-Bsymbolic-functions;-lncurses;-ltinfo
NCURSES_LDFLAGS_OTHER:INTERNAL=-Wl,-Bsymbolic-functions
NCURSES_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
NCURSES_LIBRARIES:INTERNAL=ncurses;tinfo
NCURSES_LIBRARY_DIRS:INTERNAL=
NCURSES_LIBS:INTERNAL=
NCURSES_LIBS_L:INTERNAL=
NCURSES_LIBS_OTHER:INTERNAL=
NCURSES_LIBS_PATHS:INTERNAL=
NCURSES_MODULE_NAME:INTERNAL=ncurses
NCURSES_PREFIX:INTERNAL=/usr
NCURSES_STATIC_CFLAGS:INTERNAL=-D_DEFAULT_SOURCE;-D_XOPEN_SOURCE=600
NCURSES_STATIC_CFLAGS_I:INTERNAL=
NCURSES_STATIC_CFLAGS_OTHER:INTERNAL=-D_DEFAULT_SOURCE;-D_XOPEN_SOURCE=600
NCURSES_STATIC_INCLUDE_DIRS:INTERNAL=
NCURSES_STATIC_LDFLAGS:INTERNAL=-Wl,-Bsymbolic-functions;-lncurses;-ltinfo;-ldl
NCURSES_STATIC_LDFLAGS_OTHER:INTERNAL=-Wl,-Bsymbolic-functions
NCURSES_STATIC_LIBDIR:INTERNAL=
NCURSES_STATIC_LIBRARIES:INTERNAL=ncurses;tinfo;dl
NCURSES_STATIC_LIBRARY_DIRS:INTERNAL=
NCURSES_STATIC_LIBS:INTERNAL=
NCURSES_STATIC_LIBS_L:INTERNAL=
NCURSES_STATIC_LIBS_OTHER:INTERNAL=
NCURSES_STATIC_LIBS_PATHS:INTERNAL=
NCURSES_VERSION:INTERNAL=6.2.20200212
NCURSES_ncurses_INCLUDEDIR:INTERNAL=
NCURSES_ncurses_LIBDIR:INTERNAL=
NCURSES_ncurses_PREFIX:INTERNAL=
NCURSES_ncurses_VERSION:INTERNAL=
//Have library c
NOT_NEED_LIBNSL:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(off_t)
OFF_T:INTERNAL=8
//ADVANCED property for variable: OPENSSL_CRYPTO_LIBRARY
OPENSSL_CRYPTO_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_INCLUDE_DIR
OPENSSL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_SSL_LIBRARY
OPENSSL_SSL_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: P4COMMAND
P4COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: P4D_EXECUTABLE
P4D_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: P4_EXECUTABLE
P4_EXECUTABLE-ADVANCED:INTERNAL=1
//Enable picky compiler options
PICKY_COMPILER:INTERNAL=OFF
//CHECK_TYPE_SIZE: sizeof(pid_t)
PID_T:INTERNAL=4
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//Choose what library should provide POSIX regular expression support
POSIX_REGEX_LIB:INTERNAL=
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: RANDOM_FILE
RANDOM_FILE-ADVANCED:INTERNAL=1
//Curl test 
RETSIGTYPE_TEST:INTERNAL=1
//Test SAFE_TO_DEFINE_EXTENSIONS
SAFE_TO_DEFINE_EXTENSIONS:INTERNAL=1
//ADVANCED property for variable: SDCC_EXECUTABLE
SDCC_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SITE
SITE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(curl_off_t)
SIZEOF_CURL_OFF_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(off_t)
SIZEOF_OFF_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(sig_atomic_t)
SIZEOF_SIG_ATOMIC_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(size_t)
SIZEOF_SIZE_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(ssize_t)
SIZEOF_SSIZE_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(struct sockaddr_storage)
SIZEOF_STRUCT_SOCKADDR_STORAGE:INTERNAL=128
//CHECK_TYPE_SIZE: sizeof(time_t)
SIZEOF_TIME_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(wchar_t)
SIZEOF_WCHAR_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(size_t)
SIZE_T:INTERNAL=8
//ADVANCED property for variable: SLURM_SBATCH_COMMAND
SLURM_SBATCH_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SLURM_SRUN_COMMAND
SLURM_SRUN_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SPHINX_FLAGS
SPHINX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SPHINX_TEXT
SPHINX_TEXT-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(ssize_t)
SSIZE_T:INTERNAL=8
//Curl test 
STDC_HEADERS:INTERNAL=1
//ADVANCED property for variable: SVNCOMMAND
SVNCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Subversion_SVN_EXECUTABLE
Subversion_SVN_EXECUTABLE-ADVANCED:INTERNAL=1
//Curl test 
TIME_WITH_SYS_TIME:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(uid_t)
UID_T:INTERNAL=4
//No curl Windows LDAP
USE_WIN32_LDAP:INTERNAL=OFF
//Result of TEST_BIG_ENDIAN
WORDS_BIGENDIAN:INTERNAL=0
//_FILE_OFFSET_BITS macro needed for large files
_FILE_OFFSET_BITS:INTERNAL=
_OPENSSL_CFLAGS:INTERNAL=
_OPENSSL_CFLAGS_I:INTERNAL=
_OPENSSL_CFLAGS_OTHER:INTERNAL=
_OPENSSL_FOUND:INTERNAL=1
_OPENSSL_INCLUDEDIR:INTERNAL=/usr/include
_OPENSSL_INCLUDE_DIRS:INTERNAL=
_OPENSSL_LDFLAGS:INTERNAL=-lssl;-lcrypto
_OPENSSL_LDFLAGS_OTHER:INTERNAL=
_OPENSSL_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
_OPENSSL_LIBRARIES:INTERNAL=ssl;crypto
_OPENSSL_LIBRARY_DIRS:INTERNAL=
_OPENSSL_LIBS:INTERNAL=
_OPENSSL_LIBS_L:INTERNAL=
_OPENSSL_LIBS_OTHER:INTERNAL=
_OPENSSL_LIBS_PATHS:INTERNAL=
_OPENSSL_MODULE_NAME:INTERNAL=openssl
_OPENSSL_PREFIX:INTERNAL=/usr
_OPENSSL_STATIC_CFLAGS:INTERNAL=
_OPENSSL_STATIC_CFLAGS_I:INTERNAL=
_OPENSSL_STATIC_CFLAGS_OTHER:INTERNAL=
_OPENSSL_STATIC_INCLUDE_DIRS:INTERNAL=
_OPENSSL_STATIC_LDFLAGS:INTERNAL=-lssl;-lcrypto;-ldl;-pthread
_OPENSSL_STATIC_LDFLAGS_OTHER:INTERNAL=-pthread
_OPENSSL_STATIC_LIBDIR:INTERNAL=
_OPENSSL_STATIC_LIBRARIES:INTERNAL=ssl;crypto;dl
_OPENSSL_STATIC_LIBRARY_DIRS:INTERNAL=
_OPENSSL_STATIC_LIBS:INTERNAL=
_OPENSSL_STATIC_LIBS_L:INTERNAL=
_OPENSSL_STATIC_LIBS_OTHER:INTERNAL=
_OPENSSL_STATIC_LIBS_PATHS:INTERNAL=
_OPENSSL_VERSION:INTERNAL=1.1.1f
_OPENSSL_openssl_INCLUDEDIR:INTERNAL=
_OPENSSL_openssl_LIBDIR:INTERNAL=
_OPENSSL_openssl_PREFIX:INTERNAL=
_OPENSSL_openssl_VERSION:INTERNAL=
//Result of TRY_COMPILE
__WITHOUT_FILE_OFFSET_BITS_64:INTERNAL=TRUE
__pkg_config_arguments_NCURSES:INTERNAL=QUIET;ncurses
__pkg_config_arguments__OPENSSL:INTERNAL=QUIET;openssl
__pkg_config_checked_NCURSES:INTERNAL=1
__pkg_config_checked__OPENSSL:INTERNAL=1
//Result of TRY_COMPILE
__stub:INTERNAL=FALSE
//ADVANCED property for variable: pkgcfg_lib_NCURSES_ncurses
pkgcfg_lib_NCURSES_ncurses-ADVANCED:INTERNAL=1
//ADVANCED property for variable: pkgcfg_lib_NCURSES_tinfo
pkgcfg_lib_NCURSES_tinfo-ADVANCED:INTERNAL=1
//ADVANCED property for variable: pkgcfg_lib__OPENSSL_crypto
pkgcfg_lib__OPENSSL_crypto-ADVANCED:INTERNAL=1
//ADVANCED property for variable: pkgcfg_lib__OPENSSL_ssl
pkgcfg_lib__OPENSSL_ssl-ADVANCED:INTERNAL=1
prefix_result:INTERNAL=/usr/lib/x86_64-linux-gnu
//Test run_inlines_hidden_test
run_inlines_hidden_test:INTERNAL=1
//Test run_pic_test
run_pic_test:INTERNAL=1

Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../CMakeFiles/CMakeOutput.log":
----------------------------------------------------------------
The system is: Linux - 5.8.0-45-generic - x86_64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is GNU, found in "/home/zachary/oss/labs/lab-08/build/CMakeFiles/3.16.3/CompilerIdC/a.out"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"

The CXX compiler identification is GNU, found in "/home/zachary/oss/labs/lab-08/build/CMakeFiles/3.16.3/CompilerIdCXX/a.out"

Determining if the C compiler works passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_08d9d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_08d9d.dir/build.make CMakeFiles/cmTC_08d9d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_08d9d.dir/testCCompiler.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_08d9d.dir/testCCompiler.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_08d9d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_08d9d.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_08d9d.dir/testCCompiler.c.o  -o cmTC_08d9d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Detecting C compiler ABI info compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_55bdb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_55bdb.dir/build.make CMakeFiles/cmTC_55bdb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o
/usr/bin/cc   -v -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccoP0iYN.s
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
 as -v --64 -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o /tmp/ccoP0iYN.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
Linking C executable cmTC_55bdb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_55bdb.dir/link.txt --verbose=1
/usr/bin/cc     -v CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o  -o cmTC_55bdb 
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_55bdb' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cchPEwWc.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_55bdb /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_55bdb' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Parsed C implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==&gt; [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==&gt; [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==&gt; [/usr/include]
  implicit include dirs: [/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make cmTC_55bdb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_55bdb.dir/build.make CMakeFiles/cmTC_55bdb.dir/build]
  ignore line: [make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp']
  ignore line: [Building C object CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o]
  ignore line: [/usr/bin/cc   -v -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccoP0iYN.s]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include &lt;...&gt; search starts here:]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [ as -v --64 -o CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o /tmp/ccoP0iYN.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking C executable cmTC_55bdb]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_55bdb.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/cc     -v CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o  -o cmTC_55bdb ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_55bdb' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cchPEwWc.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_55bdb /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==&gt; ignore
    arg [-plugin] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==&gt; ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==&gt; ignore
    arg [-plugin-opt=-fresolution=/tmp/cchPEwWc.res] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [--build-id] ==&gt; ignore
    arg [--eh-frame-hdr] ==&gt; ignore
    arg [-m] ==&gt; ignore
    arg [elf_x86_64] ==&gt; ignore
    arg [--hash-style=gnu] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-dynamic-linker] ==&gt; ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==&gt; ignore
    arg [-pie] ==&gt; ignore
    arg [-znow] ==&gt; ignore
    arg [-zrelro] ==&gt; ignore
    arg [-o] ==&gt; ignore
    arg [cmTC_55bdb] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==&gt; ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==&gt; dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==&gt; dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==&gt; dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==&gt; dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_55bdb.dir/CMakeCCompilerABI.c.o] ==&gt; ignore
    arg [-lgcc] ==&gt; lib [gcc]
    arg [--push-state] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [--pop-state] ==&gt; ignore
    arg [-lc] ==&gt; lib [c]
    arg [-lgcc] ==&gt; lib [gcc]
    arg [--push-state] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [--pop-state] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==&gt; ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==&gt; [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==&gt; [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==&gt; [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; [/usr/lib]
  implicit libs: [gcc;gcc_s;c;gcc;gcc_s]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Determining if the CXX compiler works passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_81861/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_81861.dir/build.make CMakeFiles/cmTC_81861.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_81861.dir/testCXXCompiler.cxx.o
/usr/bin/c++     -o CMakeFiles/cmTC_81861.dir/testCXXCompiler.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
Linking CXX executable cmTC_81861
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_81861.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_81861.dir/testCXXCompiler.cxx.o  -o cmTC_81861 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9a7e5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9a7e5.dir/build.make CMakeFiles/cmTC_9a7e5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o
/usr/bin/c++    -v -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccZLd1WL.s
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /usr/include/c++/9
 /usr/include/x86_64-linux-gnu/c++/9
 /usr/include/c++/9/backward
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 as -v --64 -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccZLd1WL.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
Linking CXX executable cmTC_9a7e5
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9a7e5.dir/link.txt --verbose=1
/usr/bin/c++      -v CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_9a7e5 
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_9a7e5' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cclriZQb.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_9a7e5 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_9a7e5' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Parsed CXX implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/include/c++/9]
    add: [/usr/include/x86_64-linux-gnu/c++/9]
    add: [/usr/include/c++/9/backward]
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/include/c++/9] ==&gt; [/usr/include/c++/9]
  collapse include dir [/usr/include/x86_64-linux-gnu/c++/9] ==&gt; [/usr/include/x86_64-linux-gnu/c++/9]
  collapse include dir [/usr/include/c++/9/backward] ==&gt; [/usr/include/c++/9/backward]
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==&gt; [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==&gt; [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==&gt; [/usr/include]
  implicit include dirs: [/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed CXX implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make cmTC_9a7e5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9a7e5.dir/build.make CMakeFiles/cmTC_9a7e5.dir/build]
  ignore line: [make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp']
  ignore line: [Building CXX object CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o]
  ignore line: [/usr/bin/c++    -v -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/c++]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccZLd1WL.s]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include &lt;...&gt; search starts here:]
  ignore line: [ /usr/include/c++/9]
  ignore line: [ /usr/include/x86_64-linux-gnu/c++/9]
  ignore line: [ /usr/include/c++/9/backward]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ as -v --64 -o CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccZLd1WL.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking CXX executable cmTC_9a7e5]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9a7e5.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/c++      -v CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_9a7e5 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/c++]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_9a7e5' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cclriZQb.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_9a7e5 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==&gt; ignore
    arg [-plugin] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==&gt; ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==&gt; ignore
    arg [-plugin-opt=-fresolution=/tmp/cclriZQb.res] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [--build-id] ==&gt; ignore
    arg [--eh-frame-hdr] ==&gt; ignore
    arg [-m] ==&gt; ignore
    arg [elf_x86_64] ==&gt; ignore
    arg [--hash-style=gnu] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-dynamic-linker] ==&gt; ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==&gt; ignore
    arg [-pie] ==&gt; ignore
    arg [-znow] ==&gt; ignore
    arg [-zrelro] ==&gt; ignore
    arg [-o] ==&gt; ignore
    arg [cmTC_9a7e5] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==&gt; ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==&gt; dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==&gt; dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==&gt; dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==&gt; dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_9a7e5.dir/CMakeCXXCompilerABI.cpp.o] ==&gt; ignore
    arg [-lstdc++] ==&gt; lib [stdc++]
    arg [-lm] ==&gt; lib [m]
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [-lgcc] ==&gt; lib [gcc]
    arg [-lc] ==&gt; lib [c]
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [-lgcc] ==&gt; lib [gcc]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==&gt; ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==&gt; [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==&gt; [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==&gt; [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; [/usr/lib]
  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Determining if compiler supports C11 _Thread_local passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b3c5b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b3c5b.dir/build.make CMakeFiles/cmTC_b3c5b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b3c5b.dir/cm_c11_thread_local.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_b3c5b.dir/cm_c11_thread_local.c.o   -c /home/zachary/cmake/Source/Checks/cm_c11_thread_local.c
Linking C executable cmTC_b3c5b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b3c5b.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_b3c5b.dir/cm_c11_thread_local.c.o  -o cmTC_b3c5b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if compiler supports needed C++17 constructs passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0e5d7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0e5d7.dir/build.make CMakeFiles/cmTC_0e5d7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_0e5d7.dir/cm_cxx17_check.cpp.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_0e5d7.dir/cm_cxx17_check.cpp.o -c /home/zachary/cmake/Source/Checks/cm_cxx17_check.cpp
Linking CXX executable cmTC_0e5d7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0e5d7.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_0e5d7.dir/cm_cxx17_check.cpp.o  -o cmTC_0e5d7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if compiler supports C++ make_unique passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8e0c8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8e0c8.dir/build.make CMakeFiles/cmTC_8e0c8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_8e0c8.dir/cm_cxx_make_unique.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_8e0c8.dir/cm_cxx_make_unique.cxx.o -c /home/zachary/cmake/Source/Checks/cm_cxx_make_unique.cxx
Linking CXX executable cmTC_8e0c8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8e0c8.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_8e0c8.dir/cm_cxx_make_unique.cxx.o  -o cmTC_8e0c8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if compiler supports C++ filesystem passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7adaa/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7adaa.dir/build.make CMakeFiles/cmTC_7adaa.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_7adaa.dir/cm_cxx_filesystem.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_7adaa.dir/cm_cxx_filesystem.cxx.o -c /home/zachary/cmake/Source/Checks/cm_cxx_filesystem.cxx
Linking CXX executable cmTC_7adaa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7adaa.dir/link.txt --verbose=1
/usr/bin/c++       CMakeFiles/cmTC_7adaa.dir/cm_cxx_filesystem.cxx.o  -o cmTC_7adaa 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the unsetenv exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dcf06/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_dcf06.dir/build.make CMakeFiles/cmTC_dcf06.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dcf06.dir/CheckSymbolExists.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_dcf06.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_dcf06
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dcf06.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_dcf06.dir/CheckSymbolExists.c.o  -o cmTC_dcf06 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdlib.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef unsetenv
  return ((int*)(&amp;unsetenv))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the include file pthread.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_104ea/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_104ea.dir/build.make CMakeFiles/cmTC_104ea.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_104ea.dir/CheckIncludeFile.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_104ea.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_104ea
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_104ea.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_104ea.dir/CheckIncludeFile.c.o  -o cmTC_104ea 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function pthread_create exists in the pthread passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_57f76/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_57f76.dir/build.make CMakeFiles/cmTC_57f76.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_57f76.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -std=gnu11 -o CMakeFiles/cmTC_57f76.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_57f76
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_57f76.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTC_57f76.dir/CheckFunctionExists.c.o  -o cmTC_57f76  -lpthread 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Checking whether wstring is available compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_acc92/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_acc92.dir/build.make CMakeFiles/cmTC_acc92.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_acc92.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_STL_HAS_WSTRING  -std=gnu++17 -o CMakeFiles/cmTC_acc92.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_acc92
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_acc92.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_acc92.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_acc92 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether C compiler has ptrdiff_t in stddef.h compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fa558/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fa558.dir/build.make CMakeFiles/cmTC_fa558.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fa558.dir/kwsysPlatformTestsC.c.o
/usr/bin/cc -DTEST_KWSYS_C_HAS_PTRDIFF_T  -std=gnu11 -o CMakeFiles/cmTC_fa558.dir/kwsysPlatformTestsC.c.o   -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsC.c
Linking C executable cmTC_fa558
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fa558.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_fa558.dir/kwsysPlatformTestsC.c.o  -o cmTC_fa558 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether C compiler has ssize_t in unistd.h compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0aadd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0aadd.dir/build.make CMakeFiles/cmTC_0aadd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0aadd.dir/kwsysPlatformTestsC.c.o
/usr/bin/cc -DTEST_KWSYS_C_HAS_SSIZE_T  -std=gnu11 -o CMakeFiles/cmTC_0aadd.dir/kwsysPlatformTestsC.c.o   -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsC.c
Linking C executable cmTC_0aadd
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0aadd.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_0aadd.dir/kwsysPlatformTestsC.c.o  -o cmTC_0aadd 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether C compiler has clock_gettime compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_129cb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_129cb.dir/build.make CMakeFiles/cmTC_129cb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_129cb.dir/kwsysPlatformTestsC.c.o
/usr/bin/cc -DTEST_KWSYS_C_HAS_CLOCK_GETTIME_MONOTONIC  -std=gnu11 -o CMakeFiles/cmTC_129cb.dir/kwsysPlatformTestsC.c.o   -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsC.c
Linking C executable cmTC_129cb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_129cb.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_129cb.dir/kwsysPlatformTestsC.c.o  -o cmTC_129cb 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether CXX compiler has setenv compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b0899/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b0899.dir/build.make CMakeFiles/cmTC_b0899.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_b0899.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_SETENV  -std=gnu++17 -o CMakeFiles/cmTC_b0899.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_b0899
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b0899.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_b0899.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_b0899 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether CXX compiler has unsetenv compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_085b1/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_085b1.dir/build.make CMakeFiles/cmTC_085b1.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_085b1.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_UNSETENV  -std=gnu++17 -o CMakeFiles/cmTC_085b1.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_085b1
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_085b1.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_085b1.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_085b1 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether CXX compiler has utimes compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6922e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6922e.dir/build.make CMakeFiles/cmTC_6922e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_6922e.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_UTIMES  -std=gnu++17 -o CMakeFiles/cmTC_6922e.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_6922e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6922e.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_6922e.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_6922e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether CXX compiler has utimensat compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_aacd2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_aacd2.dir/build.make CMakeFiles/cmTC_aacd2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_aacd2.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_UTIMENSAT  -std=gnu++17 -o CMakeFiles/cmTC_aacd2.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_aacd2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_aacd2.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_aacd2.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_aacd2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether CXX compiler struct stat has st_mtim member compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c9606/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c9606.dir/build.make CMakeFiles/cmTC_c9606.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_c9606.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_STAT_HAS_ST_MTIM  -std=gnu++17 -o CMakeFiles/cmTC_c9606.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_c9606
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c9606.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_c9606.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_c9606 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ifaddrs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d3f45/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d3f45.dir/build.make CMakeFiles/cmTC_d3f45.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d3f45.dir/KWSYS_SYS_HAS_IFADDRS_H.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_d3f45.dir/KWSYS_SYS_HAS_IFADDRS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/KWSYS_SYS_HAS_IFADDRS_H.c
Linking C executable cmTC_d3f45
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d3f45.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_d3f45.dir/KWSYS_SYS_HAS_IFADDRS_H.c.o  -o cmTC_d3f45 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Checking whether CXX compiler has rlimit64 compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fcc00/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fcc00.dir/build.make CMakeFiles/cmTC_fcc00.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_fcc00.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_RLIMIT64  -std=gnu++17 -o CMakeFiles/cmTC_fcc00.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_fcc00
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fcc00.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_fcc00.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_fcc00 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Determining if the include file execinfo.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_24cac/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_24cac.dir/build.make CMakeFiles/cmTC_24cac.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_24cac.dir/CheckIncludeFile.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_24cac.dir/CheckIncludeFile.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.cxx
Linking CXX executable cmTC_24cac
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_24cac.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_24cac.dir/CheckIncludeFile.cxx.o  -o cmTC_24cac 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Checking whether backtrace works with this C++ compiler compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1fe0d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1fe0d.dir/build.make CMakeFiles/cmTC_1fe0d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_1fe0d.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_BACKTRACE  -std=gnu++17 -o CMakeFiles/cmTC_1fe0d.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_1fe0d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1fe0d.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_1fe0d.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_1fe0d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Determining if the include file dlfcn.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7d780/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7d780.dir/build.make CMakeFiles/cmTC_7d780.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_7d780.dir/CheckIncludeFile.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_7d780.dir/CheckIncludeFile.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.cxx
Linking CXX executable cmTC_7d780
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7d780.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_7d780.dir/CheckIncludeFile.cxx.o  -o cmTC_7d780 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Checking whether dladdr works with this C++ compiler compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b6cc0/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b6cc0.dir/build.make CMakeFiles/cmTC_b6cc0.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_b6cc0.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_DLADDR  -std=gnu++17 -o CMakeFiles/cmTC_b6cc0.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_b6cc0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b6cc0.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_b6cc0.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_b6cc0  -ldl 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Determining if the include file cxxabi.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5d877/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5d877.dir/build.make CMakeFiles/cmTC_5d877.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_5d877.dir/CheckIncludeFile.cxx.o
/usr/bin/c++    -std=gnu++17 -o CMakeFiles/cmTC_5d877.dir/CheckIncludeFile.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.cxx
Linking CXX executable cmTC_5d877
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5d877.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_5d877.dir/CheckIncludeFile.cxx.o  -o cmTC_5d877 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Checking whether cxxabi works with this C++ compiler compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c2604/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c2604.dir/build.make CMakeFiles/cmTC_c2604.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_c2604.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_CXXABI  -std=gnu++17 -o CMakeFiles/cmTC_c2604.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_c2604
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c2604.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_c2604.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_c2604 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether CXX compiler has getloadavg compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3f5b4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3f5b4.dir/build.make CMakeFiles/cmTC_3f5b4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_3f5b4.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_GETLOADAVG  -std=gnu++17 -o CMakeFiles/cmTC_3f5b4.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_3f5b4
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3f5b4.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_3f5b4.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_3f5b4 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Checking whether &lt;ext/stdio_filebuf.h&gt; is available compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fa8fd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fa8fd.dir/build.make CMakeFiles/cmTC_fa8fd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_fa8fd.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_EXT_STDIO_FILEBUF_H  -std=gnu++17 -o CMakeFiles/cmTC_fa8fd.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTC_fa8fd
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fa8fd.dir/link.txt --verbose=1
/usr/bin/c++       -rdynamic CMakeFiles/cmTC_fa8fd.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTC_fa8fd 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test HAVE_SOCKADDR_IN6_SIN6_ADDR succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e11de/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e11de.dir/build.make CMakeFiles/cmTC_e11de.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e11de.dir/src.c.o
/usr/bin/cc   -w -DHAVE_SOCKADDR_IN6_SIN6_ADDR   -std=gnu11 -o CMakeFiles/cmTC_e11de.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_e11de
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e11de.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_SOCKADDR_IN6_SIN6_ADDR    CMakeFiles/cmTC_e11de.dir/src.c.o  -o cmTC_e11de 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

#include &lt;netinet/in.h&gt;

int main()
{
  (void)sizeof(((struct sockaddr_in6 *)0)-&gt;sin6_addr);
  return 0;
}

Performing C SOURCE FILE Test HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_343ce/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_343ce.dir/build.make CMakeFiles/cmTC_343ce.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_343ce.dir/src.c.o
/usr/bin/cc   -w -DHAVE_SOCKADDR_IN6_SIN6_SCOPE_ID   -std=gnu11 -o CMakeFiles/cmTC_343ce.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_343ce
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_343ce.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_SOCKADDR_IN6_SIN6_SCOPE_ID    CMakeFiles/cmTC_343ce.dir/src.c.o  -o cmTC_343ce 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

#include &lt;netinet/in.h&gt;

int main()
{
  (void)sizeof(((struct sockaddr_in6 *)0)-&gt;sin6_scope_id);
  return 0;
}

Determining if the function gethostbyname exists in the c passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_80316/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_80316.dir/build.make CMakeFiles/cmTC_80316.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_80316.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=gethostbyname   -std=gnu11 -o CMakeFiles/cmTC_80316.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_80316
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_80316.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=gethostbyname    CMakeFiles/cmTC_80316.dir/CheckFunctionExists.c.o  -o cmTC_80316  -lc 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function gethostname exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_de040/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_de040.dir/build.make CMakeFiles/cmTC_de040.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_de040.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=gethostname   -std=gnu11 -o CMakeFiles/cmTC_de040.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_de040
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_de040.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=gethostname    CMakeFiles/cmTC_de040.dir/CheckFunctionExists.c.o  -o cmTC_de040 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/crypto.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5590c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5590c.dir/build.make CMakeFiles/cmTC_5590c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5590c.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5590c.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_5590c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5590c.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_5590c.dir/CheckIncludeFile.c.o  -o cmTC_5590c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/err.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8f95e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8f95e.dir/build.make CMakeFiles/cmTC_8f95e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8f95e.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8f95e.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_8f95e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8f95e.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_8f95e.dir/CheckIncludeFile.c.o  -o cmTC_8f95e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/pem.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0a7b7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0a7b7.dir/build.make CMakeFiles/cmTC_0a7b7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0a7b7.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0a7b7.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_0a7b7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0a7b7.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_0a7b7.dir/CheckIncludeFile.c.o  -o cmTC_0a7b7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/rsa.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dd71c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_dd71c.dir/build.make CMakeFiles/cmTC_dd71c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dd71c.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_dd71c.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_dd71c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd71c.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_dd71c.dir/CheckIncludeFile.c.o  -o cmTC_dd71c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/ssl.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3a1fd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3a1fd.dir/build.make CMakeFiles/cmTC_3a1fd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3a1fd.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3a1fd.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_3a1fd
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3a1fd.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_3a1fd.dir/CheckIncludeFile.c.o  -o cmTC_3a1fd 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/x509.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a7852/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a7852.dir/build.make CMakeFiles/cmTC_a7852.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a7852.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a7852.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_a7852
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a7852.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_a7852.dir/CheckIncludeFile.c.o  -o cmTC_a7852 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file openssl/rand.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_708c1/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_708c1.dir/build.make CMakeFiles/cmTC_708c1.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_708c1.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_708c1.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_708c1
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_708c1.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_708c1.dir/CheckIncludeFile.c.o  -o cmTC_708c1 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_637f3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_637f3.dir/build.make CMakeFiles/cmTC_637f3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_637f3.dir/HAVE_INTTYPES_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_637f3.dir/HAVE_INTTYPES_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_INTTYPES_H.c
Linking C executable cmTC_637f3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_637f3.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_637f3.dir/HAVE_INTTYPES_H.c.o  -o cmTC_637f3 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b01d9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b01d9.dir/build.make CMakeFiles/cmTC_b01d9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b01d9.dir/HAVE_SYS_IOCTL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_b01d9.dir/HAVE_SYS_IOCTL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_IOCTL_H.c
Linking C executable cmTC_b01d9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b01d9.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_b01d9.dir/HAVE_SYS_IOCTL_H.c.o  -o cmTC_b01d9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_07832/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_07832.dir/build.make CMakeFiles/cmTC_07832.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_07832.dir/HAVE_SYS_PARAM_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_07832.dir/HAVE_SYS_PARAM_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_PARAM_H.c
Linking C executable cmTC_07832
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_07832.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_07832.dir/HAVE_SYS_PARAM_H.c.o  -o cmTC_07832 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1784b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1784b.dir/build.make CMakeFiles/cmTC_1784b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1784b.dir/HAVE_SYS_POLL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_1784b.dir/HAVE_SYS_POLL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_POLL_H.c
Linking C executable cmTC_1784b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1784b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_1784b.dir/HAVE_SYS_POLL_H.c.o  -o cmTC_1784b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_abb30/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_abb30.dir/build.make CMakeFiles/cmTC_abb30.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_abb30.dir/HAVE_SYS_RESOURCE_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_abb30.dir/HAVE_SYS_RESOURCE_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_RESOURCE_H.c
Linking C executable cmTC_abb30
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_abb30.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_abb30.dir/HAVE_SYS_RESOURCE_H.c.o  -o cmTC_abb30 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3763c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3763c.dir/build.make CMakeFiles/cmTC_3763c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3763c.dir/HAVE_SYS_SELECT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3763c.dir/HAVE_SYS_SELECT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SELECT_H.c
Linking C executable cmTC_3763c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3763c.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_3763c.dir/HAVE_SYS_SELECT_H.c.o  -o cmTC_3763c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5facc/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5facc.dir/build.make CMakeFiles/cmTC_5facc.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5facc.dir/HAVE_SYS_SOCKET_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5facc.dir/HAVE_SYS_SOCKET_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SOCKET_H.c
Linking C executable cmTC_5facc
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5facc.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_5facc.dir/HAVE_SYS_SOCKET_H.c.o  -o cmTC_5facc 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_503e7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_503e7.dir/build.make CMakeFiles/cmTC_503e7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_503e7.dir/HAVE_SYS_STAT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_503e7.dir/HAVE_SYS_STAT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_STAT_H.c
Linking C executable cmTC_503e7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_503e7.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_503e7.dir/HAVE_SYS_STAT_H.c.o  -o cmTC_503e7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f4fc2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f4fc2.dir/build.make CMakeFiles/cmTC_f4fc2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f4fc2.dir/HAVE_SYS_TIME_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_f4fc2.dir/HAVE_SYS_TIME_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_TIME_H.c
Linking C executable cmTC_f4fc2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f4fc2.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_f4fc2.dir/HAVE_SYS_TIME_H.c.o  -o cmTC_f4fc2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_727d7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_727d7.dir/build.make CMakeFiles/cmTC_727d7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_727d7.dir/HAVE_SYS_TYPES_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_727d7.dir/HAVE_SYS_TYPES_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_TYPES_H.c
Linking C executable cmTC_727d7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_727d7.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_727d7.dir/HAVE_SYS_TYPES_H.c.o  -o cmTC_727d7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0d781/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0d781.dir/build.make CMakeFiles/cmTC_0d781.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0d781.dir/HAVE_SYS_UIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0d781.dir/HAVE_SYS_UIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UIO_H.c
Linking C executable cmTC_0d781
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0d781.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_0d781.dir/HAVE_SYS_UIO_H.c.o  -o cmTC_0d781 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f646b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f646b.dir/build.make CMakeFiles/cmTC_f646b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f646b.dir/HAVE_SYS_UN_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_f646b.dir/HAVE_SYS_UN_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UN_H.c
Linking C executable cmTC_f646b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f646b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_f646b.dir/HAVE_SYS_UN_H.c.o  -o cmTC_f646b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2a5ce/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2a5ce.dir/build.make CMakeFiles/cmTC_2a5ce.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2a5ce.dir/HAVE_SYS_XATTR_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_2a5ce.dir/HAVE_SYS_XATTR_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_XATTR_H.c
Linking C executable cmTC_2a5ce
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2a5ce.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_2a5ce.dir/HAVE_SYS_XATTR_H.c.o  -o cmTC_2a5ce 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a037b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a037b.dir/build.make CMakeFiles/cmTC_a037b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a037b.dir/HAVE_ALLOCA_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a037b.dir/HAVE_ALLOCA_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_ALLOCA_H.c
Linking C executable cmTC_a037b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a037b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_a037b.dir/HAVE_ALLOCA_H.c.o  -o cmTC_a037b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_30c5b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_30c5b.dir/build.make CMakeFiles/cmTC_30c5b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_30c5b.dir/HAVE_ARPA_INET_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_30c5b.dir/HAVE_ARPA_INET_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_ARPA_INET_H.c
Linking C executable cmTC_30c5b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_30c5b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_30c5b.dir/HAVE_ARPA_INET_H.c.o  -o cmTC_30c5b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_893e6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_893e6.dir/build.make CMakeFiles/cmTC_893e6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_893e6.dir/HAVE_ARPA_TFTP_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_893e6.dir/HAVE_ARPA_TFTP_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_ARPA_TFTP_H.c
Linking C executable cmTC_893e6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_893e6.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_893e6.dir/HAVE_ARPA_TFTP_H.c.o  -o cmTC_893e6 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_edb87/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_edb87.dir/build.make CMakeFiles/cmTC_edb87.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_edb87.dir/HAVE_ERR_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_edb87.dir/HAVE_ERR_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_ERR_H.c
Linking C executable cmTC_edb87
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_edb87.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_edb87.dir/HAVE_ERR_H.c.o  -o cmTC_edb87 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_40376/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_40376.dir/build.make CMakeFiles/cmTC_40376.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_40376.dir/HAVE_ERRNO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_40376.dir/HAVE_ERRNO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_ERRNO_H.c
Linking C executable cmTC_40376
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_40376.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_40376.dir/HAVE_ERRNO_H.c.o  -o cmTC_40376 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fcbd9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fcbd9.dir/build.make CMakeFiles/cmTC_fcbd9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fcbd9.dir/HAVE_FCNTL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_fcbd9.dir/HAVE_FCNTL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_FCNTL_H.c
Linking C executable cmTC_fcbd9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fcbd9.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_fcbd9.dir/HAVE_FCNTL_H.c.o  -o cmTC_fcbd9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ff8a7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ff8a7.dir/build.make CMakeFiles/cmTC_ff8a7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ff8a7.dir/HAVE_IFADDRS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ff8a7.dir/HAVE_IFADDRS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IFADDRS_H.c
Linking C executable cmTC_ff8a7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ff8a7.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_ff8a7.dir/HAVE_IFADDRS_H.c.o  -o cmTC_ff8a7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d998e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d998e.dir/build.make CMakeFiles/cmTC_d998e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d998e.dir/HAVE_LIBGEN_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d998e.dir/HAVE_LIBGEN_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_LIBGEN_H.c
Linking C executable cmTC_d998e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d998e.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_d998e.dir/HAVE_LIBGEN_H.c.o  -o cmTC_d998e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ae776/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ae776.dir/build.make CMakeFiles/cmTC_ae776.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ae776.dir/HAVE_NET_IF_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ae776.dir/HAVE_NET_IF_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_NET_IF_H.c
Linking C executable cmTC_ae776
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ae776.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_ae776.dir/HAVE_NET_IF_H.c.o  -o cmTC_ae776 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3a780/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3a780.dir/build.make CMakeFiles/cmTC_3a780.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3a780.dir/HAVE_NETDB_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3a780.dir/HAVE_NETDB_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_NETDB_H.c
Linking C executable cmTC_3a780
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3a780.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_3a780.dir/HAVE_NETDB_H.c.o  -o cmTC_3a780 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7f5b3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7f5b3.dir/build.make CMakeFiles/cmTC_7f5b3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7f5b3.dir/HAVE_NETINET_IN_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_7f5b3.dir/HAVE_NETINET_IN_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_NETINET_IN_H.c
Linking C executable cmTC_7f5b3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7f5b3.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_7f5b3.dir/HAVE_NETINET_IN_H.c.o  -o cmTC_7f5b3 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2d978/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2d978.dir/build.make CMakeFiles/cmTC_2d978.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2d978.dir/HAVE_NETINET_TCP_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_2d978.dir/HAVE_NETINET_TCP_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_NETINET_TCP_H.c
Linking C executable cmTC_2d978
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2d978.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_2d978.dir/HAVE_NETINET_TCP_H.c.o  -o cmTC_2d978 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file linux/tcp.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f9957/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f9957.dir/build.make CMakeFiles/cmTC_f9957.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f9957.dir/CheckIncludeFile.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_f9957.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_f9957
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f9957.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_f9957.dir/CheckIncludeFile.c.o  -o cmTC_f9957 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8ea3d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8ea3d.dir/build.make CMakeFiles/cmTC_8ea3d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8ea3d.dir/HAVE_POLL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8ea3d.dir/HAVE_POLL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_POLL_H.c
Linking C executable cmTC_8ea3d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8ea3d.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_8ea3d.dir/HAVE_POLL_H.c.o  -o cmTC_8ea3d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_74389/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_74389.dir/build.make CMakeFiles/cmTC_74389.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_74389.dir/HAVE_PWD_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_74389.dir/HAVE_PWD_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PWD_H.c
Linking C executable cmTC_74389
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_74389.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_74389.dir/HAVE_PWD_H.c.o  -o cmTC_74389 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5d476/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5d476.dir/build.make CMakeFiles/cmTC_5d476.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5d476.dir/HAVE_SETJMP_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5d476.dir/HAVE_SETJMP_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SETJMP_H.c
Linking C executable cmTC_5d476
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5d476.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_5d476.dir/HAVE_SETJMP_H.c.o  -o cmTC_5d476 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5140e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5140e.dir/build.make CMakeFiles/cmTC_5140e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5140e.dir/HAVE_SGTTY_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5140e.dir/HAVE_SGTTY_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SGTTY_H.c
Linking C executable cmTC_5140e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5140e.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_5140e.dir/HAVE_SGTTY_H.c.o  -o cmTC_5140e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8e52e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8e52e.dir/build.make CMakeFiles/cmTC_8e52e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8e52e.dir/HAVE_SIGNAL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8e52e.dir/HAVE_SIGNAL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SIGNAL_H.c
Linking C executable cmTC_8e52e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8e52e.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_8e52e.dir/HAVE_SIGNAL_H.c.o  -o cmTC_8e52e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_05ec4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_05ec4.dir/build.make CMakeFiles/cmTC_05ec4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_05ec4.dir/HAVE_STDBOOL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_05ec4.dir/HAVE_STDBOOL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STDBOOL_H.c
Linking C executable cmTC_05ec4
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_05ec4.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_05ec4.dir/HAVE_STDBOOL_H.c.o  -o cmTC_05ec4 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_725eb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_725eb.dir/build.make CMakeFiles/cmTC_725eb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_725eb.dir/HAVE_STDINT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_725eb.dir/HAVE_STDINT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STDINT_H.c
Linking C executable cmTC_725eb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_725eb.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_725eb.dir/HAVE_STDINT_H.c.o  -o cmTC_725eb 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ba121/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ba121.dir/build.make CMakeFiles/cmTC_ba121.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ba121.dir/HAVE_STRINGS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ba121.dir/HAVE_STRINGS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STRINGS_H.c
Linking C executable cmTC_ba121
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ba121.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_ba121.dir/HAVE_STRINGS_H.c.o  -o cmTC_ba121 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8044b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8044b.dir/build.make CMakeFiles/cmTC_8044b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8044b.dir/HAVE_TERMIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8044b.dir/HAVE_TERMIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_TERMIO_H.c
Linking C executable cmTC_8044b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8044b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_8044b.dir/HAVE_TERMIO_H.c.o  -o cmTC_8044b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ef1ab/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ef1ab.dir/build.make CMakeFiles/cmTC_ef1ab.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ef1ab.dir/HAVE_TERMIOS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ef1ab.dir/HAVE_TERMIOS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_TERMIOS_H.c
Linking C executable cmTC_ef1ab
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ef1ab.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_ef1ab.dir/HAVE_TERMIOS_H.c.o  -o cmTC_ef1ab 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_44431/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_44431.dir/build.make CMakeFiles/cmTC_44431.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_44431.dir/HAVE_TIME_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_44431.dir/HAVE_TIME_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_TIME_H.c
Linking C executable cmTC_44431
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_44431.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_44431.dir/HAVE_TIME_H.c.o  -o cmTC_44431 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_03899/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_03899.dir/build.make CMakeFiles/cmTC_03899.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_03899.dir/HAVE_UNISTD_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_03899.dir/HAVE_UNISTD_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_UNISTD_H.c
Linking C executable cmTC_03899
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_03899.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_03899.dir/HAVE_UNISTD_H.c.o  -o cmTC_03899 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3a9e0/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3a9e0.dir/build.make CMakeFiles/cmTC_3a9e0.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3a9e0.dir/HAVE_UTIME_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3a9e0.dir/HAVE_UTIME_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_UTIME_H.c
Linking C executable cmTC_3a9e0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3a9e0.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_3a9e0.dir/HAVE_UTIME_H.c.o  -o cmTC_3a9e0 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_cd862/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_cd862.dir/build.make CMakeFiles/cmTC_cd862.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_cd862.dir/HAVE_DLFCN_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_cd862.dir/HAVE_DLFCN_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_DLFCN_H.c
Linking C executable cmTC_cd862
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_cd862.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_cd862.dir/HAVE_DLFCN_H.c.o  -o cmTC_cd862 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c6824/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c6824.dir/build.make CMakeFiles/cmTC_c6824.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c6824.dir/HAVE_MALLOC_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_c6824.dir/HAVE_MALLOC_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_MALLOC_H.c
Linking C executable cmTC_c6824
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c6824.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_c6824.dir/HAVE_MALLOC_H.c.o  -o cmTC_c6824 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_72fe8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_72fe8.dir/build.make CMakeFiles/cmTC_72fe8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_72fe8.dir/HAVE_MEMORY_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_72fe8.dir/HAVE_MEMORY_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_MEMORY_H.c
Linking C executable cmTC_72fe8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_72fe8.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_72fe8.dir/HAVE_MEMORY_H.c.o  -o cmTC_72fe8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_20d02/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_20d02.dir/build.make CMakeFiles/cmTC_20d02.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_20d02.dir/HAVE_NETINET_IF_ETHER_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_20d02.dir/HAVE_NETINET_IF_ETHER_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_NETINET_IF_ETHER_H.c
Linking C executable cmTC_20d02
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_20d02.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_20d02.dir/HAVE_NETINET_IF_ETHER_H.c.o  -o cmTC_20d02 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h;stdint.h;sys/utsname.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_73fc3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_73fc3.dir/build.make CMakeFiles/cmTC_73fc3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_73fc3.dir/HAVE_SYS_UTSNAME_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_73fc3.dir/HAVE_SYS_UTSNAME_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UTSNAME_H.c
Linking C executable cmTC_73fc3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_73fc3.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_73fc3.dir/HAVE_SYS_UTSNAME_H.c.o  -o cmTC_73fc3 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of size_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_041cc/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_041cc.dir/build.make CMakeFiles/cmTC_041cc.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_041cc.dir/SIZEOF_SIZE_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_041cc.dir/SIZEOF_SIZE_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c
Linking C executable cmTC_041cc
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_041cc.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_041cc.dir/SIZEOF_SIZE_T.c.o  -o cmTC_041cc 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of ssize_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b222b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b222b.dir/build.make CMakeFiles/cmTC_b222b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b222b.dir/SIZEOF_SSIZE_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_b222b.dir/SIZEOF_SSIZE_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_SSIZE_T.c
Linking C executable cmTC_b222b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b222b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_b222b.dir/SIZEOF_SSIZE_T.c.o  -o cmTC_b222b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of time_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2edeb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2edeb.dir/build.make CMakeFiles/cmTC_2edeb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2edeb.dir/SIZEOF_TIME_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_2edeb.dir/SIZEOF_TIME_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_TIME_T.c
Linking C executable cmTC_2edeb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2edeb.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_2edeb.dir/SIZEOF_TIME_T.c.o  -o cmTC_2edeb 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the basename exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_25751/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_25751.dir/build.make CMakeFiles/cmTC_25751.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_25751.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_25751.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_25751
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_25751.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_25751.dir/CheckSymbolExists.c.o  -o cmTC_25751 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef basename
  return ((int*)(&amp;basename))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the socket exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a0e8a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a0e8a.dir/build.make CMakeFiles/cmTC_a0e8a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a0e8a.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a0e8a.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_a0e8a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a0e8a.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_a0e8a.dir/CheckSymbolExists.c.o  -o cmTC_a0e8a 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef socket
  return ((int*)(&amp;socket))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the select exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b480c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b480c.dir/build.make CMakeFiles/cmTC_b480c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b480c.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_b480c.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_b480c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b480c.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_b480c.dir/CheckSymbolExists.c.o  -o cmTC_b480c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef select
  return ((int*)(&amp;select))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the poll exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_442fa/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_442fa.dir/build.make CMakeFiles/cmTC_442fa.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_442fa.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_442fa.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_442fa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_442fa.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_442fa.dir/CheckSymbolExists.c.o  -o cmTC_442fa 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef poll
  return ((int*)(&amp;poll))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strstr exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f4232/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f4232.dir/build.make CMakeFiles/cmTC_f4232.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f4232.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_f4232.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_f4232
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f4232.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_f4232.dir/CheckSymbolExists.c.o  -o cmTC_f4232 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strstr
  return ((int*)(&amp;strstr))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strtok_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_77552/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_77552.dir/build.make CMakeFiles/cmTC_77552.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_77552.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_77552.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_77552
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_77552.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_77552.dir/CheckSymbolExists.c.o  -o cmTC_77552 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strtok_r
  return ((int*)(&amp;strtok_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the uname exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9080e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9080e.dir/build.make CMakeFiles/cmTC_9080e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9080e.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_9080e.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_9080e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9080e.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_9080e.dir/CheckSymbolExists.c.o  -o cmTC_9080e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef uname
  return ((int*)(&amp;uname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strcasecmp exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_203d8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_203d8.dir/build.make CMakeFiles/cmTC_203d8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_203d8.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_203d8.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_203d8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_203d8.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_203d8.dir/CheckSymbolExists.c.o  -o cmTC_203d8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strcasecmp
  return ((int*)(&amp;strcasecmp))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the alarm exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_85129/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_85129.dir/build.make CMakeFiles/cmTC_85129.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_85129.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_85129.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_85129
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_85129.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_85129.dir/CheckSymbolExists.c.o  -o cmTC_85129 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef alarm
  return ((int*)(&amp;alarm))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the gethostbyaddr exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_82480/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_82480.dir/build.make CMakeFiles/cmTC_82480.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_82480.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_82480.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_82480
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_82480.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_82480.dir/CheckSymbolExists.c.o  -o cmTC_82480 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyaddr
  return ((int*)(&amp;gethostbyaddr))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the gethostbyaddr_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_cb02d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_cb02d.dir/build.make CMakeFiles/cmTC_cb02d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_cb02d.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_cb02d.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_cb02d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_cb02d.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_cb02d.dir/CheckSymbolExists.c.o  -o cmTC_cb02d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyaddr_r
  return ((int*)(&amp;gethostbyaddr_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the gettimeofday exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8f68d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8f68d.dir/build.make CMakeFiles/cmTC_8f68d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8f68d.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8f68d.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_8f68d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8f68d.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_8f68d.dir/CheckSymbolExists.c.o  -o cmTC_8f68d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gettimeofday
  return ((int*)(&amp;gettimeofday))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the inet_addr exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_cb584/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_cb584.dir/build.make CMakeFiles/cmTC_cb584.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_cb584.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_cb584.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_cb584
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_cb584.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_cb584.dir/CheckSymbolExists.c.o  -o cmTC_cb584 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_addr
  return ((int*)(&amp;inet_addr))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the inet_ntoa exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_41f26/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_41f26.dir/build.make CMakeFiles/cmTC_41f26.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_41f26.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_41f26.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_41f26
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_41f26.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_41f26.dir/CheckSymbolExists.c.o  -o cmTC_41f26 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_ntoa
  return ((int*)(&amp;inet_ntoa))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the tcsetattr exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0524f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0524f.dir/build.make CMakeFiles/cmTC_0524f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0524f.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0524f.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_0524f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0524f.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_0524f.dir/CheckSymbolExists.c.o  -o cmTC_0524f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef tcsetattr
  return ((int*)(&amp;tcsetattr))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the tcgetattr exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_74e4b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_74e4b.dir/build.make CMakeFiles/cmTC_74e4b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_74e4b.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_74e4b.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_74e4b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_74e4b.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_74e4b.dir/CheckSymbolExists.c.o  -o cmTC_74e4b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef tcgetattr
  return ((int*)(&amp;tcgetattr))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the perror exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e663b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e663b.dir/build.make CMakeFiles/cmTC_e663b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e663b.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e663b.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_e663b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e663b.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_e663b.dir/CheckSymbolExists.c.o  -o cmTC_e663b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef perror
  return ((int*)(&amp;perror))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setvbuf exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fb59d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fb59d.dir/build.make CMakeFiles/cmTC_fb59d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fb59d.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_fb59d.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_fb59d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fb59d.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_fb59d.dir/CheckSymbolExists.c.o  -o cmTC_fb59d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setvbuf
  return ((int*)(&amp;setvbuf))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the sigsetjmp exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3a5c3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3a5c3.dir/build.make CMakeFiles/cmTC_3a5c3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3a5c3.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3a5c3.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_3a5c3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3a5c3.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_3a5c3.dir/CheckSymbolExists.c.o  -o cmTC_3a5c3 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef sigsetjmp
  return ((int*)(&amp;sigsetjmp))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getpwuid exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0a489/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0a489.dir/build.make CMakeFiles/cmTC_0a489.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0a489.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0a489.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_0a489
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0a489.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_0a489.dir/CheckSymbolExists.c.o  -o cmTC_0a489 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpwuid
  return ((int*)(&amp;getpwuid))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getpwuid_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e48cf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e48cf.dir/build.make CMakeFiles/cmTC_e48cf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e48cf.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e48cf.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_e48cf
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e48cf.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_e48cf.dir/CheckSymbolExists.c.o  -o cmTC_e48cf 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpwuid_r
  return ((int*)(&amp;getpwuid_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the geteuid exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e1455/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e1455.dir/build.make CMakeFiles/cmTC_e1455.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e1455.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e1455.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_e1455
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e1455.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_e1455.dir/CheckSymbolExists.c.o  -o cmTC_e1455 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef geteuid
  return ((int*)(&amp;geteuid))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the usleep exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_11b4a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_11b4a.dir/build.make CMakeFiles/cmTC_11b4a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_11b4a.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_11b4a.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_11b4a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_11b4a.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_11b4a.dir/CheckSymbolExists.c.o  -o cmTC_11b4a 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef usleep
  return ((int*)(&amp;usleep))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the utime exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_53b45/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_53b45.dir/build.make CMakeFiles/cmTC_53b45.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_53b45.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_53b45.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_53b45
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_53b45.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_53b45.dir/CheckSymbolExists.c.o  -o cmTC_53b45 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef utime
  return ((int*)(&amp;utime))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the gmtime_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9b508/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9b508.dir/build.make CMakeFiles/cmTC_9b508.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9b508.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_9b508.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_9b508
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9b508.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_9b508.dir/CheckSymbolExists.c.o  -o cmTC_9b508 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gmtime_r
  return ((int*)(&amp;gmtime_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the localtime_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_71999/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_71999.dir/build.make CMakeFiles/cmTC_71999.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_71999.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_71999.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_71999
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_71999.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_71999.dir/CheckSymbolExists.c.o  -o cmTC_71999 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef localtime_r
  return ((int*)(&amp;localtime_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the gethostbyname exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4f88e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4f88e.dir/build.make CMakeFiles/cmTC_4f88e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4f88e.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_4f88e.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_4f88e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4f88e.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_4f88e.dir/CheckSymbolExists.c.o  -o cmTC_4f88e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyname
  return ((int*)(&amp;gethostbyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the gethostbyname_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3f9e0/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3f9e0.dir/build.make CMakeFiles/cmTC_3f9e0.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3f9e0.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3f9e0.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_3f9e0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3f9e0.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_3f9e0.dir/CheckSymbolExists.c.o  -o cmTC_3f9e0 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyname_r
  return ((int*)(&amp;gethostbyname_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the signal exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0c1bd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0c1bd.dir/build.make CMakeFiles/cmTC_0c1bd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0c1bd.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0c1bd.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_0c1bd
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0c1bd.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_0c1bd.dir/CheckSymbolExists.c.o  -o cmTC_0c1bd 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef signal
  return ((int*)(&amp;signal))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the SIGALRM exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_07cb9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_07cb9.dir/build.make CMakeFiles/cmTC_07cb9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_07cb9.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_07cb9.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_07cb9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_07cb9.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_07cb9.dir/CheckSymbolExists.c.o  -o cmTC_07cb9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef SIGALRM
  return ((int*)(&amp;SIGALRM))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strtoll exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_690a7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_690a7.dir/build.make CMakeFiles/cmTC_690a7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_690a7.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_690a7.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_690a7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_690a7.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_690a7.dir/CheckSymbolExists.c.o  -o cmTC_690a7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strtoll
  return ((int*)(&amp;strtoll))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strerror_r exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_51b9b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_51b9b.dir/build.make CMakeFiles/cmTC_51b9b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_51b9b.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_51b9b.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_51b9b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_51b9b.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_51b9b.dir/CheckSymbolExists.c.o  -o cmTC_51b9b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strerror_r
  return ((int*)(&amp;strerror_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the siginterrupt exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d73bf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d73bf.dir/build.make CMakeFiles/cmTC_d73bf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d73bf.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d73bf.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_d73bf
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d73bf.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_d73bf.dir/CheckSymbolExists.c.o  -o cmTC_d73bf 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef siginterrupt
  return ((int*)(&amp;siginterrupt))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the fork exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_73a45/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_73a45.dir/build.make CMakeFiles/cmTC_73a45.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_73a45.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_73a45.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_73a45
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_73a45.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_73a45.dir/CheckSymbolExists.c.o  -o cmTC_73a45 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef fork
  return ((int*)(&amp;fork))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getaddrinfo exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_05689/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_05689.dir/build.make CMakeFiles/cmTC_05689.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_05689.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_05689.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_05689
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_05689.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_05689.dir/CheckSymbolExists.c.o  -o cmTC_05689 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getaddrinfo
  return ((int*)(&amp;getaddrinfo))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the freeaddrinfo exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_94a8b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_94a8b.dir/build.make CMakeFiles/cmTC_94a8b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_94a8b.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_94a8b.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_94a8b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_94a8b.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_94a8b.dir/CheckSymbolExists.c.o  -o cmTC_94a8b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef freeaddrinfo
  return ((int*)(&amp;freeaddrinfo))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the freeifaddrs exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a3273/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a3273.dir/build.make CMakeFiles/cmTC_a3273.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a3273.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a3273.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_a3273
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a3273.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_a3273.dir/CheckSymbolExists.c.o  -o cmTC_a3273 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef freeifaddrs
  return ((int*)(&amp;freeifaddrs))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the pipe exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f99c7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f99c7.dir/build.make CMakeFiles/cmTC_f99c7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f99c7.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_f99c7.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_f99c7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f99c7.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_f99c7.dir/CheckSymbolExists.c.o  -o cmTC_f99c7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pipe
  return ((int*)(&amp;pipe))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the ftruncate exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e96e5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e96e5.dir/build.make CMakeFiles/cmTC_e96e5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e96e5.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e96e5.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_e96e5
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e96e5.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_e96e5.dir/CheckSymbolExists.c.o  -o cmTC_e96e5 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef ftruncate
  return ((int*)(&amp;ftruncate))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getprotobyname exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_57592/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_57592.dir/build.make CMakeFiles/cmTC_57592.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_57592.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_57592.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_57592
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_57592.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_57592.dir/CheckSymbolExists.c.o  -o cmTC_57592 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getprotobyname
  return ((int*)(&amp;getprotobyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getpeername exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3f68c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3f68c.dir/build.make CMakeFiles/cmTC_3f68c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3f68c.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3f68c.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_3f68c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3f68c.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_3f68c.dir/CheckSymbolExists.c.o  -o cmTC_3f68c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpeername
  return ((int*)(&amp;getpeername))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getsockname exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3277d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3277d.dir/build.make CMakeFiles/cmTC_3277d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3277d.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_3277d.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_3277d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3277d.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_3277d.dir/CheckSymbolExists.c.o  -o cmTC_3277d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getsockname
  return ((int*)(&amp;getsockname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the if_nametoindex exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_bcd42/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_bcd42.dir/build.make CMakeFiles/cmTC_bcd42.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_bcd42.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_bcd42.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_bcd42
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bcd42.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_bcd42.dir/CheckSymbolExists.c.o  -o cmTC_bcd42 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef if_nametoindex
  return ((int*)(&amp;if_nametoindex))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getrlimit exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_378c2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_378c2.dir/build.make CMakeFiles/cmTC_378c2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_378c2.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_378c2.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_378c2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_378c2.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_378c2.dir/CheckSymbolExists.c.o  -o cmTC_378c2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getrlimit
  return ((int*)(&amp;getrlimit))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setrlimit exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a40ae/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a40ae.dir/build.make CMakeFiles/cmTC_a40ae.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a40ae.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a40ae.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_a40ae
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a40ae.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_a40ae.dir/CheckSymbolExists.c.o  -o cmTC_a40ae 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setrlimit
  return ((int*)(&amp;setrlimit))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the fcntl exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_60b82/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_60b82.dir/build.make CMakeFiles/cmTC_60b82.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_60b82.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_60b82.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_60b82
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_60b82.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_60b82.dir/CheckSymbolExists.c.o  -o cmTC_60b82 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef fcntl
  return ((int*)(&amp;fcntl))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the ioctl exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_00493/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_00493.dir/build.make CMakeFiles/cmTC_00493.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_00493.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_00493.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_00493
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_00493.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_00493.dir/CheckSymbolExists.c.o  -o cmTC_00493 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef ioctl
  return ((int*)(&amp;ioctl))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setsockopt exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_128f1/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_128f1.dir/build.make CMakeFiles/cmTC_128f1.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_128f1.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_128f1.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_128f1
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_128f1.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_128f1.dir/CheckSymbolExists.c.o  -o cmTC_128f1 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setsockopt
  return ((int*)(&amp;setsockopt))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the inet_pton exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_94fe3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_94fe3.dir/build.make CMakeFiles/cmTC_94fe3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_94fe3.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_94fe3.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_94fe3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_94fe3.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_94fe3.dir/CheckSymbolExists.c.o  -o cmTC_94fe3 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_pton
  return ((int*)(&amp;inet_pton))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the fsetxattr exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_82b99/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_82b99.dir/build.make CMakeFiles/cmTC_82b99.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_82b99.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_82b99.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_82b99
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_82b99.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_82b99.dir/CheckSymbolExists.c.o  -o cmTC_82b99 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef fsetxattr
  return ((int*)(&amp;fsetxattr))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing Curl Test HAVE_FSETXATTR_5 passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c5281/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c5281.dir/build.make CMakeFiles/cmTC_c5281.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c5281.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_FSETXATTR_5  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_c5281.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_c5281
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c5281.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_FSETXATTR_5  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_c5281.dir/CurlTests.c.o  -o cmTC_c5281 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Determining if the sigaction exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_978e9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_978e9.dir/build.make CMakeFiles/cmTC_978e9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_978e9.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_978e9.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_978e9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_978e9.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_978e9.dir/CheckSymbolExists.c.o  -o cmTC_978e9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;signal.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef sigaction
  return ((int*)(&amp;sigaction))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing Curl Test HAVE_FCNTL_O_NONBLOCK passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6acfd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6acfd.dir/build.make CMakeFiles/cmTC_6acfd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6acfd.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_FCNTL_O_NONBLOCK  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_6acfd.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_6acfd
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6acfd.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_FCNTL_O_NONBLOCK  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_6acfd.dir/CurlTests.c.o  -o cmTC_6acfd 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_IOCTL_FIONBIO passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e8df0/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e8df0.dir/build.make CMakeFiles/cmTC_e8df0.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e8df0.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IOCTL_FIONBIO  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_e8df0.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_e8df0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e8df0.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_IOCTL_FIONBIO  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_e8df0.dir/CurlTests.c.o  -o cmTC_e8df0 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_IOCTL_SIOCGIFADDR passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_40203/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_40203.dir/build.make CMakeFiles/cmTC_40203.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_40203.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IOCTL_SIOCGIFADDR  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_40203.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_40203
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_40203.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_IOCTL_SIOCGIFADDR  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_40203.dir/CurlTests.c.o  -o cmTC_40203 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test TIME_WITH_SYS_TIME passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4260e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4260e.dir/build.make CMakeFiles/cmTC_4260e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4260e.dir/CurlTests.c.o
/usr/bin/cc   -w -DTIME_WITH_SYS_TIME  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_4260e.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_4260e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4260e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DTIME_WITH_SYS_TIME  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_4260e.dir/CurlTests.c.o  -o cmTC_4260e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_GETHOSTBYADDR_R_8 passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b5572/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b5572.dir/build.make CMakeFiles/cmTC_b5572.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b5572.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYADDR_R_8  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_b5572.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_b5572
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b5572.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_GETHOSTBYADDR_R_8  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_b5572.dir/CurlTests.c.o  -o cmTC_b5572 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_GETHOSTBYADDR_R_8_REENTRANT passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a9de6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a9de6.dir/build.make CMakeFiles/cmTC_a9de6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a9de6.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYADDR_R_8_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_a9de6.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_a9de6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a9de6.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_GETHOSTBYADDR_R_8_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_a9de6.dir/CurlTests.c.o  -o cmTC_a9de6 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_GETHOSTBYNAME_R_6 passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c9284/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c9284.dir/build.make CMakeFiles/cmTC_c9284.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c9284.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYNAME_R_6  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_c9284.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_c9284
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c9284.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_GETHOSTBYNAME_R_6  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_c9284.dir/CurlTests.c.o  -o cmTC_c9284 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_GETHOSTBYNAME_R_6_REENTRANT passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4903f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4903f.dir/build.make CMakeFiles/cmTC_4903f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4903f.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYNAME_R_6_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_4903f.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_4903f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4903f.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_GETHOSTBYNAME_R_6_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_4903f.dir/CurlTests.c.o  -o cmTC_4903f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_IN_ADDR_T passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_387c2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_387c2.dir/build.make CMakeFiles/cmTC_387c2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_387c2.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IN_ADDR_T  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_387c2.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_387c2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_387c2.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_IN_ADDR_T  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_387c2.dir/CurlTests.c.o  -o cmTC_387c2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_BOOL_T passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0b3b2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0b3b2.dir/build.make CMakeFiles/cmTC_0b3b2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0b3b2.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_BOOL_T  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_0b3b2.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_0b3b2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0b3b2.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_BOOL_T  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_0b3b2.dir/CurlTests.c.o  -o cmTC_0b3b2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test STDC_HEADERS passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e986e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e986e.dir/build.make CMakeFiles/cmTC_e986e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e986e.dir/CurlTests.c.o
/usr/bin/cc   -w -DSTDC_HEADERS  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_e986e.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_e986e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e986e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DSTDC_HEADERS  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_e986e.dir/CurlTests.c.o  -o cmTC_e986e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test RETSIGTYPE_TEST passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_35807/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_35807.dir/build.make CMakeFiles/cmTC_35807.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_35807.dir/CurlTests.c.o
/usr/bin/cc   -w -DRETSIGTYPE_TEST  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_35807.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_35807
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_35807.dir/link.txt --verbose=1
/usr/bin/cc  -w -DRETSIGTYPE_TEST  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_35807.dir/CurlTests.c.o  -o cmTC_35807 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_FILE_OFFSET_BITS passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_21b9c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_21b9c.dir/build.make CMakeFiles/cmTC_21b9c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_21b9c.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_FILE_OFFSET_BITS  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_21b9c.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_21b9c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_21b9c.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_FILE_OFFSET_BITS  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_21b9c.dir/CurlTests.c.o  -o cmTC_21b9c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_VARIADIC_MACROS_C99 passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_33421/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_33421.dir/build.make CMakeFiles/cmTC_33421.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_33421.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_VARIADIC_MACROS_C99  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_33421.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_33421
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_33421.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_VARIADIC_MACROS_C99  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_33421.dir/CurlTests.c.o  -o cmTC_33421 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_VARIADIC_MACROS_GCC passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ca56c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ca56c.dir/build.make CMakeFiles/cmTC_ca56c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ca56c.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_VARIADIC_MACROS_GCC  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_ca56c.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_ca56c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ca56c.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_VARIADIC_MACROS_GCC  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_ca56c.dir/CurlTests.c.o  -o cmTC_ca56c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Determining size of off_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2ec37/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2ec37.dir/build.make CMakeFiles/cmTC_2ec37.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2ec37.dir/SIZEOF_OFF_T.c.o
/usr/bin/cc   -w -D_FILE_OFFSET_BITS=64   -std=gnu11 -o CMakeFiles/cmTC_2ec37.dir/SIZEOF_OFF_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_OFF_T.c
Linking C executable cmTC_2ec37
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2ec37.dir/link.txt --verbose=1
/usr/bin/cc  -w -D_FILE_OFFSET_BITS=64    -rdynamic CMakeFiles/cmTC_2ec37.dir/SIZEOF_OFF_T.c.o  -o cmTC_2ec37 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of curl_off_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fdac9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fdac9.dir/build.make CMakeFiles/cmTC_fdac9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fdac9.dir/SIZEOF_CURL_OFF_T.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -D_FILE_OFFSET_BITS=64   -std=gnu11 -o CMakeFiles/cmTC_fdac9.dir/SIZEOF_CURL_OFF_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_CURL_OFF_T.c
Linking C executable cmTC_fdac9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fdac9.dir/link.txt --verbose=1
/usr/bin/cc  -w -D_FILE_OFFSET_BITS=64    -rdynamic CMakeFiles/cmTC_fdac9.dir/SIZEOF_CURL_OFF_T.c.o  -o cmTC_fdac9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing Curl Test HAVE_POSIX_STRERROR_R passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4252e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4252e.dir/build.make CMakeFiles/cmTC_4252e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4252e.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_POSIX_STRERROR_R  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_4252e.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_4252e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4252e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_POSIX_STRERROR_R  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_4252e.dir/CurlTests.c.o  -o cmTC_4252e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing Curl Test HAVE_CLOCK_GETTIME_MONOTONIC passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9d232/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9d232.dir/build.make CMakeFiles/cmTC_9d232.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9d232.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_CLOCK_GETTIME_MONOTONIC  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_9d232.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_9d232
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9d232.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_CLOCK_GETTIME_MONOTONIC  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_9d232.dir/CurlTests.c.o  -o cmTC_9d232 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Performing C SOURCE FILE Test HAVE_MSG_NOSIGNAL succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4a111/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4a111.dir/build.make CMakeFiles/cmTC_4a111.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4a111.dir/src.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -DHAVE_MSG_NOSIGNAL   -std=gnu11 -o CMakeFiles/cmTC_4a111.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C static library libcmTC_4a111.a
/usr/bin/cmake -P CMakeFiles/cmTC_4a111.dir/cmake_clean_target.cmake
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4a111.dir/link.txt --verbose=1
/usr/bin/ar qc libcmTC_4a111.a  CMakeFiles/cmTC_4a111.dir/src.c.o
/usr/bin/ranlib libcmTC_4a111.a
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#undef inline
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
  int main(void) {
    int flag = MSG_NOSIGNAL;
    (void)flag;
    return 0;
  }
Performing C SOURCE FILE Test HAVE_STRUCT_TIMEVAL succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ca788/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ca788.dir/build.make CMakeFiles/cmTC_ca788.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ca788.dir/src.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -DHAVE_STRUCT_TIMEVAL   -std=gnu11 -o CMakeFiles/cmTC_ca788.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C static library libcmTC_ca788.a
/usr/bin/cmake -P CMakeFiles/cmTC_ca788.dir/cmake_clean_target.cmake
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ca788.dir/link.txt --verbose=1
/usr/bin/ar qc libcmTC_ca788.a  CMakeFiles/cmTC_ca788.dir/src.c.o
/usr/bin/ranlib libcmTC_ca788.a
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#undef inline
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;time.h&gt;
#include &lt;time.h&gt;
int main(void) {
  struct timeval ts;
  ts.tv_sec  = 0;
  ts.tv_usec = 0;
  (void)ts;
  return 0;
}
Determining size of sig_atomic_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5e220/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5e220.dir/build.make CMakeFiles/cmTC_5e220.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5e220.dir/SIZEOF_SIG_ATOMIC_T.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -DHAVE_SIGNAL_H   -std=gnu11 -o CMakeFiles/cmTC_5e220.dir/SIZEOF_SIG_ATOMIC_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_SIG_ATOMIC_T.c
Linking C static library libcmTC_5e220.a
/usr/bin/cmake -P CMakeFiles/cmTC_5e220.dir/cmake_clean_target.cmake
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5e220.dir/link.txt --verbose=1
/usr/bin/ar qc libcmTC_5e220.a  CMakeFiles/cmTC_5e220.dir/SIZEOF_SIG_ATOMIC_T.c.o
/usr/bin/ranlib libcmTC_5e220.a
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test HAVE_SIG_ATOMIC_T_NOT_VOLATILE succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f4765/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f4765.dir/build.make CMakeFiles/cmTC_f4765.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f4765.dir/src.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -DHAVE_SIG_ATOMIC_T_NOT_VOLATILE -DHAVE_SIGNAL_H   -std=gnu11 -o CMakeFiles/cmTC_f4765.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C static library libcmTC_f4765.a
/usr/bin/cmake -P CMakeFiles/cmTC_f4765.dir/cmake_clean_target.cmake
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f4765.dir/link.txt --verbose=1
/usr/bin/ar qc libcmTC_f4765.a  CMakeFiles/cmTC_f4765.dir/src.c.o
/usr/bin/ranlib libcmTC_f4765.a
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

    #ifdef HAVE_SIGNAL_H
    #  include &lt;signal.h&gt;
    #endif
    int main(void) {
      static volatile sig_atomic_t dummy = 0;
      (void)dummy;
      return 0;
    }
Determining size of struct sockaddr_storage passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c2182/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c2182.dir/build.make CMakeFiles/cmTC_c2182.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c2182.dir/SIZEOF_STRUCT_SOCKADDR_STORAGE.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -DHAVE_SIGNAL_H   -std=gnu11 -o CMakeFiles/cmTC_c2182.dir/SIZEOF_STRUCT_SOCKADDR_STORAGE.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_STRUCT_SOCKADDR_STORAGE.c
Linking C static library libcmTC_c2182.a
/usr/bin/cmake -P CMakeFiles/cmTC_c2182.dir/cmake_clean_target.cmake
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c2182.dir/link.txt --verbose=1
/usr/bin/ar qc libcmTC_c2182.a  CMakeFiles/cmTC_c2182.dir/SIZEOF_STRUCT_SOCKADDR_STORAGE.c.o
/usr/bin/ranlib libcmTC_c2182.a
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test HAVE_POLL_FINE succeeded with the following compile output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a81ec/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a81ec.dir/build.make CMakeFiles/cmTC_a81ec.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a81ec.dir/src.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmcurl/include  -w -DHAVE_POLL_FINE -DHAVE_SYS_POLL_H   -std=gnu11 -o CMakeFiles/cmTC_a81ec.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_a81ec
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a81ec.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_POLL_FINE -DHAVE_SYS_POLL_H    CMakeFiles/cmTC_a81ec.dir/src.c.o  -o cmTC_a81ec 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


...and run output:

Return value: 1
Source file was:

    #include &lt;stdlib.h&gt;
    #include &lt;sys/time.h&gt;

    #ifdef HAVE_SYS_POLL_H
    #  include &lt;sys/poll.h&gt;
    #elif  HAVE_POLL_H
    #  include &lt;poll.h&gt;
    #endif

    int main(void)
    {
        if(0 != poll(0, 0, 10)) {
          return 1; /* fail */
        }
        else {
          /* detect the 10.12 poll() breakage */
          struct timeval before, after;
          int rc;
          size_t us;

          gettimeofday(&amp;before, NULL);
          rc = poll(NULL, 0, 500);
          gettimeofday(&amp;after, NULL);

          us = (after.tv_sec - before.tv_sec) * 1000000 +
            (after.tv_usec - before.tv_usec);

          if(us &lt; 400000) {
            return 1;
          }
        }
        return 0;
    }
Determining if the getpagesize exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d432a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d432a.dir/build.make CMakeFiles/cmTC_d432a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d432a.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d432a.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_d432a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d432a.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_d432a.dir/CheckSymbolExists.c.o  -o cmTC_d432a 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;unistd.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpagesize
  return ((int*)(&amp;getpagesize))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the mmap exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_809a6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_809a6.dir/build.make CMakeFiles/cmTC_809a6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_809a6.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_809a6.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_809a6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_809a6.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_809a6.dir/CheckSymbolExists.c.o  -o cmTC_809a6 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;sys/mman.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef mmap
  return ((int*)(&amp;mmap))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getrandom exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_efa75/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_efa75.dir/build.make CMakeFiles/cmTC_efa75.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_efa75.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_efa75.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_efa75
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_efa75.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_efa75.dir/CheckSymbolExists.c.o  -o cmTC_efa75 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;sys/random.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getrandom
  return ((int*)(&amp;getrandom))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the system is big endian passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_81911/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_81911.dir/build.make CMakeFiles/cmTC_81911.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_81911.dir/TestEndianess.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_81911.dir/TestEndianess.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/TestEndianess.c
Linking C executable cmTC_81911
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_81911.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_81911.dir/TestEndianess.c.o  -o cmTC_81911 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


TestEndianess.c:
/* A 16 bit integer is required. */
typedef unsigned short cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}


Performing C SOURCE FILE Test HAVE_SYSCALL_GETRANDOM succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7482f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7482f.dir/build.make CMakeFiles/cmTC_7482f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7482f.dir/src.c.o
/usr/bin/cc   -w -DHAVE_SYSCALL_GETRANDOM   -std=gnu11 -o CMakeFiles/cmTC_7482f.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_7482f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7482f.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_SYSCALL_GETRANDOM    CMakeFiles/cmTC_7482f.dir/src.c.o  -o cmTC_7482f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

        #include &lt;stdlib.h&gt;  /* for NULL */
        #include &lt;unistd.h&gt;  /* for syscall */
        #include &lt;sys/syscall.h&gt;  /* for SYS_getrandom */
        int main() {
            syscall(SYS_getrandom, NULL, 0, 0);
            return 0;
        }
Determining if the include file byteswap.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e67f2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e67f2.dir/build.make CMakeFiles/cmTC_e67f2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e67f2.dir/CheckIncludeFile.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_e67f2.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_e67f2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e67f2.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_e67f2.dir/CheckIncludeFile.c.o  -o cmTC_e67f2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file limits.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_52b38/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_52b38.dir/build.make CMakeFiles/cmTC_52b38.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_52b38.dir/CheckIncludeFile.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_52b38.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_52b38
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_52b38.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_52b38.dir/CheckIncludeFile.c.o  -o cmTC_52b38 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file sys/sysctl.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_aedd7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_aedd7.dir/build.make CMakeFiles/cmTC_aedd7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_aedd7.dir/CheckIncludeFile.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_aedd7.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
In file included from /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:
/usr/include/x86_64-linux-gnu/sys/sysctl.h:21:2: warning: #warning "The &lt;sys/sysctl.h&gt; header is deprecated and will be removed." [-Wcpp]
   21 | #warning "The &lt;sys/sysctl.h&gt; header is deprecated and will be removed."
      |  ^~~~~~~
Linking C executable cmTC_aedd7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_aedd7.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_aedd7.dir/CheckIncludeFile.c.o  -o cmTC_aedd7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test HAVE_BSWAP_16 succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8d391/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8d391.dir/build.make CMakeFiles/cmTC_8d391.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8d391.dir/src.c.o
/usr/bin/cc   -DHAVE_BSWAP_16   -std=gnu11 -o CMakeFiles/cmTC_8d391.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_8d391
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8d391.dir/link.txt --verbose=1
/usr/bin/cc  -DHAVE_BSWAP_16    CMakeFiles/cmTC_8d391.dir/src.c.o  -o cmTC_8d391 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include&lt;byteswap.h&gt;
int main(void){bswap_16(0);return 0;}
Performing C SOURCE FILE Test HAVE_BSWAP_32 succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b244e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b244e.dir/build.make CMakeFiles/cmTC_b244e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b244e.dir/src.c.o
/usr/bin/cc   -DHAVE_BSWAP_32   -std=gnu11 -o CMakeFiles/cmTC_b244e.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_b244e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b244e.dir/link.txt --verbose=1
/usr/bin/cc  -DHAVE_BSWAP_32    CMakeFiles/cmTC_b244e.dir/src.c.o  -o cmTC_b244e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include&lt;byteswap.h&gt;
int main(void){bswap_32(0);return 0;}
Performing C SOURCE FILE Test HAVE_BSWAP_64 succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_aac18/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_aac18.dir/build.make CMakeFiles/cmTC_aac18.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_aac18.dir/src.c.o
/usr/bin/cc   -DHAVE_BSWAP_64   -std=gnu11 -o CMakeFiles/cmTC_aac18.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_aac18
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_aac18.dir/link.txt --verbose=1
/usr/bin/cc  -DHAVE_BSWAP_64    CMakeFiles/cmTC_aac18.dir/src.c.o  -o cmTC_aac18 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include&lt;byteswap.h&gt;
int main(void){bswap_64(0);return 0;}
Performing C SOURCE FILE Test HAVE_DIRENT_H succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b06f4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b06f4.dir/build.make CMakeFiles/cmTC_b06f4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b06f4.dir/src.c.o
/usr/bin/cc   -w -DHAVE_DIRENT_H   -std=gnu11 -o CMakeFiles/cmTC_b06f4.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_b06f4
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b06f4.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_DIRENT_H    CMakeFiles/cmTC_b06f4.dir/src.c.o  -o cmTC_b06f4 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

#include &lt;dirent.h&gt;

int main()
{
   static DIR * tmp;
   if (sizeof(tmp))
      return 0;
  return 0;
}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_96ccb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_96ccb.dir/build.make CMakeFiles/cmTC_96ccb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_96ccb.dir/HAVE_GRP_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_96ccb.dir/HAVE_GRP_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_GRP_H.c
Linking C executable cmTC_96ccb
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_96ccb.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_96ccb.dir/HAVE_GRP_H.c.o  -o cmTC_96ccb 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_052aa/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_052aa.dir/build.make CMakeFiles/cmTC_052aa.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_052aa.dir/HAVE_LANGINFO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_052aa.dir/HAVE_LANGINFO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_LANGINFO_H.c
Linking C executable cmTC_052aa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_052aa.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_052aa.dir/HAVE_LANGINFO_H.c.o  -o cmTC_052aa 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d93be/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d93be.dir/build.make CMakeFiles/cmTC_d93be.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d93be.dir/HAVE_LINUX_TYPES_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d93be.dir/HAVE_LINUX_TYPES_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_LINUX_TYPES_H.c
Linking C executable cmTC_d93be
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d93be.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_d93be.dir/HAVE_LINUX_TYPES_H.c.o  -o cmTC_d93be 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_14637/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_14637.dir/build.make CMakeFiles/cmTC_14637.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_14637.dir/HAVE_LINUX_FIEMAP_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_14637.dir/HAVE_LINUX_FIEMAP_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_LINUX_FIEMAP_H.c
Linking C executable cmTC_14637
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_14637.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_14637.dir/HAVE_LINUX_FIEMAP_H.c.o  -o cmTC_14637 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ef536/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ef536.dir/build.make CMakeFiles/cmTC_ef536.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ef536.dir/HAVE_LINUX_FS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ef536.dir/HAVE_LINUX_FS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_LINUX_FS_H.c
Linking C executable cmTC_ef536
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ef536.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_ef536.dir/HAVE_LINUX_FS_H.c.o  -o cmTC_ef536 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test HAVE_WORKING_FS_IOC_GETFLAGS succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_28246/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_28246.dir/build.make CMakeFiles/cmTC_28246.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_28246.dir/src.c.o
/usr/bin/cc   -w -DHAVE_WORKING_FS_IOC_GETFLAGS   -std=gnu11 -o CMakeFiles/cmTC_28246.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_28246
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_28246.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_WORKING_FS_IOC_GETFLAGS    CMakeFiles/cmTC_28246.dir/src.c.o  -o cmTC_28246 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include &lt;sys/ioctl.h&gt;
#include &lt;linux/fs.h&gt;
int main(void) { return FS_IOC_GETFLAGS; }
Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_149f6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_149f6.dir/build.make CMakeFiles/cmTC_149f6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_149f6.dir/HAVE_LINUX_MAGIC_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_149f6.dir/HAVE_LINUX_MAGIC_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_LINUX_MAGIC_H.c
Linking C executable cmTC_149f6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_149f6.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_149f6.dir/HAVE_LINUX_MAGIC_H.c.o  -o cmTC_149f6 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9b2c0/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9b2c0.dir/build.make CMakeFiles/cmTC_9b2c0.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9b2c0.dir/HAVE_PATHS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_9b2c0.dir/HAVE_PATHS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PATHS_H.c
Linking C executable cmTC_9b2c0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9b2c0.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_9b2c0.dir/HAVE_PATHS_H.c.o  -o cmTC_9b2c0 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c90ce/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c90ce.dir/build.make CMakeFiles/cmTC_c90ce.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c90ce.dir/HAVE_PTHREAD_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_c90ce.dir/HAVE_PTHREAD_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PTHREAD_H.c
Linking C executable cmTC_c90ce
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c90ce.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_c90ce.dir/HAVE_PTHREAD_H.c.o  -o cmTC_c90ce 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e06ed/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e06ed.dir/build.make CMakeFiles/cmTC_e06ed.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e06ed.dir/HAVE_REGEX_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e06ed.dir/HAVE_REGEX_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_REGEX_H.c
Linking C executable cmTC_e06ed
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e06ed.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_e06ed.dir/HAVE_REGEX_H.c.o  -o cmTC_e06ed 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_eada3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_eada3.dir/build.make CMakeFiles/cmTC_eada3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_eada3.dir/HAVE_SPAWN_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_eada3.dir/HAVE_SPAWN_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SPAWN_H.c
Linking C executable cmTC_eada3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_eada3.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_eada3.dir/HAVE_SPAWN_H.c.o  -o cmTC_eada3 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_546c9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_546c9.dir/build.make CMakeFiles/cmTC_546c9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_546c9.dir/HAVE_STDARG_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_546c9.dir/HAVE_STDARG_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STDARG_H.c
Linking C executable cmTC_546c9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_546c9.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_546c9.dir/HAVE_STDARG_H.c.o  -o cmTC_546c9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c45aa/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c45aa.dir/build.make CMakeFiles/cmTC_c45aa.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c45aa.dir/HAVE_SYS_CDEFS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_c45aa.dir/HAVE_SYS_CDEFS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_CDEFS_H.c
Linking C executable cmTC_c45aa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c45aa.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_c45aa.dir/HAVE_SYS_CDEFS_H.c.o  -o cmTC_c45aa 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_05c7f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_05c7f.dir/build.make CMakeFiles/cmTC_05c7f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_05c7f.dir/HAVE_SYS_STATFS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_05c7f.dir/HAVE_SYS_STATFS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_STATFS_H.c
Linking C executable cmTC_05c7f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_05c7f.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_05c7f.dir/HAVE_SYS_STATFS_H.c.o  -o cmTC_05c7f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d2836/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d2836.dir/build.make CMakeFiles/cmTC_d2836.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d2836.dir/HAVE_SYS_STATVFS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d2836.dir/HAVE_SYS_STATVFS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_STATVFS_H.c
Linking C executable cmTC_d2836
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d2836.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_d2836.dir/HAVE_SYS_STATVFS_H.c.o  -o cmTC_d2836 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1c875/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1c875.dir/build.make CMakeFiles/cmTC_1c875.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1c875.dir/HAVE_SYS_SYSMACROS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_1c875.dir/HAVE_SYS_SYSMACROS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SYSMACROS_H.c
Linking C executable cmTC_1c875
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1c875.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_1c875.dir/HAVE_SYS_SYSMACROS_H.c.o  -o cmTC_1c875 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c40cf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c40cf.dir/build.make CMakeFiles/cmTC_c40cf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c40cf.dir/HAVE_SYS_VFS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_c40cf.dir/HAVE_SYS_VFS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_VFS_H.c
Linking C executable cmTC_c40cf
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c40cf.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_c40cf.dir/HAVE_SYS_VFS_H.c.o  -o cmTC_c40cf 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_19098/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_19098.dir/build.make CMakeFiles/cmTC_19098.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_19098.dir/HAVE_SYS_WAIT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_19098.dir/HAVE_SYS_WAIT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_WAIT_H.c
Linking C executable cmTC_19098
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_19098.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_19098.dir/HAVE_SYS_WAIT_H.c.o  -o cmTC_19098 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8136b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8136b.dir/build.make CMakeFiles/cmTC_8136b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8136b.dir/HAVE_WCTYPE_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8136b.dir/HAVE_WCTYPE_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WCTYPE_H.c
Linking C executable cmTC_8136b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8136b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_8136b.dir/HAVE_WCTYPE_H.c.o  -o cmTC_8136b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test SAFE_TO_DEFINE_EXTENSIONS succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_020f8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_020f8.dir/build.make CMakeFiles/cmTC_020f8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_020f8.dir/src.c.o
/usr/bin/cc   -w -DSAFE_TO_DEFINE_EXTENSIONS   -std=gnu11 -o CMakeFiles/cmTC_020f8.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_020f8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_020f8.dir/link.txt --verbose=1
/usr/bin/cc  -w -DSAFE_TO_DEFINE_EXTENSIONS    CMakeFiles/cmTC_020f8.dir/src.c.o  -o cmTC_020f8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#define __EXTENSIONS__ 1
   
   int main() { return 0;}
Determining if the function chown exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3fd0e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3fd0e.dir/build.make CMakeFiles/cmTC_3fd0e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3fd0e.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=chown  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_3fd0e.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_3fd0e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3fd0e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=chown  -fno-builtin    CMakeFiles/cmTC_3fd0e.dir/CheckFunctionExists.c.o  -o cmTC_3fd0e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function chroot exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_614d0/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_614d0.dir/build.make CMakeFiles/cmTC_614d0.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_614d0.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=chroot  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_614d0.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_614d0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_614d0.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=chroot  -fno-builtin    CMakeFiles/cmTC_614d0.dir/CheckFunctionExists.c.o  -o cmTC_614d0 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function ctime_r exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ca1bf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ca1bf.dir/build.make CMakeFiles/cmTC_ca1bf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ca1bf.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=ctime_r  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_ca1bf.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_ca1bf
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ca1bf.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=ctime_r  -fno-builtin    CMakeFiles/cmTC_ca1bf.dir/CheckFunctionExists.c.o  -o cmTC_ca1bf 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fchdir exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8f680/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8f680.dir/build.make CMakeFiles/cmTC_8f680.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8f680.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fchdir  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_8f680.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_8f680
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8f680.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fchdir  -fno-builtin    CMakeFiles/cmTC_8f680.dir/CheckFunctionExists.c.o  -o cmTC_8f680 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fchmod exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_63087/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_63087.dir/build.make CMakeFiles/cmTC_63087.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_63087.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fchmod  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_63087.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_63087
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_63087.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fchmod  -fno-builtin    CMakeFiles/cmTC_63087.dir/CheckFunctionExists.c.o  -o cmTC_63087 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fchown exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e54ac/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e54ac.dir/build.make CMakeFiles/cmTC_e54ac.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e54ac.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fchown  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_e54ac.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_e54ac
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e54ac.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fchown  -fno-builtin    CMakeFiles/cmTC_e54ac.dir/CheckFunctionExists.c.o  -o cmTC_e54ac 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fdopendir exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4c3aa/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4c3aa.dir/build.make CMakeFiles/cmTC_4c3aa.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4c3aa.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fdopendir  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_4c3aa.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_4c3aa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4c3aa.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fdopendir  -fno-builtin    CMakeFiles/cmTC_4c3aa.dir/CheckFunctionExists.c.o  -o cmTC_4c3aa 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fstat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3dd51/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_3dd51.dir/build.make CMakeFiles/cmTC_3dd51.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3dd51.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fstat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_3dd51.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_3dd51
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3dd51.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fstat  -fno-builtin    CMakeFiles/cmTC_3dd51.dir/CheckFunctionExists.c.o  -o cmTC_3dd51 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fstatat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9a673/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9a673.dir/build.make CMakeFiles/cmTC_9a673.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9a673.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fstatat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_9a673.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_9a673
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9a673.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fstatat  -fno-builtin    CMakeFiles/cmTC_9a673.dir/CheckFunctionExists.c.o  -o cmTC_9a673 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fstatfs exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0714b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0714b.dir/build.make CMakeFiles/cmTC_0714b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0714b.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fstatfs  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_0714b.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_0714b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0714b.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fstatfs  -fno-builtin    CMakeFiles/cmTC_0714b.dir/CheckFunctionExists.c.o  -o cmTC_0714b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fstatvfs exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_434b7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_434b7.dir/build.make CMakeFiles/cmTC_434b7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_434b7.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fstatvfs  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_434b7.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_434b7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_434b7.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fstatvfs  -fno-builtin    CMakeFiles/cmTC_434b7.dir/CheckFunctionExists.c.o  -o cmTC_434b7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function futimens exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0fd3e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0fd3e.dir/build.make CMakeFiles/cmTC_0fd3e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0fd3e.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=futimens  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_0fd3e.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_0fd3e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0fd3e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=futimens  -fno-builtin    CMakeFiles/cmTC_0fd3e.dir/CheckFunctionExists.c.o  -o cmTC_0fd3e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function futimes exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_34493/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_34493.dir/build.make CMakeFiles/cmTC_34493.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_34493.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=futimes  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_34493.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_34493
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_34493.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=futimes  -fno-builtin    CMakeFiles/cmTC_34493.dir/CheckFunctionExists.c.o  -o cmTC_34493 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function futimesat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a1086/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a1086.dir/build.make CMakeFiles/cmTC_a1086.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a1086.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=futimesat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_a1086.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_a1086
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a1086.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=futimesat  -fno-builtin    CMakeFiles/cmTC_a1086.dir/CheckFunctionExists.c.o  -o cmTC_a1086 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function getgrgid_r exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b1ead/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b1ead.dir/build.make CMakeFiles/cmTC_b1ead.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b1ead.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=getgrgid_r  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_b1ead.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_b1ead
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b1ead.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=getgrgid_r  -fno-builtin    CMakeFiles/cmTC_b1ead.dir/CheckFunctionExists.c.o  -o cmTC_b1ead 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function getgrnam_r exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_32c59/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_32c59.dir/build.make CMakeFiles/cmTC_32c59.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_32c59.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=getgrnam_r  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_32c59.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_32c59
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_32c59.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=getgrnam_r  -fno-builtin    CMakeFiles/cmTC_32c59.dir/CheckFunctionExists.c.o  -o cmTC_32c59 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function getpwnam_r exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_22e2e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_22e2e.dir/build.make CMakeFiles/cmTC_22e2e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_22e2e.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=getpwnam_r  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_22e2e.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_22e2e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_22e2e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=getpwnam_r  -fno-builtin    CMakeFiles/cmTC_22e2e.dir/CheckFunctionExists.c.o  -o cmTC_22e2e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function getpid exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_89b24/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_89b24.dir/build.make CMakeFiles/cmTC_89b24.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_89b24.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=getpid  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_89b24.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_89b24
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_89b24.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=getpid  -fno-builtin    CMakeFiles/cmTC_89b24.dir/CheckFunctionExists.c.o  -o cmTC_89b24 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function lchown exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_25662/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_25662.dir/build.make CMakeFiles/cmTC_25662.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_25662.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=lchown  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_25662.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_25662
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_25662.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=lchown  -fno-builtin    CMakeFiles/cmTC_25662.dir/CheckFunctionExists.c.o  -o cmTC_25662 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function link exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0b518/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0b518.dir/build.make CMakeFiles/cmTC_0b518.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0b518.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=link  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_0b518.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_0b518
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0b518.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=link  -fno-builtin    CMakeFiles/cmTC_0b518.dir/CheckFunctionExists.c.o  -o cmTC_0b518 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function lstat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_31474/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_31474.dir/build.make CMakeFiles/cmTC_31474.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_31474.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=lstat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_31474.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_31474
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_31474.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=lstat  -fno-builtin    CMakeFiles/cmTC_31474.dir/CheckFunctionExists.c.o  -o cmTC_31474 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function lutimes exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a0f95/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a0f95.dir/build.make CMakeFiles/cmTC_a0f95.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a0f95.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=lutimes  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_a0f95.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_a0f95
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a0f95.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=lutimes  -fno-builtin    CMakeFiles/cmTC_a0f95.dir/CheckFunctionExists.c.o  -o cmTC_a0f95 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function mbrtowc exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_32383/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_32383.dir/build.make CMakeFiles/cmTC_32383.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_32383.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=mbrtowc  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_32383.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_32383
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_32383.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=mbrtowc  -fno-builtin    CMakeFiles/cmTC_32383.dir/CheckFunctionExists.c.o  -o cmTC_32383 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function mkdir exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_85b06/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_85b06.dir/build.make CMakeFiles/cmTC_85b06.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_85b06.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=mkdir  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_85b06.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_85b06
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_85b06.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=mkdir  -fno-builtin    CMakeFiles/cmTC_85b06.dir/CheckFunctionExists.c.o  -o cmTC_85b06 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function mkfifo exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fd9ed/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fd9ed.dir/build.make CMakeFiles/cmTC_fd9ed.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fd9ed.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=mkfifo  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_fd9ed.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_fd9ed
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fd9ed.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=mkfifo  -fno-builtin    CMakeFiles/cmTC_fd9ed.dir/CheckFunctionExists.c.o  -o cmTC_fd9ed 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function mknod exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0f66b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0f66b.dir/build.make CMakeFiles/cmTC_0f66b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0f66b.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=mknod  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_0f66b.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_0f66b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0f66b.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=mknod  -fno-builtin    CMakeFiles/cmTC_0f66b.dir/CheckFunctionExists.c.o  -o cmTC_0f66b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function mkstemp exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fbf4d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fbf4d.dir/build.make CMakeFiles/cmTC_fbf4d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fbf4d.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=mkstemp  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_fbf4d.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_fbf4d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fbf4d.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=mkstemp  -fno-builtin    CMakeFiles/cmTC_fbf4d.dir/CheckFunctionExists.c.o  -o cmTC_fbf4d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function nl_langinfo exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_36ebe/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_36ebe.dir/build.make CMakeFiles/cmTC_36ebe.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_36ebe.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=nl_langinfo  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_36ebe.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_36ebe
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_36ebe.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=nl_langinfo  -fno-builtin    CMakeFiles/cmTC_36ebe.dir/CheckFunctionExists.c.o  -o cmTC_36ebe 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function openat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4ba73/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4ba73.dir/build.make CMakeFiles/cmTC_4ba73.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4ba73.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=openat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_4ba73.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_4ba73
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4ba73.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=openat  -fno-builtin    CMakeFiles/cmTC_4ba73.dir/CheckFunctionExists.c.o  -o cmTC_4ba73 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function posix_spawnp exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_cb73c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_cb73c.dir/build.make CMakeFiles/cmTC_cb73c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_cb73c.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=posix_spawnp  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_cb73c.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_cb73c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_cb73c.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=posix_spawnp  -fno-builtin    CMakeFiles/cmTC_cb73c.dir/CheckFunctionExists.c.o  -o cmTC_cb73c 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function readlink exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c4400/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c4400.dir/build.make CMakeFiles/cmTC_c4400.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c4400.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=readlink  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_c4400.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_c4400
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c4400.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=readlink  -fno-builtin    CMakeFiles/cmTC_c4400.dir/CheckFunctionExists.c.o  -o cmTC_c4400 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function setenv exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6f545/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6f545.dir/build.make CMakeFiles/cmTC_6f545.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6f545.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=setenv  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_6f545.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_6f545
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6f545.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=setenv  -fno-builtin    CMakeFiles/cmTC_6f545.dir/CheckFunctionExists.c.o  -o cmTC_6f545 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function statfs exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a5774/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a5774.dir/build.make CMakeFiles/cmTC_a5774.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a5774.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=statfs  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_a5774.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_a5774
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a5774.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=statfs  -fno-builtin    CMakeFiles/cmTC_a5774.dir/CheckFunctionExists.c.o  -o cmTC_a5774 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function statvfs exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d9519/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d9519.dir/build.make CMakeFiles/cmTC_d9519.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d9519.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=statvfs  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_d9519.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_d9519
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d9519.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=statvfs  -fno-builtin    CMakeFiles/cmTC_d9519.dir/CheckFunctionExists.c.o  -o cmTC_d9519 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function strerror exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0fea2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0fea2.dir/build.make CMakeFiles/cmTC_0fea2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0fea2.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=strerror  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_0fea2.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_0fea2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0fea2.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=strerror  -fno-builtin    CMakeFiles/cmTC_0fea2.dir/CheckFunctionExists.c.o  -o cmTC_0fea2 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function symlink exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c179f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c179f.dir/build.make CMakeFiles/cmTC_c179f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c179f.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=symlink  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_c179f.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_c179f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c179f.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=symlink  -fno-builtin    CMakeFiles/cmTC_c179f.dir/CheckFunctionExists.c.o  -o cmTC_c179f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function timegm exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8e025/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8e025.dir/build.make CMakeFiles/cmTC_8e025.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8e025.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=timegm  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_8e025.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_8e025
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8e025.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=timegm  -fno-builtin    CMakeFiles/cmTC_8e025.dir/CheckFunctionExists.c.o  -o cmTC_8e025 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function tzset exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_23da4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_23da4.dir/build.make CMakeFiles/cmTC_23da4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_23da4.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=tzset  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_23da4.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_23da4
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_23da4.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=tzset  -fno-builtin    CMakeFiles/cmTC_23da4.dir/CheckFunctionExists.c.o  -o cmTC_23da4 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function unlinkat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_11da8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_11da8.dir/build.make CMakeFiles/cmTC_11da8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_11da8.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=unlinkat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_11da8.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_11da8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_11da8.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=unlinkat  -fno-builtin    CMakeFiles/cmTC_11da8.dir/CheckFunctionExists.c.o  -o cmTC_11da8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function utimes exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_94949/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_94949.dir/build.make CMakeFiles/cmTC_94949.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_94949.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=utimes  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_94949.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_94949
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_94949.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=utimes  -fno-builtin    CMakeFiles/cmTC_94949.dir/CheckFunctionExists.c.o  -o cmTC_94949 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function utimensat exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a1178/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a1178.dir/build.make CMakeFiles/cmTC_a1178.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a1178.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=utimensat  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_a1178.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_a1178
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a1178.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=utimensat  -fno-builtin    CMakeFiles/cmTC_a1178.dir/CheckFunctionExists.c.o  -o cmTC_a1178 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function vfork exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1756a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1756a.dir/build.make CMakeFiles/cmTC_1756a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1756a.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=vfork  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_1756a.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_1756a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1756a.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=vfork  -fno-builtin    CMakeFiles/cmTC_1756a.dir/CheckFunctionExists.c.o  -o cmTC_1756a 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wcrtomb exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a27f9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a27f9.dir/build.make CMakeFiles/cmTC_a27f9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a27f9.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wcrtomb  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_a27f9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_a27f9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a27f9.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wcrtomb  -fno-builtin    CMakeFiles/cmTC_a27f9.dir/CheckFunctionExists.c.o  -o cmTC_a27f9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wcscmp exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_36347/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_36347.dir/build.make CMakeFiles/cmTC_36347.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_36347.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wcscmp  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_36347.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_36347
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_36347.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wcscmp  -fno-builtin    CMakeFiles/cmTC_36347.dir/CheckFunctionExists.c.o  -o cmTC_36347 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wcscpy exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6bd36/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6bd36.dir/build.make CMakeFiles/cmTC_6bd36.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6bd36.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wcscpy  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_6bd36.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_6bd36
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6bd36.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wcscpy  -fno-builtin    CMakeFiles/cmTC_6bd36.dir/CheckFunctionExists.c.o  -o cmTC_6bd36 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wcslen exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f7409/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f7409.dir/build.make CMakeFiles/cmTC_f7409.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f7409.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wcslen  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_f7409.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_f7409
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f7409.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wcslen  -fno-builtin    CMakeFiles/cmTC_f7409.dir/CheckFunctionExists.c.o  -o cmTC_f7409 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wctomb exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d3664/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d3664.dir/build.make CMakeFiles/cmTC_d3664.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d3664.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wctomb  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_d3664.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_d3664
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d3664.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wctomb  -fno-builtin    CMakeFiles/cmTC_d3664.dir/CheckFunctionExists.c.o  -o cmTC_d3664 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function fseeko exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_38510/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_38510.dir/build.make CMakeFiles/cmTC_38510.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_38510.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=fseeko  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_38510.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_38510
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_38510.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=fseeko  -fno-builtin    CMakeFiles/cmTC_38510.dir/CheckFunctionExists.c.o  -o cmTC_38510 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function vprintf exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4c3a9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4c3a9.dir/build.make CMakeFiles/cmTC_4c3a9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4c3a9.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=vprintf  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_4c3a9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_4c3a9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4c3a9.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=vprintf  -fno-builtin    CMakeFiles/cmTC_4c3a9.dir/CheckFunctionExists.c.o  -o cmTC_4c3a9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wmemcmp exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_47cf9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_47cf9.dir/build.make CMakeFiles/cmTC_47cf9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_47cf9.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wmemcmp  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_47cf9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_47cf9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_47cf9.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wmemcmp  -fno-builtin    CMakeFiles/cmTC_47cf9.dir/CheckFunctionExists.c.o  -o cmTC_47cf9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wmemcpy exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5b2a8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5b2a8.dir/build.make CMakeFiles/cmTC_5b2a8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5b2a8.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wmemcpy  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_5b2a8.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_5b2a8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5b2a8.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wmemcpy  -fno-builtin    CMakeFiles/cmTC_5b2a8.dir/CheckFunctionExists.c.o  -o cmTC_5b2a8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function wmemmove exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ed298/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ed298.dir/build.make CMakeFiles/cmTC_ed298.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ed298.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=wmemmove  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_ed298.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_ed298
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ed298.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=wmemmove  -fno-builtin    CMakeFiles/cmTC_ed298.dir/CheckFunctionExists.c.o  -o cmTC_ed298 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test HAVE_READDIR_R succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1ab1e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1ab1e.dir/build.make CMakeFiles/cmTC_1ab1e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1ab1e.dir/src.c.o
/usr/bin/cc   -w -DHAVE_READDIR_R   -std=gnu11 -o CMakeFiles/cmTC_1ab1e.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_1ab1e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1ab1e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_READDIR_R    CMakeFiles/cmTC_1ab1e.dir/src.c.o  -o cmTC_1ab1e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include &lt;dirent.h&gt;
int main() {DIR *d = opendir("."); struct dirent e,*r; return readdir_r(d,&amp;e,&amp;r);}
Performing C SOURCE FILE Test HAVE_DIRFD succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_481e8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_481e8.dir/build.make CMakeFiles/cmTC_481e8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_481e8.dir/src.c.o
/usr/bin/cc   -w -DHAVE_DIRFD   -std=gnu11 -o CMakeFiles/cmTC_481e8.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_481e8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_481e8.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_DIRFD    CMakeFiles/cmTC_481e8.dir/src.c.o  -o cmTC_481e8 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include &lt;dirent.h&gt;
int main() {DIR *d = opendir("."); return dirfd(d);}
Performing C SOURCE FILE Test HAVE_READLINKAT succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_aee50/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_aee50.dir/build.make CMakeFiles/cmTC_aee50.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_aee50.dir/src.c.o
/usr/bin/cc   -w -DHAVE_READLINKAT   -std=gnu11 -o CMakeFiles/cmTC_aee50.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_aee50
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_aee50.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_READLINKAT    CMakeFiles/cmTC_aee50.dir/src.c.o  -o cmTC_aee50 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include &lt;fcntl.h&gt;
#include &lt;unistd.h&gt;
int main() {char buf[10]; return readlinkat(AT_FDCWD, "", buf, 0);}
Performing C SOURCE FILE Test MAJOR_IN_SYSMACROS succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_482ff/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_482ff.dir/build.make CMakeFiles/cmTC_482ff.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_482ff.dir/src.c.o
/usr/bin/cc   -w -DMAJOR_IN_SYSMACROS   -std=gnu11 -o CMakeFiles/cmTC_482ff.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_482ff
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_482ff.dir/link.txt --verbose=1
/usr/bin/cc  -w -DMAJOR_IN_SYSMACROS    CMakeFiles/cmTC_482ff.dir/src.c.o  -o cmTC_482ff 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
#include &lt;sys/sysmacros.h&gt;
int main() { return major(256); }
Determining if the EILSEQ exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ef3a1/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ef3a1.dir/build.make CMakeFiles/cmTC_ef3a1.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ef3a1.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ef3a1.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_ef3a1
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ef3a1.dir/link.txt --verbose=1
/usr/bin/cc  -w     CMakeFiles/cmTC_ef3a1.dir/CheckSymbolExists.c.o  -o cmTC_ef3a1 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;errno.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef EILSEQ
  return ((int*)(&amp;EILSEQ))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C SOURCE FILE Test HAVE_STRUCT_TM_TM_GMTOFF succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_232d1/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_232d1.dir/build.make CMakeFiles/cmTC_232d1.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_232d1.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_TM_TM_GMTOFF   -std=gnu11 -o CMakeFiles/cmTC_232d1.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_232d1
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_232d1.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_STRUCT_TM_TM_GMTOFF    CMakeFiles/cmTC_232d1.dir/src.c.o  -o cmTC_232d1 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

#include &lt;time.h&gt;

int main()
{
  (void)sizeof(((struct tm *)0)-&gt;tm_gmtoff);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_98e3b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_98e3b.dir/build.make CMakeFiles/cmTC_98e3b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_98e3b.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_MTIM_TV_NSEC   -std=gnu11 -o CMakeFiles/cmTC_98e3b.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_98e3b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_98e3b.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_STRUCT_STAT_ST_MTIM_TV_NSEC    CMakeFiles/cmTC_98e3b.dir/src.c.o  -o cmTC_98e3b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_mtim.tv_nsec);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_BLKSIZE succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f8b6f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f8b6f.dir/build.make CMakeFiles/cmTC_f8b6f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f8b6f.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_BLKSIZE   -std=gnu11 -o CMakeFiles/cmTC_f8b6f.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_f8b6f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f8b6f.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_STRUCT_STAT_ST_BLKSIZE    CMakeFiles/cmTC_f8b6f.dir/src.c.o  -o cmTC_f8b6f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_blksize);
  return 0;
}

Determining size of dev_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_94df9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_94df9.dir/build.make CMakeFiles/cmTC_94df9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_94df9.dir/DEV_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_94df9.dir/DEV_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/DEV_T.c
Linking C executable cmTC_94df9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_94df9.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_94df9.dir/DEV_T.c.o  -o cmTC_94df9 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of gid_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8a6d6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8a6d6.dir/build.make CMakeFiles/cmTC_8a6d6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8a6d6.dir/GID_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_8a6d6.dir/GID_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/GID_T.c
Linking C executable cmTC_8a6d6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8a6d6.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_8a6d6.dir/GID_T.c.o  -o cmTC_8a6d6 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of id_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_16357/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_16357.dir/build.make CMakeFiles/cmTC_16357.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_16357.dir/ID_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_16357.dir/ID_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/ID_T.c
Linking C executable cmTC_16357
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_16357.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_16357.dir/ID_T.c.o  -o cmTC_16357 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of mode_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2e27b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2e27b.dir/build.make CMakeFiles/cmTC_2e27b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2e27b.dir/MODE_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_2e27b.dir/MODE_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/MODE_T.c
Linking C executable cmTC_2e27b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2e27b.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_2e27b.dir/MODE_T.c.o  -o cmTC_2e27b 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of off_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dd3ad/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_dd3ad.dir/build.make CMakeFiles/cmTC_dd3ad.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dd3ad.dir/OFF_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_dd3ad.dir/OFF_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/OFF_T.c
Linking C executable cmTC_dd3ad
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd3ad.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_dd3ad.dir/OFF_T.c.o  -o cmTC_dd3ad 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of size_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5122f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5122f.dir/build.make CMakeFiles/cmTC_5122f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5122f.dir/SIZE_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5122f.dir/SIZE_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZE_T.c
Linking C executable cmTC_5122f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5122f.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_5122f.dir/SIZE_T.c.o  -o cmTC_5122f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of ssize_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_65fdc/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_65fdc.dir/build.make CMakeFiles/cmTC_65fdc.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_65fdc.dir/SSIZE_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_65fdc.dir/SSIZE_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SSIZE_T.c
Linking C executable cmTC_65fdc
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_65fdc.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_65fdc.dir/SSIZE_T.c.o  -o cmTC_65fdc 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of uid_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dbb0f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_dbb0f.dir/build.make CMakeFiles/cmTC_dbb0f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dbb0f.dir/UID_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_dbb0f.dir/UID_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/UID_T.c
Linking C executable cmTC_dbb0f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dbb0f.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_dbb0f.dir/UID_T.c.o  -o cmTC_dbb0f 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of pid_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d9e2d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d9e2d.dir/build.make CMakeFiles/cmTC_d9e2d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d9e2d.dir/PID_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d9e2d.dir/PID_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/PID_T.c
Linking C executable cmTC_d9e2d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d9e2d.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_d9e2d.dir/PID_T.c.o  -o cmTC_d9e2d 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining size of wchar_t passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ff493/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ff493.dir/build.make CMakeFiles/cmTC_ff493.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ff493.dir/SIZEOF_WCHAR_T.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ff493.dir/SIZEOF_WCHAR_T.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckTypeSize/SIZEOF_WCHAR_T.c
Linking C executable cmTC_ff493
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ff493.dir/link.txt --verbose=1
/usr/bin/cc  -w     -rdynamic CMakeFiles/cmTC_ff493.dir/SIZEOF_WCHAR_T.c.o  -o cmTC_ff493 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Checking support for ARCHIVE_CRYPTO_MD5_LIBC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_05b5d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_05b5d.dir/build.make CMakeFiles/cmTC_05b5d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_05b5d.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_05b5d.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_05b5d.dir/build.make:66: CMakeFiles/cmTC_05b5d.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_05b5d/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_md5_ctx ctx;
  archive_md5_init(&amp;ctx);
  archive_md5_update(&amp;ctx, *argv, argc);
  archive_md5_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_RMD160_LIBC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1b79f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1b79f.dir/build.make CMakeFiles/cmTC_1b79f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1b79f.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_1b79f.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_1b79f.dir/build.make:66: CMakeFiles/cmTC_1b79f.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1b79f/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_RMD160_COMPILE_TEST
#define ARCHIVE_CRYPTO_RMD160_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_rmd160_ctx ctx;
  archive_rmd160_init(&amp;ctx);
  archive_rmd160_update(&amp;ctx, *argv, argc);
  archive_rmd160_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_LIBC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_be8bb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_be8bb.dir/build.make CMakeFiles/cmTC_be8bb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_be8bb.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_be8bb.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_be8bb.dir/build.make:66: CMakeFiles/cmTC_be8bb.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_be8bb/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha1_ctx ctx;
  archive_sha1_init(&amp;ctx);
  archive_sha1_update(&amp;ctx, *argv, argc);
  archive_sha1_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b0a6e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b0a6e.dir/build.make CMakeFiles/cmTC_b0a6e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b0a6e.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_b0a6e.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_b0a6e.dir/build.make:66: CMakeFiles/cmTC_b0a6e.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b0a6e/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha256_ctx ctx;
  archive_sha256_init(&amp;ctx);
  archive_sha256_update(&amp;ctx, *argv, argc);
  archive_sha256_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_63637/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_63637.dir/build.make CMakeFiles/cmTC_63637.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_63637.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_63637.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_63637.dir/build.make:66: CMakeFiles/cmTC_63637.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_63637/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha384_ctx ctx;
  archive_sha384_init(&amp;ctx);
  archive_sha384_update(&amp;ctx, *argv, argc);
  archive_sha384_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1c518/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1c518.dir/build.make CMakeFiles/cmTC_1c518.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1c518.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_1c518.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_1c518.dir/build.make:66: CMakeFiles/cmTC_1c518.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1c518/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha512_ctx ctx;
  archive_sha512_init(&amp;ctx);
  archive_sha512_update(&amp;ctx, *argv, argc);
  archive_sha512_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBC2 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5f62d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5f62d.dir/build.make CMakeFiles/cmTC_5f62d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5f62d.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_5f62d.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_5f62d.dir/build.make:66: CMakeFiles/cmTC_5f62d.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5f62d/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBC2
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha256_ctx ctx;
  archive_sha256_init(&amp;ctx);
  archive_sha256_update(&amp;ctx, *argv, argc);
  archive_sha256_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBC2 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dad88/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_dad88.dir/build.make CMakeFiles/cmTC_dad88.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dad88.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_dad88.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_dad88.dir/build.make:66: CMakeFiles/cmTC_dad88.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_dad88/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBC2
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha384_ctx ctx;
  archive_sha384_init(&amp;ctx);
  archive_sha384_update(&amp;ctx, *argv, argc);
  archive_sha384_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBC2 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fe6cf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_fe6cf.dir/build.make CMakeFiles/cmTC_fe6cf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fe6cf.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_fe6cf.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_fe6cf.dir/build.make:66: CMakeFiles/cmTC_fe6cf.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_fe6cf/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBC2
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha512_ctx ctx;
  archive_sha512_init(&amp;ctx);
  archive_sha512_update(&amp;ctx, *argv, argc);
  archive_sha512_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBC3 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_94bee/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_94bee.dir/build.make CMakeFiles/cmTC_94bee.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_94bee.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_94bee.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_94bee.dir/build.make:66: CMakeFiles/cmTC_94bee.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_94bee/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBC3
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha256_ctx ctx;
  archive_sha256_init(&amp;ctx);
  archive_sha256_update(&amp;ctx, *argv, argc);
  archive_sha256_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBC3 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0f272/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0f272.dir/build.make CMakeFiles/cmTC_0f272.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0f272.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_0f272.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_0f272.dir/build.make:66: CMakeFiles/cmTC_0f272.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0f272/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBC3
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha384_ctx ctx;
  archive_sha384_init(&amp;ctx);
  archive_sha384_update(&amp;ctx, *argv, argc);
  archive_sha384_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBC3 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_91e5c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_91e5c.dir/build.make CMakeFiles/cmTC_91e5c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_91e5c.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_91e5c.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_91e5c.dir/build.make:66: CMakeFiles/cmTC_91e5c.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_91e5c/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBC3
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha512_ctx ctx;
  archive_sha512_init(&amp;ctx);
  archive_sha512_update(&amp;ctx, *argv, argc);
  archive_sha512_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_MD5_LIBSYSTEM failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_8a78e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_8a78e.dir/build.make CMakeFiles/cmTC_8a78e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8a78e.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_8a78e.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_8a78e.dir/build.make:66: CMakeFiles/cmTC_8a78e.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_8a78e/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_md5_ctx ctx;
  archive_md5_init(&amp;ctx);
  archive_md5_update(&amp;ctx, *argv, argc);
  archive_md5_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_LIBSYSTEM failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_920f9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_920f9.dir/build.make CMakeFiles/cmTC_920f9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_920f9.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_920f9.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_920f9.dir/build.make:66: CMakeFiles/cmTC_920f9.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_920f9/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha1_ctx ctx;
  archive_sha1_init(&amp;ctx);
  archive_sha1_update(&amp;ctx, *argv, argc);
  archive_sha1_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBSYSTEM failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1ab20/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1ab20.dir/build.make CMakeFiles/cmTC_1ab20.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1ab20.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_1ab20.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_1ab20.dir/build.make:66: CMakeFiles/cmTC_1ab20.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1ab20/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha256_ctx ctx;
  archive_sha256_init(&amp;ctx);
  archive_sha256_update(&amp;ctx, *argv, argc);
  archive_sha256_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBSYSTEM failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1c3b4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1c3b4.dir/build.make CMakeFiles/cmTC_1c3b4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1c3b4.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_1c3b4.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_1c3b4.dir/build.make:66: CMakeFiles/cmTC_1c3b4.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1c3b4/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha384_ctx ctx;
  archive_sha384_init(&amp;ctx);
  archive_sha384_update(&amp;ctx, *argv, argc);
  archive_sha384_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBSYSTEM failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1f43f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1f43f.dir/build.make CMakeFiles/cmTC_1f43f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1f43f.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_1f43f.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_1f43f.dir/build.make:66: CMakeFiles/cmTC_1f43f.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1f43f/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha512_ctx ctx;
  archive_sha512_init(&amp;ctx);
  archive_sha512_update(&amp;ctx, *argv, argc);
  archive_sha512_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_MD5_OPENSSL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4e70d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4e70d.dir/build.make CMakeFiles/cmTC_4e70d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4e70d.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_4e70d.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_4e70d.dir/build.make:66: CMakeFiles/cmTC_4e70d.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_4e70d/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_OPENSSL
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_md5_ctx ctx;
  archive_md5_init(&amp;ctx);
  archive_md5_update(&amp;ctx, *argv, argc);
  archive_md5_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_RMD160_OPENSSL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6d731/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6d731.dir/build.make CMakeFiles/cmTC_6d731.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6d731.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_6d731.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_6d731.dir/build.make:66: CMakeFiles/cmTC_6d731.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6d731/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_RMD160_COMPILE_TEST
#define ARCHIVE_CRYPTO_RMD160_OPENSSL
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_rmd160_ctx ctx;
  archive_rmd160_init(&amp;ctx);
  archive_rmd160_update(&amp;ctx, *argv, argc);
  archive_rmd160_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_OPENSSL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ffc81/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ffc81.dir/build.make CMakeFiles/cmTC_ffc81.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ffc81.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_ffc81.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_ffc81.dir/build.make:66: CMakeFiles/cmTC_ffc81.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ffc81/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_OPENSSL
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha1_ctx ctx;
  archive_sha1_init(&amp;ctx);
  archive_sha1_update(&amp;ctx, *argv, argc);
  archive_sha1_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_OPENSSL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4f030/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4f030.dir/build.make CMakeFiles/cmTC_4f030.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4f030.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_4f030.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_4f030.dir/build.make:66: CMakeFiles/cmTC_4f030.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_4f030/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_OPENSSL
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha256_ctx ctx;
  archive_sha256_init(&amp;ctx);
  archive_sha256_update(&amp;ctx, *argv, argc);
  archive_sha256_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_OPENSSL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d5468/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d5468.dir/build.make CMakeFiles/cmTC_d5468.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d5468.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_d5468.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_d5468.dir/build.make:66: CMakeFiles/cmTC_d5468.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d5468/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_OPENSSL
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha384_ctx ctx;
  archive_sha384_init(&amp;ctx);
  archive_sha384_update(&amp;ctx, *argv, argc);
  archive_sha384_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_OPENSSL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_42588/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_42588.dir/build.make CMakeFiles/cmTC_42588.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_42588.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_42588.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_42588.dir/build.make:66: CMakeFiles/cmTC_42588.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_42588/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_OPENSSL
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha512_ctx ctx;
  archive_sha512_init(&amp;ctx);
  archive_sha512_update(&amp;ctx, *argv, argc);
  archive_sha512_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_MD5_LIBMD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_957fb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_957fb.dir/build.make CMakeFiles/cmTC_957fb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_957fb.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_957fb.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_957fb.dir/build.make:66: CMakeFiles/cmTC_957fb.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_957fb/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_md5_ctx ctx;
  archive_md5_init(&amp;ctx);
  archive_md5_update(&amp;ctx, *argv, argc);
  archive_md5_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_RMD160_LIBMD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_67fee/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_67fee.dir/build.make CMakeFiles/cmTC_67fee.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_67fee.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_67fee.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_67fee.dir/build.make:66: CMakeFiles/cmTC_67fee.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_67fee/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_RMD160_COMPILE_TEST
#define ARCHIVE_CRYPTO_RMD160_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_rmd160_ctx ctx;
  archive_rmd160_init(&amp;ctx);
  archive_rmd160_update(&amp;ctx, *argv, argc);
  archive_rmd160_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_LIBMD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_11a69/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_11a69.dir/build.make CMakeFiles/cmTC_11a69.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_11a69.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_11a69.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_11a69.dir/build.make:66: CMakeFiles/cmTC_11a69.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_11a69/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha1_ctx ctx;
  archive_sha1_init(&amp;ctx);
  archive_sha1_update(&amp;ctx, *argv, argc);
  archive_sha1_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBMD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6d2e7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6d2e7.dir/build.make CMakeFiles/cmTC_6d2e7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6d2e7.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_6d2e7.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_6d2e7.dir/build.make:66: CMakeFiles/cmTC_6d2e7.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6d2e7/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha256_ctx ctx;
  archive_sha256_init(&amp;ctx);
  archive_sha256_update(&amp;ctx, *argv, argc);
  archive_sha256_final(&amp;ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBMD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9d067/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9d067.dir/build.make CMakeFiles/cmTC_9d067.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9d067.dir/check_crypto_md.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build -I/home/zachary/cmake/Utilities/cmlibarchive/libarchive -I/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp  -w    -std=gnu11 -o CMakeFiles/cmTC_9d067.dir/check_crypto_md.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/check_crypto_md.c:1118:10: fatal error: cm3p/kwiml/int.h: No such file or directory
 1118 | #include &lt;cm3p/kwiml/int.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_9d067.dir/build.make:66: CMakeFiles/cmTC_9d067.dir/check_crypto_md.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_9d067/fast] Error 2


Source file was:
/* config.h.  Generated from build/cmake/config.h.in by cmake configure */
#if defined(__osf__)
# define _OSF_SOURCE
#endif

/*
 * Ensure we have C99-style int64_t, etc, all defined.
 */

/* Define ZLIB_WINAPI if zlib was built on Visual Studio. */
/* #undef ZLIB_WINAPI */

/* Darwin ACL support */
/* #undef ARCHIVE_ACL_DARWIN */

/* FreeBSD ACL support */
/* #undef ARCHIVE_ACL_FREEBSD */

/* FreeBSD NFSv4 ACL support */
/* #undef ARCHIVE_ACL_FREEBSD_NFS4 */

/* Linux POSIX.1e ACL support via libacl */
/* #undef ARCHIVE_ACL_LIBACL */

/* Linux NFSv4 ACL support via librichacl */
/* #undef ARCHIVE_ACL_LIBRICHACL */

/* Solaris ACL support */
/* #undef ARCHIVE_ACL_SUNOS */

/* Solaris NFSv4 ACL support */
/* #undef ARCHIVE_ACL_SUNOS_NFS4 */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBC */

/* MD5 via ARCHIVE_CRYPTO_MD5_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_MD5_LIBSYSTEM */

/* MD5 via ARCHIVE_CRYPTO_MD5_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_MD5_NETTLE */

/* MD5 via ARCHIVE_CRYPTO_MD5_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_MD5_OPENSSL */

/* MD5 via ARCHIVE_CRYPTO_MD5_WIN supported. */
/* #undef ARCHIVE_CRYPTO_MD5_WIN */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_LIBC */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_NETTLE */

/* RMD160 via ARCHIVE_CRYPTO_RMD160_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_RMD160_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBC */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_LIBSYSTEM */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_NETTLE */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_OPENSSL */

/* SHA1 via ARCHIVE_CRYPTO_SHA1_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA1_WIN */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC2 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBC3 */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_LIBSYSTEM */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_NETTLE */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_OPENSSL */

/* SHA256 via ARCHIVE_CRYPTO_SHA256_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA256_WIN */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC2 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBC3 */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_LIBSYSTEM */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_NETTLE */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_OPENSSL */

/* SHA384 via ARCHIVE_CRYPTO_SHA384_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA384_WIN */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC2 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC2 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBC3 supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBC3 */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_LIBSYSTEM supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_LIBSYSTEM */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_NETTLE supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_NETTLE */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_OPENSSL supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_OPENSSL */

/* SHA512 via ARCHIVE_CRYPTO_SHA512_WIN supported. */
/* #undef ARCHIVE_CRYPTO_SHA512_WIN */

/* AIX xattr support */
/* #undef ARCHIVE_XATTR_AIX */

/* Darwin xattr support */
/* #undef ARCHIVE_XATTR_DARWIN */

/* FreeBSD xattr support */
/* #undef ARCHIVE_XATTR_FREEBSD */

/* Linux xattr support */
/* #undef ARCHIVE_XATTR_LINUX */

/* Version number of bsdcpio */
#define BSDCPIO_VERSION_STRING "3.4.2"

/* Version number of bsdtar */
#define BSDTAR_VERSION_STRING "3.4.2"

/* Version number of bsdcat */
#define BSDCAT_VERSION_STRING "3.4.2"

/* Define to 1 if you have the `acl_create_entry' function. */
/* #undef HAVE_ACL_CREATE_ENTRY */

/* Define to 1 if you have the `acl_get_fd_np' function. */
/* #undef HAVE_ACL_GET_FD_NP */

/* Define to 1 if you have the `acl_get_link' function. */
/* #undef HAVE_ACL_GET_LINK */

/* Define to 1 if you have the `acl_get_link_np' function. */
/* #undef HAVE_ACL_GET_LINK_NP */

/* Define to 1 if you have the `acl_get_perm' function. */
/* #undef HAVE_ACL_GET_PERM */

/* Define to 1 if you have the `acl_get_perm_np' function. */
/* #undef HAVE_ACL_GET_PERM_NP */

/* Define to 1 if you have the `acl_init' function. */
/* #undef HAVE_ACL_INIT */

/* Define to 1 if you have the &lt;acl/libacl.h&gt; header file. */
/* #undef HAVE_ACL_LIBACL_H */

/* Define to 1 if the system has the type `acl_permset_t'. */
/* #undef HAVE_ACL_PERMSET_T */

/* Define to 1 if you have the `acl_set_fd' function. */
/* #undef HAVE_ACL_SET_FD */

/* Define to 1 if you have the `acl_set_fd_np' function. */
/* #undef HAVE_ACL_SET_FD_NP */

/* Define to 1 if you have the `acl_set_file' function. */
/* #undef HAVE_ACL_SET_FILE */

/* Define to 1 if you have the `arc4random_buf' function. */
/* #undef HAVE_ARC4RANDOM_BUF */

/* Define to 1 if you have the &lt;attr/xattr.h&gt; header file. */
/* #undef HAVE_ATTR_XATTR_H */

/* Define to 1 if you have the &lt;Bcrypt.h&gt; header file. */
/* #undef HAVE_BCRYPT_H */

/* Define to 1 if you have the &lt;bsdxml.h&gt; header file. */
/* #undef HAVE_BSDXML_H */

/* Define to 1 if you have the &lt;bzlib.h&gt; header file. */
#define HAVE_BZLIB_H 1

/* Define to 1 if you have the `chflags' function. */
/* #undef HAVE_CHFLAGS */

/* Define to 1 if you have the `chown' function. */
#define HAVE_CHOWN 1

/* Define to 1 if you have the `chroot' function. */
#define HAVE_CHROOT 1

/* Define to 1 if you have the &lt;copyfile.h&gt; header file. */
/* #undef HAVE_COPYFILE_H */

/* Define to 1 if you have the `ctime_r' function. */
#define HAVE_CTIME_R 1

/* Define to 1 if you have the &lt;ctype.h&gt; header file. */
#define HAVE_CTYPE_H 1

/* Define to 1 if you have the `cygwin_conv_path' function. */
/* #undef HAVE_CYGWIN_CONV_PATH */

/* Define to 1 if you have the declaration of `ACE_GETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACL */

/* Define to 1 if you have the declaration of `ACE_GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_GETACLCNT */

/* Define to 1 if you have the declaration of `ACE_SETACL', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACE_SETACL */

/* Define to 1 if you have the declaration of `ACL_SYNCHRONIZE', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_SYNCHRONIZE */

/* Define to 1 if you have the declaration of `ACL_TYPE_EXTENDED', and to 0 if
   you don't. */
/* #undef HAVE_DECL_ACL_TYPE_EXTENDED */

/* Define to 1 if you have the declaration of `ACL_TYPE_NFS4', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_TYPE_NFS4 */

/* Define to 1 if you have the declaration of `ACL_USER', and to 0 if you
   don't. */
/* #undef HAVE_DECL_ACL_USER */

/* Define to 1 if you have the declaration of `SETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_SETACL */

/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */
#define HAVE_DECL_STRERROR_R 1

/* Define to 1 if you have the declaration of `XATTR_NOFOLLOW', and to 0 if
   you don't. */
/* #undef HAVE_DECL_XATTR_NOFOLLOW */

/* Define to 1 if you have the &lt;direct.h&gt; header file. */
/* #undef HAVE_DIRECT_H */

/* Define to 1 if you have the &lt;dirent.h&gt; header file, and it defines `DIR'.
   */
#define HAVE_DIRENT_H 1

/* Define to 1 if you have the `dirfd' function. */
#define HAVE_DIRFD 1

/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
/* #undef HAVE_DOPRNT */

/* Define to 1 if nl_langinfo supports D_MD_ORDER */
/* #undef HAVE_D_MD_ORDER */

/* A possible errno value for invalid file format errors */
/* #undef HAVE_EFTYPE */

/* A possible errno value for invalid file format errors */
#define HAVE_EILSEQ 1

/* Define to 1 if you have the &lt;errno.h&gt; header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the &lt;expat.h&gt; header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the &lt;ext2fs/ext2_fs.h&gt; header file. */
/* #undef HAVE_EXT2FS_EXT2_FS_H */

/* Define to 1 if you have the `extattr_get_file' function. */
/* #undef HAVE_EXTATTR_GET_FILE */

/* Define to 1 if you have the `extattr_list_file' function. */
/* #undef HAVE_EXTATTR_LIST_FILE */

/* Define to 1 if you have the `extattr_set_fd' function. */
/* #undef HAVE_EXTATTR_SET_FD */

/* Define to 1 if you have the `extattr_set_file' function. */
/* #undef HAVE_EXTATTR_SET_FILE */

/* Define to 1 if EXTATTR_NAMESPACE_USER is defined in sys/extattr.h. */
/* #undef HAVE_DECL_EXTATTR_NAMESPACE_USER */

/* Define to 1 if you have the declaration of `GETACL', and to 0 if you don't.
   */
/* #undef HAVE_DECL_GETACL */

/* Define to 1 if you have the declaration of `GETACLCNT', and to 0 if you
   don't. */
/* #undef HAVE_DECL_GETACLCNT */

/* Define to 1 if you have the `fchdir' function. */
#define HAVE_FCHDIR 1

/* Define to 1 if you have the `fchflags' function. */
/* #undef HAVE_FCHFLAGS */

/* Define to 1 if you have the `fchmod' function. */
#define HAVE_FCHMOD 1

/* Define to 1 if you have the `fchown' function. */
#define HAVE_FCHOWN 1

/* Define to 1 if you have the `fcntl' function. */
#define HAVE_FCNTL 1

/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fdopendir' function. */
#define HAVE_FDOPENDIR 1

/* Define to 1 if you have the `fgetea' function. */
/* #undef HAVE_FGETEA */

/* Define to 1 if you have the `fgetxattr' function. */
/* #undef HAVE_FGETXATTR */

/* Define to 1 if you have the `flistea' function. */
/* #undef HAVE_FLISTEA */

/* Define to 1 if you have the `flistxattr' function. */
/* #undef HAVE_FLISTXATTR */

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#define HAVE_FSEEKO 1

/* Define to 1 if you have the `fsetea' function. */
/* #undef HAVE_FSETEA */

/* Define to 1 if you have the `fsetxattr' function. */
#define HAVE_FSETXATTR 1

/* Define to 1 if you have the `fstat' function. */
#define HAVE_FSTAT 1

/* Define to 1 if you have the `fstatat' function. */
#define HAVE_FSTATAT 1

/* Define to 1 if you have the `fstatfs' function. */
#define HAVE_FSTATFS 1

/* Define to 1 if you have the `fstatvfs' function. */
#define HAVE_FSTATVFS 1

/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1

/* Define to 1 if you have the `futimens' function. */
#define HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#define HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#define HAVE_FUTIMESAT 1

/* Define to 1 if you have the `getea' function. */
/* #undef HAVE_GETEA */

/* Define to 1 if you have the `geteuid' function. */
#define HAVE_GETEUID 1

/* Define to 1 if you have the `getgrgid_r' function. */
#define HAVE_GETGRGID_R 1

/* Define to 1 if you have the `getgrnam_r' function. */
#define HAVE_GETGRNAM_R 1

/* Define to 1 if you have the `getpid' function. */
#define HAVE_GETPID 1

/* Define to 1 if you have the `getpwnam_r' function. */
#define HAVE_GETPWNAM_R 1

/* Define to 1 if you have the `getpwuid_r' function. */
#define HAVE_GETPWUID_R 1

/* Define to 1 if you have the `getvfsbyname' function. */
/* #undef HAVE_GETVFSBYNAME */

/* Define to 1 if you have the `getxattr' function. */
/* #undef HAVE_GETXATTR */

/* Define to 1 if you have the `gmtime_r' function. */
#define HAVE_GMTIME_R 1

/* Define to 1 if you have the &lt;grp.h&gt; header file. */
#define HAVE_GRP_H 1

/* Define to 1 if you have the `iconv' function. */
/* #undef HAVE_ICONV */

/* Define to 1 if you have the &lt;iconv.h&gt; header file. */
/* #undef HAVE_ICONV_H */

/* Define to 1 if you have the &lt;io.h&gt; header file. */
/* #undef HAVE_IO_H */

/* Define to 1 if you have the &lt;langinfo.h&gt; header file. */
#define HAVE_LANGINFO_H 1

/* Define to 1 if you have the `lchflags' function. */
/* #undef HAVE_LCHFLAGS */

/* Define to 1 if you have the `lchmod' function. */
/* #undef HAVE_LCHMOD */

/* Define to 1 if you have the `lchown' function. */
#define HAVE_LCHOWN 1

/* Define to 1 if you have the `lgetea' function. */
/* #undef HAVE_LGETEA */

/* Define to 1 if you have the `lgetxattr' function. */
/* #undef HAVE_LGETXATTR */

/* Define to 1 if you have the `acl' library (-lacl). */
/* #undef HAVE_LIBACL */

/* Define to 1 if you have the `attr' library (-lattr). */
/* #undef HAVE_LIBATTR */

/* Define to 1 if you have the `bsdxml' library (-lbsdxml). */
/* #undef HAVE_LIBBSDXML */

/* Define to 1 if you have the `bz2' library (-lbz2). */
#define HAVE_LIBBZ2 1

/* Define to 1 if you have the `b2' library (-lb2). */
/* #undef HAVE_LIBB2 */

/* Define to 1 if you have the &lt;blake2.h&gt; header file. */
/* #undef HAVE_BLAKE2_H */

/* Define to 1 if you have the `charset' library (-lcharset). */
/* #undef HAVE_LIBCHARSET */

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#define HAVE_LIBCRYPTO 1

/* Define to 1 if you have the `expat' library (-lexpat). */
/* #undef HAVE_LIBEXPAT */

/* Define to 1 if you have the `gcc' library (-lgcc). */
/* #undef HAVE_LIBGCC */

/* Define to 1 if you have the `lz4' library (-llz4). */
/* #undef HAVE_LIBLZ4 */

/* Define to 1 if you have the `lzma' library (-llzma). */
#define HAVE_LIBLZMA 1

/* Define to 1 if you have the `lzmadec' library (-llzmadec). */
/* #undef HAVE_LIBLZMADEC */

/* Define to 1 if you have the `lzo2' library (-llzo2). */
/* #undef HAVE_LIBLZO2 */

/* Define to 1 if you have the `mbedcrypto' library (-lmbedcrypto). */
/* #undef HAVE_LIBMBEDCRYPTO */

/* Define to 1 if you have the `nettle' library (-lnettle). */
/* #undef HAVE_LIBNETTLE */

/* Define to 1 if you have the `pcre' library (-lpcre). */
/* #undef HAVE_LIBPCRE */

/* Define to 1 if you have the `pcreposix' library (-lpcreposix). */
/* #undef HAVE_LIBPCREPOSIX */

/* Define to 1 if you have the `xml2' library (-lxml2). */
/* #undef HAVE_LIBXML2 */

/* Define to 1 if you have the &lt;libxml/xmlreader.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLREADER_H */

/* Define to 1 if you have the &lt;libxml/xmlwriter.h&gt; header file. */
/* #undef HAVE_LIBXML_XMLWRITER_H */

/* Define to 1 if you have the `z' library (-lz). */
#define HAVE_LIBZ 1

/* Define to 1 if you have the `zstd' library (-lzstd). */
#define HAVE_LIBZSTD 1

/* Define to 1 if you have the &lt;limits.h&gt; header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
#define HAVE_LINK 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the &lt;linux/fiemap.h&gt; header file. */
#define HAVE_LINUX_FIEMAP_H 1

/* Define to 1 if you have the &lt;linux/fs.h&gt; header file. */
#define HAVE_LINUX_FS_H 1

/* Define to 1 if you have the &lt;linux/magic.h&gt; header file. */
#define HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the &lt;linux/types.h&gt; header file. */
#define HAVE_LINUX_TYPES_H 1

/* Define to 1 if you have the `listea' function. */
/* #undef HAVE_LISTEA */

/* Define to 1 if you have the `listxattr' function. */
/* #undef HAVE_LISTXATTR */

/* Define to 1 if you have the `llistea' function. */
/* #undef HAVE_LLISTEA */

/* Define to 1 if you have the `llistxattr' function. */
/* #undef HAVE_LLISTXATTR */

/* Define to 1 if you have the &lt;localcharset.h&gt; header file. */
/* #undef HAVE_LOCALCHARSET_H */

/* Define to 1 if you have the `locale_charset' function. */
/* #undef HAVE_LOCALE_CHARSET */

/* Define to 1 if you have the &lt;locale.h&gt; header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if you have the `localtime_r' function. */
#define HAVE_LOCALTIME_R 1

/* Define to 1 if the system has the type `long long int'. */
/* #undef HAVE_LONG_LONG_INT */

/* Define to 1 if you have the `lsetea' function. */
/* #undef HAVE_LSETEA */

/* Define to 1 if you have the `lsetxattr' function. */
/* #undef HAVE_LSETXATTR */

/* Define to 1 if you have the `lstat' function. */
#define HAVE_LSTAT 1

/* Define to 1 if `lstat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_LSTAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the `lutimes' function. */
#define HAVE_LUTIMES 1

/* Define to 1 if you have the &lt;lz4hc.h&gt; header file. */
/* #undef HAVE_LZ4HC_H */

/* Define to 1 if you have the &lt;lz4.h&gt; header file. */
/* #undef HAVE_LZ4_H */

/* Define to 1 if you have the &lt;lzmadec.h&gt; header file. */
/* #undef HAVE_LZMADEC_H */

/* Define to 1 if you have the &lt;lzma.h&gt; header file. */
#define HAVE_LZMA_H 1

/* Define to 1 if you have a working `lzma_stream_encoder_mt' function. */
/* #undef HAVE_LZMA_STREAM_ENCODER_MT */

/* Define to 1 if you have the &lt;lzo/lzo1x.h&gt; header file. */
/* #undef HAVE_LZO_LZO1X_H */

/* Define to 1 if you have the &lt;lzo/lzoconf.h&gt; header file. */
/* #undef HAVE_LZO_LZOCONF_H */

/* Define to 1 if you have the `mbrtowc' function. */
#define HAVE_MBRTOWC 1

/* Define to 1 if you have the &lt;membership.h&gt; header file. */
/* #undef HAVE_MEMBERSHIP_H */

/* Define to 1 if you have the `memmove' function. */
#define HAVE_MEMMOVE 1

/* Define to 1 if you have the &lt;memory.h&gt; header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1

/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1

/* Define to 1 if you have the `mknod' function. */
#define HAVE_MKNOD 1

/* Define to 1 if you have the `mkstemp' function. */
#define HAVE_MKSTEMP 1

/* Define to 1 if you have the &lt;ndir.h&gt; header file, and it defines `DIR'. */
/* #undef HAVE_NDIR_H */

/* Define to 1 if you have the &lt;nettle/aes.h&gt; header file. */
/* #undef HAVE_NETTLE_AES_H */

/* Define to 1 if you have the &lt;nettle/hmac.h&gt; header file. */
/* #undef HAVE_NETTLE_HMAC_H */

/* Define to 1 if you have the &lt;nettle/md5.h&gt; header file. */
/* #undef HAVE_NETTLE_MD5_H */

/* Define to 1 if you have the &lt;nettle/pbkdf2.h&gt; header file. */
/* #undef HAVE_NETTLE_PBKDF2_H */

/* Define to 1 if you have the &lt;nettle/ripemd160.h&gt; header file. */
/* #undef HAVE_NETTLE_RIPEMD160_H */

/* Define to 1 if you have the &lt;nettle/sha.h&gt; header file. */
/* #undef HAVE_NETTLE_SHA_H */

/* Define to 1 if you have the `nl_langinfo' function. */
#define HAVE_NL_LANGINFO 1

/* Define to 1 if you have the `openat' function. */
#define HAVE_OPENAT 1

/* Define to 1 if you have the &lt;paths.h&gt; header file. */
#define HAVE_PATHS_H 1

/* Define to 1 if you have the &lt;pcreposix.h&gt; header file. */
/* #undef HAVE_PCREPOSIX_H */

/* Define to 1 if you have the `pipe' function. */
#define HAVE_PIPE 1

/* Define to 1 if you have the `PKCS5_PBKDF2_HMAC_SHA1' function. */
/* #undef HAVE_PKCS5_PBKDF2_HMAC_SHA1 */

/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1

/* Define to 1 if you have the &lt;poll.h&gt; header file. */
#define HAVE_POLL_H 1

/* Define to 1 if you have the `posix_spawnp' function. */
#define HAVE_POSIX_SPAWNP 1

/* Define to 1 if you have the &lt;process.h&gt; header file. */
/* #undef HAVE_PROCESS_H */

/* Define to 1 if you have the &lt;pthread.h&gt; header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the &lt;pwd.h&gt; header file. */
#define HAVE_PWD_H 1

/* Define to 1 if you have the `readdir_r' function. */
#define HAVE_READDIR_R 1

/* Define to 1 if you have the `readlink' function. */
#define HAVE_READLINK 1

/* Define to 1 if you have the `readlinkat' function. */
#define HAVE_READLINKAT 1

/* Define to 1 if you have the `readpassphrase' function. */
/* #undef HAVE_READPASSPHRASE */

/* Define to 1 if you have the &lt;readpassphrase.h&gt; header file. */
/* #undef HAVE_READPASSPHRASE_H */

/* Define to 1 if you have the &lt;regex.h&gt; header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#define HAVE_SELECT 1

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if you have the `sigaction' function. */
#define HAVE_SIGACTION 1

/* Define to 1 if you have the &lt;signal.h&gt; header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the &lt;spawn.h&gt; header file. */
#define HAVE_SPAWN_H 1

/* Define to 1 if you have the `statfs' function. */
#define HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#define HAVE_STATVFS 1

/* Define to 1 if `stat' has the bug that it succeeds when given the
   zero-length file name argument. */
/* #undef HAVE_STAT_EMPTY_STRING_BUG */

/* Define to 1 if you have the &lt;stdarg.h&gt; header file. */
#define HAVE_STDARG_H 1

/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#define HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the `strerror_r' function. */
#define HAVE_STRERROR_R 1

/* Define to 1 if you have the `strftime' function. */
#define HAVE_STRFTIME 1

/* Define to 1 if you have the &lt;strings.h&gt; header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the &lt;string.h&gt; header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strrchr' function. */
#define HAVE_STRRCHR 1

/* Define to 1 if `f_namemax' is a member of `struct statfs'. */
/* #undef HAVE_STRUCT_STATFS_F_NAMEMAX */

/* Define to 1 if `f_iosize' is a member of `struct statvfs'. */
/* #undef HAVE_STRUCT_STATVFS_F_IOSIZE */

/* Define to 1 if `st_birthtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIME */

/* Define to 1 if `st_birthtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC */

/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1

/* Define to 1 if `st_flags' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_FLAGS */

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC */

/* Define to 1 if `st_mtime_n' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_N */

/* Define to 1 if `st_mtime_usec' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_MTIME_USEC */

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1

/* Define to 1 if `st_umtime' is a member of `struct stat'. */
/* #undef HAVE_STRUCT_STAT_ST_UMTIME */

/* Define to 1 if `tm_gmtoff' is a member of `struct tm'. */
#define HAVE_STRUCT_TM_TM_GMTOFF 1

/* Define to 1 if `__tm_gmtoff' is a member of `struct tm'. */
/* #undef HAVE_STRUCT_TM___TM_GMTOFF */

/* Define to 1 if you have `struct vfsconf'. */
/* #undef HAVE_STRUCT_VFSCONF */

/* Define to 1 if you have `struct xvfsconf'. */
/* #undef HAVE_STRUCT_XVFSCONF */

/* Define to 1 if you have the `symlink' function. */
#define HAVE_SYMLINK 1

/* Define to 1 if you have the &lt;sys/acl.h&gt; header file. */
/* #undef HAVE_SYS_ACL_H */

/* Define to 1 if you have the &lt;sys/cdefs.h&gt; header file. */
#define HAVE_SYS_CDEFS_H 1

/* Define to 1 if you have the &lt;sys/dir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_DIR_H */

/* Define to 1 if you have the &lt;sys/ea.h&gt; header file. */
/* #undef HAVE_SYS_EA_H */

/* Define to 1 if you have the &lt;sys/extattr.h&gt; header file. */
/* #undef HAVE_SYS_EXTATTR_H */

/* Define to 1 if you have the &lt;sys/ioctl.h&gt; header file. */
#define HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the &lt;sys/mkdev.h&gt; header file. */
/* #undef HAVE_SYS_MKDEV_H */

/* Define to 1 if you have the &lt;sys/mount.h&gt; header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the &lt;sys/ndir.h&gt; header file, and it defines `DIR'.
   */
/* #undef HAVE_SYS_NDIR_H */

/* Define to 1 if you have the &lt;sys/param.h&gt; header file. */
#define HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the &lt;sys/poll.h&gt; header file. */
#define HAVE_SYS_POLL_H 1

/* Define to 1 if you have the &lt;sys/richacl.h&gt; header file. */
/* #undef HAVE_SYS_RICHACL_H */

/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */
#define HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the &lt;sys/statfs.h&gt; header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the &lt;sys/statvfs.h&gt; header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */
#define HAVE_SYS_STAT_H 1


/* Define to 1 if you have the &lt;sys/sysmacros.h&gt; header file. */
#define HAVE_SYS_SYSMACROS_H 1

/* Define to 1 if you have the &lt;sys/time.h&gt; header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the &lt;sys/utime.h&gt; header file. */
/* #undef HAVE_SYS_UTIME_H */

/* Define to 1 if you have the &lt;sys/utsname.h&gt; header file. */
#define HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the &lt;sys/vfs.h&gt; header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have &lt;sys/wait.h&gt; that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the &lt;sys/xattr.h&gt; header file. */
#define HAVE_SYS_XATTR_H 1

/* Define to 1 if you have the `timegm' function. */
#define HAVE_TIMEGM 1

/* Define to 1 if you have the &lt;time.h&gt; header file. */
#define HAVE_TIME_H 1

/* Define to 1 if you have the `tzset' function. */
#define HAVE_TZSET 1

/* Define to 1 if you have the &lt;unistd.h&gt; header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unlinkat' function. */
#define HAVE_UNLINKAT 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1

/* Define to 1 if the system has the type `unsigned long long'. */
/* #undef HAVE_UNSIGNED_LONG_LONG */

/* Define to 1 if the system has the type `unsigned long long int'. */
/* #undef HAVE_UNSIGNED_LONG_LONG_INT */

/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1

/* Define to 1 if you have the `utimensat' function. */
#define HAVE_UTIMENSAT 1

/* Define to 1 if you have the `utimes' function. */
#define HAVE_UTIMES 1

/* Define to 1 if you have the &lt;utime.h&gt; header file. */
#define HAVE_UTIME_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the `vprintf' function. */
#define HAVE_VPRINTF 1

/* Define to 1 if you have the &lt;wchar.h&gt; header file. */
#define HAVE_WCHAR_H 1

/* Define to 1 if the system has the type `wchar_t'. */
#define HAVE_WCHAR_T 1

/* Define to 1 if you have the `wcrtomb' function. */
#define HAVE_WCRTOMB 1

/* Define to 1 if you have the `wcscmp' function. */
#define HAVE_WCSCMP 1

/* Define to 1 if you have the `wcscpy' function. */
#define HAVE_WCSCPY 1

/* Define to 1 if you have the `wcslen' function. */
#define HAVE_WCSLEN 1

/* Define to 1 if you have the `wctomb' function. */
#define HAVE_WCTOMB 1

/* Define to 1 if you have the &lt;wctype.h&gt; header file. */
#define HAVE_WCTYPE_H 1

/* Define to 1 if you have the &lt;wincrypt.h&gt; header file. */
/* #undef HAVE_WINCRYPT_H */

/* Define to 1 if you have the &lt;windows.h&gt; header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the &lt;winioctl.h&gt; header file. */
/* #undef HAVE_WINIOCTL_H */

/* Define to 1 if you have _CrtSetReportMode in &lt;crtdbg.h&gt;  */
/* #undef HAVE__CrtSetReportMode */

/* Define to 1 if you have the `wmemcmp' function. */
#define HAVE_WMEMCMP 1

/* Define to 1 if you have the `wmemcpy' function. */
#define HAVE_WMEMCPY 1

/* Define to 1 if you have the `wmemmove' function. */
#define HAVE_WMEMMOVE 1

/* Define to 1 if you have a working EXT2_IOC_GETFLAGS */
/* #undef HAVE_WORKING_EXT2_IOC_GETFLAGS */

/* Define to 1 if you have a working FS_IOC_GETFLAGS */
#define HAVE_WORKING_FS_IOC_GETFLAGS 1

/* Define to 1 if you have the &lt;zlib.h&gt; header file. */
#define HAVE_ZLIB_H 1

/* Define to 1 if you have the &lt;zstd.h&gt; header file. */
#define HAVE_ZSTD_H 1

/* Define to 1 if you have the `_ctime64_s' function. */
/* #undef HAVE__CTIME64_S */

/* Define to 1 if you have the `_fseeki64' function. */
/* #undef HAVE__FSEEKI64 */

/* Define to 1 if you have the `_get_timezone' function. */
/* #undef HAVE__GET_TIMEZONE */

/* Define to 1 if you have the `_gmtime64_s' function. */
/* #undef HAVE__GMTIME64_S */

/* Define to 1 if you have the `_localtime64_s' function. */
/* #undef HAVE__LOCALTIME64_S */

/* Define to 1 if you have the `_mkgmtime64' function. */
/* #undef HAVE__MKGMTIME64 */

/* Define as const if the declaration of iconv() needs const. */
#define ICONV_CONST 

/* Version number of libarchive as a single integer */
#define LIBARCHIVE_VERSION_NUMBER "3004002"

/* Version number of libarchive */
#define LIBARCHIVE_VERSION_STRING "3.4.2"

/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
/* #undef LSTAT_FOLLOWS_SLASHED_SYMLINK */

/* Define to 1 if `major', `minor', and `makedev' are declared in &lt;mkdev.h&gt;.
   */
/* #undef MAJOR_IN_MKDEV */

/* Define to 1 if `major', `minor', and `makedev' are declared in
   &lt;sysmacros.h&gt;. */
#define MAJOR_IN_SYSMACROS 1

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* The size of `wchar_t', as computed by sizeof. */
#define SIZEOF_WCHAR_T 4

/* Define to 1 if strerror_r returns char *. */
/* #undef STRERROR_R_CHAR_P */

/* Define to 1 if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;. */
#define TIME_WITH_SYS_TIME 1

/*
 * Some platform requires a macro to use extension functions.
 */
#define SAFE_TO_DEFINE_EXTENSIONS 1
#ifdef SAFE_TO_DEFINE_EXTENSIONS
/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#endif /* SAFE_TO_DEFINE_EXTENSIONS */

/* Version number of package */
#define VERSION "3.4.2"

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to control Windows SDK version */
#ifndef NTDDI_VERSION
/* #undef NTDDI_VERSION */
#endif // NTDDI_VERSION

#ifndef _WIN32_WINNT
/* #undef _WIN32_WINNT */
#endif // _WIN32_WINNT

#ifndef WINVER
/* #undef WINVER */
#endif // WINVER

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef gid_t */

/* Define to `unsigned long' if &lt;sys/types.h&gt; does not define. */
/* #undef id_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef mode_t */

/* Define to `long long' if &lt;sys/types.h&gt; does not define. */
/* #undef off_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef pid_t */

/* Define to `unsigned int' if &lt;sys/types.h&gt; does not define. */
/* #undef size_t */

/* Define to `int' if &lt;sys/types.h&gt; does not define. */
/* #undef ssize_t */

/* Define to `int' if &lt;sys/types.h&gt; doesn't define. */
/* #undef uid_t */

#include &lt;cm3p/kwiml/int.h&gt;

#ifndef KWIML_INT_HAVE_INT64_T
typedef KWIML_INT_int64_t int64_t;
#endif
#ifndef KWIML_INT_HAVE_INT32_T
typedef KWIML_INT_int32_t int32_t;
#endif
#ifndef KWIML_INT_HAVE_INT16_T
typedef KWIML_INT_int16_t int16_t;
#endif
#ifndef KWIML_INT_HAVE_INT8_T
typedef KWIML_INT_int8_t int8_t;
#endif
#ifndef KWIML_INT_HAVE_INTPTR_T
typedef KWIML_INT_intptr_t intptr_t;
#endif
#ifndef KWIML_INT_HAVE_UINT64_T
typedef KWIML_INT_uint64_t uint64_t;
#endif
#ifndef KWIML_INT_HAVE_UINT32_T
typedef KWIML_INT_uint32_t uint32_t;
#endif
#ifndef KWIML_INT_HAVE_UINT16_T
typedef KWIML_INT_uint16_t uint16_t;
#endif
#ifndef KWIML_INT_HAVE_UINT8_T
typedef KWIML_INT_uint8_t uint8_t;
#endif
#ifndef KWIML_INT_HAVE_UINTPTR_T
typedef KWIML_INT_uintptr_t uintptr_t;
#endif

/* Define to 1 if you have the &lt;stdint.h&gt; header file. */
#ifdef KWIML_INT_HAVE_STDINT_H
# define HAVE_STDINT_H 1
#endif

/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */
#ifdef KWIML_INT_HAVE_INTTYPES_H
# define HAVE_INTTYPES_H 1
#endif


#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_digest_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) &amp;&amp; defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx-&gt;valid = 0;
	if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&amp;ctx-&gt;cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx-&gt;cryptProv, algId, 0, 0, &amp;ctx-&gt;hash)) {
		CryptReleaseContext(ctx-&gt;cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx-&gt;valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx-&gt;hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = (DWORD)bufsize;

	if (!ctx-&gt;valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx-&gt;hash, HP_HASHVAL, buf, &amp;siglen, 0);
	CryptDestroyHash(ctx-&gt;hash);
	CryptReleaseContext(ctx-&gt;cryptProv, 0);
	ctx-&gt;valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)

static int
__archive_mbedtls_md5init(archive_md5_ctx *ctx)
{
  mbedtls_md5_init(ctx);
  if (mbedtls_md5_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_md5_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_md5final(archive_md5_ctx *ctx, void *md)
{
  if (mbedtls_md5_finish_ret(ctx, md) == 0) {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_md5_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)

static int
__archive_mbedtls_ripemd160init(archive_rmd160_ctx *ctx)
{
  mbedtls_ripemd160_init(ctx);
  if (mbedtls_ripemd160_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_ripemd160_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (mbedtls_ripemd160_finish_ret(ctx, md) == 0) {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_ripemd160_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)

static int
__archive_mbedtls_sha1init(archive_sha1_ctx *ctx)
{
  mbedtls_sha1_init(ctx);
  if (mbedtls_sha1_starts_ret(ctx) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha1_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha1final(archive_sha1_ctx *ctx, void *md)
{
  if (mbedtls_sha1_finish_ret(ctx, md) == 0) {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha1_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)

static int
__archive_mbedtls_sha256init(archive_sha256_ctx *ctx)
{
  mbedtls_sha256_init(ctx);
  if (mbedtls_sha256_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha256_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (mbedtls_sha256_finish_ret(ctx, md) == 0) {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha256_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)

static int
__archive_mbedtls_sha384init(archive_sha384_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 1) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)

static int
__archive_mbedtls_sha512init(archive_sha512_ctx *ctx)
{
  mbedtls_sha512_init(ctx);
  if (mbedtls_sha512_starts_ret(ctx, 0) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  if (mbedtls_sha512_update_ret(ctx, indata, insize) == 0)
    return (ARCHIVE_OK);
  else
    return (ARCHIVE_FATAL);
}

static int
__archive_mbedtls_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (mbedtls_sha512_finish_ret(ctx, md) == 0) {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_OK);
  } else {
    mbedtls_sha512_free(ctx);
    return (ARCHIVE_FATAL);
  }
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  if ((*ctx = EVP_MD_CTX_new()) == NULL)
	return (ARCHIVE_FAILED);
  EVP_DigestInit(*ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(*ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  if (*ctx) {
    EVP_DigestFinal(*ctx, md, NULL);
    EVP_MD_CTX_free(*ctx);
    *ctx = NULL;
  }
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Message Digest functions are set based on availability and by the
 * following order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. Nettle
 * 6. OpenSSL
 * 7. libmd
 * 8. Windows API
 */
const struct archive_digest __archive_digest =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &amp;__archive_libc_md5init,
  &amp;__archive_libc_md5update,
  &amp;__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &amp;__archive_libmd_md5init,
  &amp;__archive_libmd_md5update,
  &amp;__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &amp;__archive_libsystem_md5init,
  &amp;__archive_libsystem_md5update,
  &amp;__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_MBEDTLS)
  &amp;__archive_mbedtls_md5init,
  &amp;__archive_mbedtls_md5update,
  &amp;__archive_mbedtls_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &amp;__archive_nettle_md5init,
  &amp;__archive_nettle_md5update,
  &amp;__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &amp;__archive_openssl_md5init,
  &amp;__archive_openssl_md5update,
  &amp;__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &amp;__archive_windowsapi_md5init,
  &amp;__archive_windowsapi_md5update,
  &amp;__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &amp;__archive_stub_md5init,
  &amp;__archive_stub_md5update,
  &amp;__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &amp;__archive_libc_ripemd160init,
  &amp;__archive_libc_ripemd160update,
  &amp;__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &amp;__archive_libmd_ripemd160init,
  &amp;__archive_libmd_ripemd160update,
  &amp;__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_MBEDTLS)
  &amp;__archive_mbedtls_ripemd160init,
  &amp;__archive_mbedtls_ripemd160update,
  &amp;__archive_mbedtls_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &amp;__archive_nettle_ripemd160init,
  &amp;__archive_nettle_ripemd160update,
  &amp;__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &amp;__archive_openssl_ripemd160init,
  &amp;__archive_openssl_ripemd160update,
  &amp;__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &amp;__archive_stub_ripemd160init,
  &amp;__archive_stub_ripemd160update,
  &amp;__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &amp;__archive_libc_sha1init,
  &amp;__archive_libc_sha1update,
  &amp;__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &amp;__archive_libmd_sha1init,
  &amp;__archive_libmd_sha1update,
  &amp;__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &amp;__archive_libsystem_sha1init,
  &amp;__archive_libsystem_sha1update,
  &amp;__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_MBEDTLS)
  &amp;__archive_mbedtls_sha1init,
  &amp;__archive_mbedtls_sha1update,
  &amp;__archive_mbedtls_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &amp;__archive_nettle_sha1init,
  &amp;__archive_nettle_sha1update,
  &amp;__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &amp;__archive_openssl_sha1init,
  &amp;__archive_openssl_sha1update,
  &amp;__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &amp;__archive_windowsapi_sha1init,
  &amp;__archive_windowsapi_sha1update,
  &amp;__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &amp;__archive_stub_sha1init,
  &amp;__archive_stub_sha1update,
  &amp;__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &amp;__archive_libc_sha256init,
  &amp;__archive_libc_sha256update,
  &amp;__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &amp;__archive_libc2_sha256init,
  &amp;__archive_libc2_sha256update,
  &amp;__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &amp;__archive_libc3_sha256init,
  &amp;__archive_libc3_sha256update,
  &amp;__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &amp;__archive_libmd_sha256init,
  &amp;__archive_libmd_sha256update,
  &amp;__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &amp;__archive_libsystem_sha256init,
  &amp;__archive_libsystem_sha256update,
  &amp;__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_MBEDTLS)
  &amp;__archive_mbedtls_sha256init,
  &amp;__archive_mbedtls_sha256update,
  &amp;__archive_mbedtls_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &amp;__archive_nettle_sha256init,
  &amp;__archive_nettle_sha256update,
  &amp;__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &amp;__archive_openssl_sha256init,
  &amp;__archive_openssl_sha256update,
  &amp;__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &amp;__archive_windowsapi_sha256init,
  &amp;__archive_windowsapi_sha256update,
  &amp;__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &amp;__archive_stub_sha256init,
  &amp;__archive_stub_sha256update,
  &amp;__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &amp;__archive_libc_sha384init,
  &amp;__archive_libc_sha384update,
  &amp;__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &amp;__archive_libc2_sha384init,
  &amp;__archive_libc2_sha384update,
  &amp;__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &amp;__archive_libc3_sha384init,
  &amp;__archive_libc3_sha384update,
  &amp;__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &amp;__archive_libsystem_sha384init,
  &amp;__archive_libsystem_sha384update,
  &amp;__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_MBEDTLS)
  &amp;__archive_mbedtls_sha384init,
  &amp;__archive_mbedtls_sha384update,
  &amp;__archive_mbedtls_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &amp;__archive_nettle_sha384init,
  &amp;__archive_nettle_sha384update,
  &amp;__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &amp;__archive_openssl_sha384init,
  &amp;__archive_openssl_sha384update,
  &amp;__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &amp;__archive_windowsapi_sha384init,
  &amp;__archive_windowsapi_sha384update,
  &amp;__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &amp;__archive_stub_sha384init,
  &amp;__archive_stub_sha384update,
  &amp;__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &amp;__archive_libc_sha512init,
  &amp;__archive_libc_sha512update,
  &amp;__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &amp;__archive_libc2_sha512init,
  &amp;__archive_libc2_sha512update,
  &amp;__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &amp;__archive_libc3_sha512init,
  &amp;__archive_libc3_sha512update,
  &amp;__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &amp;__archive_libmd_sha512init,
  &amp;__archive_libmd_sha512update,
  &amp;__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &amp;__archive_libsystem_sha512init,
  &amp;__archive_libsystem_sha512update,
  &amp;__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_MBEDTLS)
  &amp;__archive_mbedtls_sha512init,
  &amp;__archive_mbedtls_sha512update,
  &amp;__archive_mbedtls_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &amp;__archive_nettle_sha512init,
  &amp;__archive_nettle_sha512update,
  &amp;__archive_nettle_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &amp;__archive_openssl_sha512init,
  &amp;__archive_openssl_sha512update,
  &amp;__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &amp;__archive_windowsapi_sha512init,
  &amp;__archive_windowsapi_sha512update,
  &amp;__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &amp;__archive_stub_sha512init,
  &amp;__archive_stub_sha512update,
  &amp;__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive_sha512_ctx ctx;
  archive_sha512_init(&amp;ctx);
  archive_sha512_update(&amp;ctx, *argv, argc);
  archive_sha512_final(&amp;ctx, NULL);
  return 0;
}

Checking for curses support passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/Checks/Curses-build

Run Build Command(s):/usr/bin/make CheckCurses &amp;&amp; Scanning dependencies of target CheckCurses
[ 50%] Building C object CMakeFiles/CheckCurses.dir/CheckCurses.c.o
[100%] Linking C executable CheckCurses
[100%] Built target CheckCurses



Determining if the function wsyncup exists in the /usr/lib/x86_64-linux-gnu/libcurses.so passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ba00c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ba00c.dir/build.make CMakeFiles/cmTC_ba00c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ba00c.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=wsyncup   -std=gnu11 -o CMakeFiles/cmTC_ba00c.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_ba00c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ba00c.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=wsyncup    CMakeFiles/cmTC_ba00c.dir/CheckFunctionExists.c.o  -o cmTC_ba00c  -lcurses 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the function cbreak exists in the /usr/lib/x86_64-linux-gnu/libncurses.so passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_92982/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_92982.dir/build.make CMakeFiles/cmTC_92982.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_92982.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=cbreak   -std=gnu11 -o CMakeFiles/cmTC_92982.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_92982
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_92982.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=cbreak    CMakeFiles/cmTC_92982.dir/CheckFunctionExists.c.o  -o cmTC_92982  -lncurses 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the include file elf.h exists passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e3825/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e3825.dir/build.make CMakeFiles/cmTC_e3825.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e3825.dir/CheckIncludeFile.c.o
/usr/bin/cc   -Wcast-align -Werror-implicit-function-declaration -Wchar-subscripts -Wall -W -Wpointer-arith -Wwrite-strings -Wformat-security -Wmissing-format-attribute -fno-common -Wundef    -std=c11 -o CMakeFiles/cmTC_e3825.dir/CheckIncludeFile.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_e3825
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e3825.dir/link.txt --verbose=1
/usr/bin/cc  -Wcast-align -Werror-implicit-function-declaration -Wchar-subscripts -Wall -W -Wpointer-arith -Wwrite-strings -Wformat-security -Wmissing-format-attribute -fno-common -Wundef     CMakeFiles/cmTC_e3825.dir/CheckIncludeFile.c.o  -o cmTC_e3825 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'



Determining if the use_default_colors exist passed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_01e7f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_01e7f.dir/build.make CMakeFiles/cmTC_01e7f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_01e7f.dir/CheckSymbolExists.c.o
/usr/bin/cc  -I/home/zachary/oss/labs/lab-08/build/Source/CursesDialog/form -I/home/zachary/cmake/Source/CursesDialog/form  -Wcast-align -Werror-implicit-function-declaration -Wchar-subscripts -Wall -W -Wpointer-arith -Wwrite-strings -Wformat-security -Wmissing-format-attribute -fno-common -Wundef    -std=c11 -o CMakeFiles/cmTC_01e7f.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_01e7f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_01e7f.dir/link.txt --verbose=1
/usr/bin/cc  -Wcast-align -Werror-implicit-function-declaration -Wchar-subscripts -Wall -W -Wpointer-arith -Wwrite-strings -Wformat-security -Wmissing-format-attribute -fno-common -Wundef     CMakeFiles/cmTC_01e7f.dir/CheckSymbolExists.c.o  -o cmTC_01e7f  -lncurses 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;form.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef use_default_colors
  return ((int*)(&amp;use_default_colors))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C++ SOURCE FILE Test run_pic_test succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4b1b7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4b1b7.dir/build.make CMakeFiles/cmTC_4b1b7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_4b1b7.dir/src.cxx.o
/usr/bin/c++    -Wnon-virtual-dtor -Wcast-align -Wchar-subscripts -Wall -W -Wshadow -Wpointer-arith -Wformat-security -Wundef -Drun_pic_test   -fPIE -std=gnu++17 -o CMakeFiles/cmTC_4b1b7.dir/src.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.cxx
Linking CXX executable cmTC_4b1b7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4b1b7.dir/link.txt --verbose=1
/usr/bin/c++   -Wnon-virtual-dtor -Wcast-align -Wchar-subscripts -Wall -W -Wshadow -Wpointer-arith -Wformat-security -Wundef -Drun_pic_test    CMakeFiles/cmTC_4b1b7.dir/src.cxx.o  -o cmTC_4b1b7 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
int main() { return 0; }
Performing C++ SOURCE FILE Test run_inlines_hidden_test succeeded with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_82b8e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_82b8e.dir/build.make CMakeFiles/cmTC_82b8e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_82b8e.dir/src.cxx.o
/usr/bin/c++    -Wnon-virtual-dtor -Wcast-align -Wchar-subscripts -Wall -W -Wshadow -Wpointer-arith -Wformat-security -Wundef -Drun_inlines_hidden_test   -fvisibility-inlines-hidden -std=gnu++17 -o CMakeFiles/cmTC_82b8e.dir/src.cxx.o -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.cxx
Linking CXX executable cmTC_82b8e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_82b8e.dir/link.txt --verbose=1
/usr/bin/c++   -Wnon-virtual-dtor -Wcast-align -Wchar-subscripts -Wall -W -Wshadow -Wpointer-arith -Wformat-security -Wundef -Drun_inlines_hidden_test    CMakeFiles/cmTC_82b8e.dir/src.cxx.o  -o cmTC_82b8e 
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'


Source file was:
int main() { return 0; }
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../CMakeFiles/CMakeError.log":
----------------------------------------------------------------
Determining if the environ exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_062bc/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_062bc.dir/build.make CMakeFiles/cmTC_062bc.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_062bc.dir/CheckSymbolExists.c.o
/usr/bin/cc   -std=gnu11 -o CMakeFiles/cmTC_062bc.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘environ’ undeclared (first use in this function)
    8 |   return ((int*)(&amp;environ))[argc];
      |                   ^~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_062bc.dir/build.make:66: CMakeFiles/cmTC_062bc.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_062bc/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdlib.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef environ
  return ((int*)(&amp;environ))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6c3f6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6c3f6.dir/build.make CMakeFiles/cmTC_6c3f6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6c3f6.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD   -std=gnu11 -o CMakeFiles/cmTC_6c3f6.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_6c3f6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6c3f6.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD    CMakeFiles/cmTC_6c3f6.dir/src.c.o  -o cmTC_6c3f6 
/usr/bin/ld: CMakeFiles/cmTC_6c3f6.dir/src.c.o: in function `main':
src.c:(.text+0x46): undefined reference to `pthread_create'
/usr/bin/ld: src.c:(.text+0x52): undefined reference to `pthread_detach'
/usr/bin/ld: src.c:(.text+0x63): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_6c3f6.dir/build.make:87: cmTC_6c3f6] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6c3f6/fast] Error 2


Source file was:
#include &lt;pthread.h&gt;

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&amp;thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d53b7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d53b7.dir/build.make CMakeFiles/cmTC_d53b7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d53b7.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -std=gnu11 -o CMakeFiles/cmTC_d53b7.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_d53b7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d53b7.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTC_d53b7.dir/CheckFunctionExists.c.o  -o cmTC_d53b7  -lpthreads 
/usr/bin/ld: cannot find -lpthreads
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_d53b7.dir/build.make:87: cmTC_d53b7] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d53b7/fast] Error 2



Checking whether CXX compiler has environ in stdlib.h failed to compile with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5edc4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5edc4.dir/build.make CMakeFiles/cmTC_5edc4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_5edc4.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_HAS_ENVIRON_IN_STDLIB_H  -std=gnu++17 -o CMakeFiles/cmTC_5edc4.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx: In function ‘int main()’:
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx:53:13: error: ‘environ’ was not declared in this scope; did you mean ‘union’?
   53 |   char* e = environ[0];
      |             ^~~~~~~
      |             union
make[1]: *** [CMakeFiles/cmTC_5edc4.dir/build.make:66: CMakeFiles/cmTC_5edc4.dir/kwsysPlatformTestsCXX.cxx.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5edc4/fast] Error 2



Checking whether CXX compiler struct stat has st_mtimespec member failed to compile with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_64601/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_64601.dir/build.make CMakeFiles/cmTC_64601.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_64601.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/c++  -DTEST_KWSYS_CXX_STAT_HAS_ST_MTIMESPEC  -std=gnu++17 -o CMakeFiles/cmTC_64601.dir/kwsysPlatformTestsCXX.cxx.o -c /home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx: In function ‘int main()’:
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx:26:15: error: ‘struct stat’ has no member named ‘st_mtimespec’
   26 |   (void)stat1.st_mtimespec.tv_sec;
      |               ^~~~~~~~~~~~
/home/zachary/cmake/Source/kwsys/kwsysPlatformTestsCXX.cxx:27:15: error: ‘struct stat’ has no member named ‘st_mtimespec’
   27 |   (void)stat1.st_mtimespec.tv_nsec;
      |               ^~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_64601.dir/build.make:66: CMakeFiles/cmTC_64601.dir/kwsysPlatformTestsCXX.cxx.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Source/kwsys/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_64601/fast] Error 2



Determining if the function connect exists in the socket;dl failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7e8c9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7e8c9.dir/build.make CMakeFiles/cmTC_7e8c9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7e8c9.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=connect   -std=gnu11 -o CMakeFiles/cmTC_7e8c9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_7e8c9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7e8c9.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=connect    CMakeFiles/cmTC_7e8c9.dir/CheckFunctionExists.c.o  -o cmTC_7e8c9  -lsocket -ldl 
/usr/bin/ld: cannot find -lsocket
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_7e8c9.dir/build.make:87: cmTC_7e8c9] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7e8c9/fast] Error 2



Determining if the function recv exists in the network;dl failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c3f50/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c3f50.dir/build.make CMakeFiles/cmTC_c3f50.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c3f50.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=recv   -std=gnu11 -o CMakeFiles/cmTC_c3f50.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_c3f50
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c3f50.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=recv    CMakeFiles/cmTC_c3f50.dir/CheckFunctionExists.c.o  -o cmTC_c3f50  -lnetwork -ldl 
/usr/bin/ld: cannot find -lnetwork
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_c3f50.dir/build.make:87: cmTC_c3f50] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_c3f50/fast] Error 2



Determining if the RAND_status exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_78100/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_78100.dir/build.make CMakeFiles/cmTC_78100.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_78100.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_78100.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: error: ‘RAND_status’ undeclared (first use in this function)
    7 |   return ((int*)(&amp;RAND_status))[argc];
      |                   ^~~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_78100.dir/build.make:66: CMakeFiles/cmTC_78100.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_78100/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */

int main(int argc, char** argv)
{
  (void)argv;
#ifndef RAND_status
  return ((int*)(&amp;RAND_status))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the RAND_screen exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ae321/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ae321.dir/build.make CMakeFiles/cmTC_ae321.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ae321.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ae321.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: error: ‘RAND_screen’ undeclared (first use in this function)
    7 |   return ((int*)(&amp;RAND_screen))[argc];
      |                   ^~~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_ae321.dir/build.make:66: CMakeFiles/cmTC_ae321.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ae321/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */

int main(int argc, char** argv)
{
  (void)argv;
#ifndef RAND_screen
  return ((int*)(&amp;RAND_screen))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the RAND_egd exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0f099/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0f099.dir/build.make CMakeFiles/cmTC_0f099.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0f099.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0f099.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: error: ‘RAND_egd’ undeclared (first use in this function)
    7 |   return ((int*)(&amp;RAND_egd))[argc];
      |                   ^~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:7:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_0f099.dir/build.make:66: CMakeFiles/cmTC_0f099.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0f099/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */

int main(int argc, char** argv)
{
  (void)argv;
#ifndef RAND_egd
  return ((int*)(&amp;RAND_egd))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the function dlopen exists in the dl;/usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so;cmnghttp2 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6a12e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6a12e.dir/build.make CMakeFiles/cmTC_6a12e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6a12e.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=dlopen   -std=gnu11 -o CMakeFiles/cmTC_6a12e.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_6a12e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6a12e.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=dlopen    CMakeFiles/cmTC_6a12e.dir/CheckFunctionExists.c.o  -o cmTC_6a12e  -ldl /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so -lcmnghttp2 
/usr/bin/ld: cannot find -lcmnghttp2
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_6a12e.dir/build.make:89: cmTC_6a12e] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6a12e/fast] Error 2



Determining if files stdio.h;inttypes.h;sys/filio.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e364a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e364a.dir/build.make CMakeFiles/cmTC_e364a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e364a.dir/HAVE_SYS_FILIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e364a.dir/HAVE_SYS_FILIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_FILIO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_FILIO_H.c:4:10: fatal error: sys/filio.h: No such file or directory
    4 | #include &lt;sys/filio.h&gt;
      |          ^~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_e364a.dir/build.make:66: CMakeFiles/cmTC_e364a.dir/HAVE_SYS_FILIO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e364a/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/filio.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/sockio.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6d8df/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6d8df.dir/build.make CMakeFiles/cmTC_6d8df.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6d8df.dir/HAVE_SYS_SOCKIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_6d8df.dir/HAVE_SYS_SOCKIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SOCKIO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_SOCKIO_H.c:10:10: fatal error: sys/sockio.h: No such file or directory
   10 | #include &lt;sys/sockio.h&gt;
      |          ^~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_6d8df.dir/build.make:66: CMakeFiles/cmTC_6d8df.dir/HAVE_SYS_SOCKIO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6d8df/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/sockio.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/utime.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d817a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d817a.dir/build.make CMakeFiles/cmTC_d817a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d817a.dir/HAVE_SYS_UTIME_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d817a.dir/HAVE_SYS_UTIME_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UTIME_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_UTIME_H.c:15:10: fatal error: sys/utime.h: No such file or directory
   15 | #include &lt;sys/utime.h&gt;
      |          ^~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_d817a.dir/build.make:66: CMakeFiles/cmTC_d817a.dir/HAVE_SYS_UTIME_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d817a/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/utime.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;crypto.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7c3b8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7c3b8.dir/build.make CMakeFiles/cmTC_7c3b8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7c3b8.dir/HAVE_CRYPTO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_7c3b8.dir/HAVE_CRYPTO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_CRYPTO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_CRYPTO_H.c:20:10: fatal error: crypto.h: No such file or directory
   20 | #include &lt;crypto.h&gt;
      |          ^~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_7c3b8.dir/build.make:66: CMakeFiles/cmTC_7c3b8.dir/HAVE_CRYPTO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7c3b8/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;crypto.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;idn2.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_274df/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_274df.dir/build.make CMakeFiles/cmTC_274df.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_274df.dir/HAVE_IDN2_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_274df.dir/HAVE_IDN2_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IDN2_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IDN2_H.c:23:10: fatal error: idn2.h: No such file or directory
   23 | #include &lt;idn2.h&gt;
      |          ^~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_274df.dir/build.make:66: CMakeFiles/cmTC_274df.dir/HAVE_IDN2_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_274df/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;idn2.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;io.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_97704/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_97704.dir/build.make CMakeFiles/cmTC_97704.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_97704.dir/HAVE_IO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_97704.dir/HAVE_IO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_IO_H.c:24:10: fatal error: io.h: No such file or directory
   24 | #include &lt;io.h&gt;
      |          ^~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_97704.dir/build.make:66: CMakeFiles/cmTC_97704.dir/HAVE_IO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_97704/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;io.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;krb.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0aa06/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0aa06.dir/build.make CMakeFiles/cmTC_0aa06.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0aa06.dir/HAVE_KRB_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0aa06.dir/HAVE_KRB_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_KRB_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_KRB_H.c:24:10: fatal error: krb.h: No such file or directory
   24 | #include &lt;krb.h&gt;
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_0aa06.dir/build.make:66: CMakeFiles/cmTC_0aa06.dir/HAVE_KRB_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0aa06/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;krb.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;pem.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_87ef2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_87ef2.dir/build.make CMakeFiles/cmTC_87ef2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_87ef2.dir/HAVE_PEM_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_87ef2.dir/HAVE_PEM_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PEM_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PEM_H.c:30:10: fatal error: pem.h: No such file or directory
   30 | #include &lt;pem.h&gt;
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_87ef2.dir/build.make:66: CMakeFiles/cmTC_87ef2.dir/HAVE_PEM_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_87ef2/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;pem.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;rsa.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_93fd2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_93fd2.dir/build.make CMakeFiles/cmTC_93fd2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_93fd2.dir/HAVE_RSA_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_93fd2.dir/HAVE_RSA_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_RSA_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_RSA_H.c:32:10: fatal error: rsa.h: No such file or directory
   32 | #include &lt;rsa.h&gt;
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_93fd2.dir/build.make:66: CMakeFiles/cmTC_93fd2.dir/HAVE_RSA_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_93fd2/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;rsa.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;ssl.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5aa7e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5aa7e.dir/build.make CMakeFiles/cmTC_5aa7e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5aa7e.dir/HAVE_SSL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5aa7e.dir/HAVE_SSL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SSL_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SSL_H.c:35:10: fatal error: ssl.h: No such file or directory
   35 | #include &lt;ssl.h&gt;
      |          ^~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_5aa7e.dir/build.make:66: CMakeFiles/cmTC_5aa7e.dir/HAVE_SSL_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5aa7e/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;ssl.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;stropts.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5e6cf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5e6cf.dir/build.make CMakeFiles/cmTC_5e6cf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5e6cf.dir/HAVE_STROPTS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5e6cf.dir/HAVE_STROPTS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STROPTS_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_STROPTS_H.c:41:10: fatal error: stropts.h: No such file or directory
   41 | #include &lt;stropts.h&gt;
      |          ^~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_5e6cf.dir/build.make:66: CMakeFiles/cmTC_5e6cf.dir/HAVE_STROPTS_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5e6cf/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;stropts.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;x509.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_24f68/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_24f68.dir/build.make CMakeFiles/cmTC_24f68.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_24f68.dir/HAVE_X509_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_24f68.dir/HAVE_X509_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_X509_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_X509_H.c:46:10: fatal error: x509.h: No such file or directory
   46 | #include &lt;x509.h&gt;
      |          ^~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_24f68.dir/build.make:66: CMakeFiles/cmTC_24f68.dir/HAVE_X509_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_24f68/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;x509.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;process.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e07ad/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e07ad.dir/build.make CMakeFiles/cmTC_e07ad.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e07ad.dir/HAVE_PROCESS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e07ad.dir/HAVE_PROCESS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PROCESS_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_PROCESS_H.c:46:10: fatal error: process.h: No such file or directory
   46 | #include &lt;process.h&gt;
      |          ^~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_e07ad.dir/build.make:66: CMakeFiles/cmTC_e07ad.dir/HAVE_PROCESS_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e07ad/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;process.h&gt;


int main(void){return 0;}

Determining if files stdio.h;inttypes.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/resource.h;sys/select.h;sys/socket.h;sys/stat.h;sys/time.h;sys/types.h;sys/uio.h;sys/un.h;sys/xattr.h;alloca.h;arpa/inet.h;arpa/tftp.h;assert.h;err.h;errno.h;fcntl.h;ifaddrs.h;libgen.h;locale.h;net/if.h;netdb.h;netinet/in.h;netinet/tcp.h;poll.h;pwd.h;setjmp.h;sgtty.h;signal.h;stdbool.h;stdint.h;stdio.h;stdlib.h;string.h;strings.h;termio.h;termios.h;time.h;unistd.h;utime.h;stddef.h;dlfcn.h;malloc.h;memory.h;netinet/if_ether.h;stdint.h;sockio.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_522a5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_522a5.dir/build.make CMakeFiles/cmTC_522a5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_522a5.dir/HAVE_SOCKIO_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_522a5.dir/HAVE_SOCKIO_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SOCKIO_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SOCKIO_H.c:52:10: fatal error: sockio.h: No such file or directory
   52 | #include &lt;sockio.h&gt;
      |          ^~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_522a5.dir/build.make:66: CMakeFiles/cmTC_522a5.dir/HAVE_SOCKIO_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_522a5/fast] Error 2


Source:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sockio.h&gt;


int main(void){return 0;}

Determining if the stricmp exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b0d01/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b0d01.dir/build.make CMakeFiles/cmTC_b0d01.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b0d01.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_b0d01.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘stricmp’ undeclared (first use in this function); did you mean ‘strncmp’?
   58 |   return ((int*)(&amp;stricmp))[argc];
      |                   ^~~~~~~
      |                   strncmp
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_b0d01.dir/build.make:66: CMakeFiles/cmTC_b0d01.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b0d01/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef stricmp
  return ((int*)(&amp;stricmp))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strcmpi exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_560e5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_560e5.dir/build.make CMakeFiles/cmTC_560e5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_560e5.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_560e5.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘strcmpi’ undeclared (first use in this function); did you mean ‘strcmp’?
   58 |   return ((int*)(&amp;strcmpi))[argc];
      |                   ^~~~~~~
      |                   strcmp
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_560e5.dir/build.make:66: CMakeFiles/cmTC_560e5.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_560e5/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strcmpi
  return ((int*)(&amp;strcmpi))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strncmpi exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5e384/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5e384.dir/build.make CMakeFiles/cmTC_5e384.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5e384.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5e384.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘strncmpi’ undeclared (first use in this function); did you mean ‘strncmp’?
   58 |   return ((int*)(&amp;strncmpi))[argc];
      |                   ^~~~~~~~
      |                   strncmp
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_5e384.dir/build.make:66: CMakeFiles/cmTC_5e384.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5e384/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strncmpi
  return ((int*)(&amp;strncmpi))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the inet_ntoa_r exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ea975/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ea975.dir/build.make CMakeFiles/cmTC_ea975.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ea975.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ea975.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘inet_ntoa_r’ undeclared (first use in this function); did you mean ‘inet_ntoa’?
   58 |   return ((int*)(&amp;inet_ntoa_r))[argc];
      |                   ^~~~~~~~~~~
      |                   inet_ntoa
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_ea975.dir/build.make:66: CMakeFiles/cmTC_ea975.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ea975/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_ntoa_r
  return ((int*)(&amp;inet_ntoa_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the closesocket exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_60568/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_60568.dir/build.make CMakeFiles/cmTC_60568.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_60568.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_60568.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘closesocket’ undeclared (first use in this function)
   58 |   return ((int*)(&amp;closesocket))[argc];
      |                   ^~~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_60568.dir/build.make:66: CMakeFiles/cmTC_60568.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_60568/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef closesocket
  return ((int*)(&amp;closesocket))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getpass_r exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7f37b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_7f37b.dir/build.make CMakeFiles/cmTC_7f37b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7f37b.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_7f37b.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘getpass_r’ undeclared (first use in this function); did you mean ‘getpass’?
   58 |   return ((int*)(&amp;getpass_r))[argc];
      |                   ^~~~~~~~~
      |                   getpass
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_7f37b.dir/build.make:66: CMakeFiles/cmTC_7f37b.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7f37b/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpass_r
  return ((int*)(&amp;getpass_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strlcat exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_59616/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_59616.dir/build.make CMakeFiles/cmTC_59616.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_59616.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_59616.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘strlcat’ undeclared (first use in this function); did you mean ‘strncat’?
   58 |   return ((int*)(&amp;strlcat))[argc];
      |                   ^~~~~~~
      |                   strncat
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_59616.dir/build.make:66: CMakeFiles/cmTC_59616.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_59616/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strlcat
  return ((int*)(&amp;strlcat))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the _strtoi64 exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_15afd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_15afd.dir/build.make CMakeFiles/cmTC_15afd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_15afd.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_15afd.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘_strtoi64’ undeclared (first use in this function)
   58 |   return ((int*)(&amp;_strtoi64))[argc];
      |                   ^~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_15afd.dir/build.make:66: CMakeFiles/cmTC_15afd.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_15afd/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _strtoi64
  return ((int*)(&amp;_strtoi64))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setmode exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_53e04/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_53e04.dir/build.make CMakeFiles/cmTC_53e04.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_53e04.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_53e04.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: error: ‘setmode’ undeclared (first use in this function)
   58 |   return ((int*)(&amp;setmode))[argc];
      |                   ^~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:58:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_53e04.dir/build.make:66: CMakeFiles/cmTC_53e04.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_53e04/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdio.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/uio.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;alloca.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;arpa/tftp.h&gt;
#include &lt;assert.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ifaddrs.h&gt;
#include &lt;libgen.h&gt;
#include &lt;locale.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netdb.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;poll.h&gt;
#include &lt;pwd.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;sgtty.h&gt;
#include &lt;signal.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;termio.h&gt;
#include &lt;termios.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;stddef.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;malloc.h&gt;
#include &lt;memory.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/utsname.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setmode
  return ((int*)(&amp;setmode))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the function mach_absolute_time exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_44d0d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_44d0d.dir/build.make CMakeFiles/cmTC_44d0d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_44d0d.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=mach_absolute_time   -std=gnu11 -o CMakeFiles/cmTC_44d0d.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_44d0d
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_44d0d.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=mach_absolute_time    CMakeFiles/cmTC_44d0d.dir/CheckFunctionExists.c.o  -o cmTC_44d0d 
/usr/bin/ld: CMakeFiles/cmTC_44d0d.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `mach_absolute_time'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_44d0d.dir/build.make:87: cmTC_44d0d] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_44d0d/fast] Error 2



Performing Curl Test HAVE_FSETXATTR_6 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ef22d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ef22d.dir/build.make CMakeFiles/cmTC_ef22d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ef22d.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_FSETXATTR_6  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_ef22d.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:544:3: error: too many arguments to function ‘fsetxattr’
  544 |   fsetxattr(0, 0, 0, 0, 0, 0);
      |   ^~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:541:
/usr/include/x86_64-linux-gnu/sys/xattr.h:54:12: note: declared here
   54 | extern int fsetxattr (int __fd, const char *__name, const void *__value,
      |            ^~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_ef22d.dir/build.make:66: CMakeFiles/cmTC_ef22d.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ef22d/fast] Error 2


Performing Curl Test HAVE_IOCTLSOCKET failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d286b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d286b.dir/build.make CMakeFiles/cmTC_d286b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d286b.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IOCTLSOCKET  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_d286b.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:326:44: error: ‘FIONBIO’ undeclared (first use in this function)
  326 |  unsigned long flags = ioctlsocket(socket, FIONBIO, &amp;flags);
      |                                            ^~~~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:326:44: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_d286b.dir/build.make:66: CMakeFiles/cmTC_d286b.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d286b/fast] Error 2


Performing Curl Test HAVE_IOCTLSOCKET_CAMEL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_84aa7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_84aa7.dir/build.make CMakeFiles/cmTC_84aa7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_84aa7.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IOCTLSOCKET_CAMEL  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_84aa7.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_84aa7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_84aa7.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_IOCTLSOCKET_CAMEL  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_84aa7.dir/CurlTests.c.o  -o cmTC_84aa7 
/usr/bin/ld: CMakeFiles/cmTC_84aa7.dir/CurlTests.c.o: in function `main':
CurlTests.c:(.text+0x1d): undefined reference to `IoctlSocket'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_84aa7.dir/build.make:87: cmTC_84aa7] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_84aa7/fast] Error 2


Performing Curl Test HAVE_IOCTLSOCKET_CAMEL_FIONBIO failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_362bf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_362bf.dir/build.make CMakeFiles/cmTC_362bf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_362bf.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IOCTLSOCKET_CAMEL_FIONBIO  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_362bf.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:382:32: error: ‘FIONBIO’ undeclared (first use in this function)
  382 |         if(0 != ioctlsocket(0, FIONBIO, &amp;flags))
      |                                ^~~~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:382:32: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_362bf.dir/build.make:66: CMakeFiles/cmTC_362bf.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_362bf/fast] Error 2


Performing Curl Test HAVE_IOCTLSOCKET_FIONBIO failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a632b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a632b.dir/build.make CMakeFiles/cmTC_a632b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a632b.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_IOCTLSOCKET_FIONBIO  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_a632b.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:409:32: error: ‘FIONBIO’ undeclared (first use in this function)
  409 |         if(0 != ioctlsocket(0, FIONBIO, &amp;flags))
      |                                ^~~~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:409:32: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_a632b.dir/build.make:66: CMakeFiles/cmTC_a632b.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a632b/fast] Error 2


Performing Curl Test HAVE_SETSOCKOPT_SO_NONBLOCK failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c1bbb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c1bbb.dir/build.make CMakeFiles/cmTC_c1bbb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c1bbb.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_SETSOCKOPT_SO_NONBLOCK  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_c1bbb.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:505:43: error: ‘SO_NONBLOCK’ undeclared (first use in this function); did you mean ‘SOCK_NONBLOCK’?
  505 |         if(0 != setsockopt(0, SOL_SOCKET, SO_NONBLOCK, 0, 0))
      |                                           ^~~~~~~~~~~
      |                                           SOCK_NONBLOCK
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:505:43: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_c1bbb.dir/build.make:66: CMakeFiles/cmTC_c1bbb.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_c1bbb/fast] Error 2


Performing Curl Test HAVE_O_NONBLOCK failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5beb8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5beb8.dir/build.make CMakeFiles/cmTC_5beb8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5beb8.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_O_NONBLOCK  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_5beb8.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTC_5beb8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5beb8.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_O_NONBLOCK  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H    CMakeFiles/cmTC_5beb8.dir/CurlTests.c.o  -o cmTC_5beb8 
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x24): undefined reference to `main'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_5beb8.dir/build.make:87: cmTC_5beb8] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5beb8/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYADDR_R_5 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_92371/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_92371.dir/build.make CMakeFiles/cmTC_92371.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_92371.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYADDR_R_5  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_92371.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:106:23: error: storage size of ‘hdata’ isn’t known
  106 |   struct hostent_data hdata;
      |                       ^~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:127:8: error: too few arguments to function ‘gethostbyaddr_r’
  127 |   rc = gethostbyaddr_r(address, length, type, &amp;h, &amp;hdata);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:170:12: note: declared here
  170 | extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_92371.dir/build.make:66: CMakeFiles/cmTC_92371.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_92371/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYADDR_R_7 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_91e9b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_91e9b.dir/build.make CMakeFiles/cmTC_91e9b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_91e9b.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYADDR_R_7  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_91e9b.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:131:8: error: too few arguments to function ‘gethostbyaddr_r’
  131 |   hp = gethostbyaddr_r(address, length, type, &amp;h, buffer, 8192, &amp;h_errnop);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:170:12: note: declared here
  170 | extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_91e9b.dir/build.make:66: CMakeFiles/cmTC_91e9b.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_91e9b/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYADDR_R_5_REENTRANT failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_259ae/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_259ae.dir/build.make CMakeFiles/cmTC_259ae.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_259ae.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYADDR_R_5_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_259ae.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:106:23: error: storage size of ‘hdata’ isn’t known
  106 |   struct hostent_data hdata;
      |                       ^~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:127:8: error: too few arguments to function ‘gethostbyaddr_r’
  127 |   rc = gethostbyaddr_r(address, length, type, &amp;h, &amp;hdata);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:170:12: note: declared here
  170 | extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_259ae.dir/build.make:66: CMakeFiles/cmTC_259ae.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_259ae/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYADDR_R_7_REENTRANT failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_00b53/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_00b53.dir/build.make CMakeFiles/cmTC_00b53.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_00b53.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYADDR_R_7_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_00b53.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:131:8: error: too few arguments to function ‘gethostbyaddr_r’
  131 |   hp = gethostbyaddr_r(address, length, type, &amp;h, buffer, 8192, &amp;h_errnop);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:170:12: note: declared here
  170 | extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_00b53.dir/build.make:66: CMakeFiles/cmTC_00b53.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_00b53/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYNAME_R_3 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4ee20/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_4ee20.dir/build.make CMakeFiles/cmTC_4ee20.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4ee20.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYNAME_R_3  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_4ee20.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:106:23: error: storage size of ‘hdata’ isn’t known
  106 |   struct hostent_data hdata;
      |                       ^~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:141:8: error: too few arguments to function ‘gethostbyname_r’
  141 |   rc = gethostbyname_r(address, &amp;h, &amp;hdata);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:177:12: note: declared here
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_4ee20.dir/build.make:66: CMakeFiles/cmTC_4ee20.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_4ee20/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYNAME_R_5 failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_72c36/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_72c36.dir/build.make CMakeFiles/cmTC_72c36.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_72c36.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYNAME_R_5  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_72c36.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:144:8: error: too few arguments to function ‘gethostbyname_r’
  144 |   rc = gethostbyname_r(address, &amp;h, buffer, 8192, &amp;h_errnop);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:177:12: note: declared here
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_72c36.dir/build.make:66: CMakeFiles/cmTC_72c36.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_72c36/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYNAME_R_3_REENTRANT failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a1b27/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a1b27.dir/build.make CMakeFiles/cmTC_a1b27.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a1b27.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYNAME_R_3_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_a1b27.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:106:23: error: storage size of ‘hdata’ isn’t known
  106 |   struct hostent_data hdata;
      |                       ^~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:141:8: error: too few arguments to function ‘gethostbyname_r’
  141 |   rc = gethostbyname_r(address, &amp;h, &amp;hdata);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:177:12: note: declared here
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_a1b27.dir/build.make:66: CMakeFiles/cmTC_a1b27.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a1b27/fast] Error 2


Performing Curl Test HAVE_GETHOSTBYNAME_R_5_REENTRANT failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_52b19/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_52b19.dir/build.make CMakeFiles/cmTC_52b19.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_52b19.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GETHOSTBYNAME_R_5_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_52b19.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:144:8: error: too few arguments to function ‘gethostbyname_r’
  144 |   rc = gethostbyname_r(address, &amp;h, buffer, 8192, &amp;h_errnop);
      |        ^~~~~~~~~~~~~~~
In file included from /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:93:
/usr/include/netdb.h:177:12: note: declared here
  177 | extern int gethostbyname_r (const char *__restrict __name,
      |            ^~~~~~~~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_52b19.dir/build.make:66: CMakeFiles/cmTC_52b19.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_52b19/fast] Error 2


Performing Curl Test HAVE_INET_NTOA_R_DECL failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_520ea/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_520ea.dir/build.make CMakeFiles/cmTC_520ea.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_520ea.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_INET_NTOA_R_DECL  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_520ea.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:244:21: error: ‘inet_ntoa_r’ undeclared (first use in this function); did you mean ‘inet_ntoa’?
  244 |   func = (func_type)inet_ntoa_r;
      |                     ^~~~~~~~~~~
      |                     inet_ntoa
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:244:21: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_520ea.dir/build.make:66: CMakeFiles/cmTC_520ea.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_520ea/fast] Error 2


Performing Curl Test HAVE_INET_NTOA_R_DECL_REENTRANT failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d8ce7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d8ce7.dir/build.make CMakeFiles/cmTC_d8ce7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d8ce7.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_INET_NTOA_R_DECL_REENTRANT  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_d8ce7.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:260:22: error: ‘inet_ntoa_r’ undeclared (first use in this function); did you mean ‘inet_ntoa’?
  260 |   func = (func_type)&amp;inet_ntoa_r;
      |                      ^~~~~~~~~~~
      |                      inet_ntoa
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:260:22: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_d8ce7.dir/build.make:66: CMakeFiles/cmTC_d8ce7.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d8ce7/fast] Error 2


Performing Curl Test HAVE_GLIBC_STRERROR_R failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d4451/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d4451.dir/build.make CMakeFiles/cmTC_d4451.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d4451.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_GLIBC_STRERROR_R  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_d4451.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:521:51: error: subscripted value is neither array nor pointer nor vector
  521 |   check(strerror_r(EACCES, buffer, sizeof(buffer))[0]);
      |                                                   ^
make[1]: *** [CMakeFiles/cmTC_d4451.dir/build.make:66: CMakeFiles/cmTC_d4451.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d4451/fast] Error 2


Performing Curl Test HAVE_BUILTIN_AVAILABLE failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_70fd2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_70fd2.dir/build.make CMakeFiles/cmTC_70fd2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_70fd2.dir/CurlTests.c.o
/usr/bin/cc   -w -DHAVE_BUILTIN_AVAILABLE  -DHAVE_STDIO_H -DHAVE_INTTYPES_H -DHAVE_SYS_IOCTL_H -DHAVE_SYS_PARAM_H -DHAVE_SYS_POLL_H -DHAVE_SYS_RESOURCE_H -DHAVE_SYS_SELECT_H -DHAVE_SYS_SOCKET_H -DHAVE_SYS_STAT_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TYPES_H -DHAVE_SYS_UIO_H -DHAVE_SYS_UN_H -DHAVE_SYS_XATTR_H -DHAVE_ALLOCA_H -DHAVE_ARPA_INET_H -DHAVE_ARPA_TFTP_H -DHAVE_ASSERT_H -DHAVE_ERR_H -DHAVE_ERRNO_H -DHAVE_FCNTL_H -DHAVE_IFADDRS_H -DHAVE_LIBGEN_H -DHAVE_LOCALE_H -DHAVE_NET_IF_H -DHAVE_NETDB_H -DHAVE_NETINET_IN_H -DHAVE_NETINET_TCP_H -DHAVE_POLL_H -DHAVE_PWD_H -DHAVE_SETJMP_H -DHAVE_SGTTY_H -DHAVE_SIGNAL_H -DHAVE_STDBOOL_H -DHAVE_STDINT_H -DHAVE_STDIO_H -DHAVE_STDLIB_H -DHAVE_STRING_H -DHAVE_STRINGS_H -DHAVE_TERMIO_H -DHAVE_TERMIOS_H -DHAVE_TIME_H -DHAVE_UNISTD_H -DHAVE_UTIME_H -DHAVE_STDDEF_H -DHAVE_DLFCN_H -DHAVE_MALLOC_H -DHAVE_MEMORY_H -DHAVE_NETINET_IF_ETHER_H -DHAVE_STDINT_H -DHAVE_SYS_UTSNAME_H   -std=gnu11 -o CMakeFiles/cmTC_70fd2.dir/CurlTests.c.o   -c /home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:568:26: error: ‘macOS’ undeclared (first use in this function)
  568 |   if(__builtin_available(macOS 10.12, *)) {}
      |                          ^~~~~
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:568:26: note: each undeclared identifier is reported only once for each function it appears in
/home/zachary/cmake/Utilities/cmcurl/CMake/CurlTests.c:568:31: error: expected ‘)’ before numeric constant
  568 |   if(__builtin_available(macOS 10.12, *)) {}
      |                               ^~~~~~
      |                               )
make[1]: *** [CMakeFiles/cmTC_70fd2.dir/build.make:66: CMakeFiles/cmTC_70fd2.dir/CurlTests.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_70fd2/fast] Error 2


Determining if the arc4random_buf exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_125ed/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_125ed.dir/build.make CMakeFiles/cmTC_125ed.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_125ed.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_125ed.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘arc4random_buf’ undeclared (first use in this function)
    8 |   return ((int*)(&amp;arc4random_buf))[argc];
      |                   ^~~~~~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_125ed.dir/build.make:66: CMakeFiles/cmTC_125ed.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_125ed/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdlib.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef arc4random_buf
  return ((int*)(&amp;arc4random_buf))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the arc4random exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1567e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1567e.dir/build.make CMakeFiles/cmTC_1567e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1567e.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_1567e.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘arc4random’ undeclared (first use in this function); did you mean ‘srandom’?
    8 |   return ((int*)(&amp;arc4random))[argc];
      |                   ^~~~~~~~~~
      |                   srandom
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_1567e.dir/build.make:66: CMakeFiles/cmTC_1567e.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1567e/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;stdlib.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef arc4random
  return ((int*)(&amp;arc4random))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if files sys/types.h;ctype.h;copyfile.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_968a2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_968a2.dir/build.make CMakeFiles/cmTC_968a2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_968a2.dir/HAVE_COPYFILE_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_968a2.dir/HAVE_COPYFILE_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_COPYFILE_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_COPYFILE_H.c:4:10: fatal error: copyfile.h: No such file or directory
    4 | #include &lt;copyfile.h&gt;
      |          ^~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_968a2.dir/build.make:66: CMakeFiles/cmTC_968a2.dir/HAVE_COPYFILE_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_968a2/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;copyfile.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;direct.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_efdc7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_efdc7.dir/build.make CMakeFiles/cmTC_efdc7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_efdc7.dir/HAVE_DIRECT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_efdc7.dir/HAVE_DIRECT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_DIRECT_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_DIRECT_H.c:4:10: fatal error: direct.h: No such file or directory
    4 | #include &lt;direct.h&gt;
      |          ^~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_efdc7.dir/build.make:66: CMakeFiles/cmTC_efdc7.dir/HAVE_DIRECT_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_efdc7/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;direct.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;ext2fs/ext2_fs.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a6493/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a6493.dir/build.make CMakeFiles/cmTC_a6493.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a6493.dir/HAVE_EXT2FS_EXT2_FS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a6493.dir/HAVE_EXT2FS_EXT2_FS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_EXT2FS_EXT2_FS_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_EXT2FS_EXT2_FS_H.c:6:10: fatal error: ext2fs/ext2_fs.h: No such file or directory
    6 | #include &lt;ext2fs/ext2_fs.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_a6493.dir/build.make:66: CMakeFiles/cmTC_a6493.dir/HAVE_EXT2FS_EXT2_FS_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a6493/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;ext2fs/ext2_fs.h&gt;


int main(void){return 0;}

Performing C SOURCE FILE Test HAVE_WORKING_EXT2_IOC_GETFLAGS failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c6908/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_c6908.dir/build.make CMakeFiles/cmTC_c6908.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c6908.dir/src.c.o
/usr/bin/cc   -w -DHAVE_WORKING_EXT2_IOC_GETFLAGS   -std=gnu11 -o CMakeFiles/cmTC_c6908.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:2:10: fatal error: ext2fs/ext2_fs.h: No such file or directory
    2 | #include &lt;ext2fs/ext2_fs.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_c6908.dir/build.make:66: CMakeFiles/cmTC_c6908.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_c6908/fast] Error 2


Source file was:
#include &lt;sys/ioctl.h&gt;
#include &lt;ext2fs/ext2_fs.h&gt;
int main(void) { return EXT2_IOC_GETFLAGS; }
Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;membership.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1db9f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1db9f.dir/build.make CMakeFiles/cmTC_1db9f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1db9f.dir/HAVE_MEMBERSHIP_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_1db9f.dir/HAVE_MEMBERSHIP_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_MEMBERSHIP_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_MEMBERSHIP_H.c:15:10: fatal error: membership.h: No such file or directory
   15 | #include &lt;membership.h&gt;
      |          ^~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_1db9f.dir/build.make:66: CMakeFiles/cmTC_1db9f.dir/HAVE_MEMBERSHIP_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1db9f/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;membership.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;readpassphrase.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a0fa2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a0fa2.dir/build.make CMakeFiles/cmTC_a0fa2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a0fa2.dir/HAVE_READPASSPHRASE_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_a0fa2.dir/HAVE_READPASSPHRASE_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_READPASSPHRASE_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_READPASSPHRASE_H.c:20:10: fatal error: readpassphrase.h: No such file or directory
   20 | #include &lt;readpassphrase.h&gt;
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_a0fa2.dir/build.make:66: CMakeFiles/cmTC_a0fa2.dir/HAVE_READPASSPHRASE_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a0fa2/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;readpassphrase.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/acl.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_eb369/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_eb369.dir/build.make CMakeFiles/cmTC_eb369.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_eb369.dir/HAVE_SYS_ACL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_eb369.dir/HAVE_SYS_ACL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_ACL_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_ACL_H.c:27:10: fatal error: sys/acl.h: No such file or directory
   27 | #include &lt;sys/acl.h&gt;
      |          ^~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_eb369.dir/build.make:66: CMakeFiles/cmTC_eb369.dir/HAVE_SYS_ACL_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_eb369/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/acl.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/extattr.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_738b5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_738b5.dir/build.make CMakeFiles/cmTC_738b5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_738b5.dir/HAVE_SYS_EXTATTR_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_738b5.dir/HAVE_SYS_EXTATTR_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_EXTATTR_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_EXTATTR_H.c:28:10: fatal error: sys/extattr.h: No such file or directory
   28 | #include &lt;sys/extattr.h&gt;
      |          ^~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_738b5.dir/build.make:66: CMakeFiles/cmTC_738b5.dir/HAVE_SYS_EXTATTR_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_738b5/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/extattr.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/mkdev.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0aad7/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0aad7.dir/build.make CMakeFiles/cmTC_0aad7.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0aad7.dir/HAVE_SYS_MKDEV_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_0aad7.dir/HAVE_SYS_MKDEV_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_MKDEV_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_MKDEV_H.c:29:10: fatal error: sys/mkdev.h: No such file or directory
   29 | #include &lt;sys/mkdev.h&gt;
      |          ^~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_0aad7.dir/build.make:66: CMakeFiles/cmTC_0aad7.dir/HAVE_SYS_MKDEV_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0aad7/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/mkdev.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/mount.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d6d1e/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d6d1e.dir/build.make CMakeFiles/cmTC_d6d1e.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d6d1e.dir/HAVE_SYS_MOUNT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d6d1e.dir/HAVE_SYS_MOUNT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_MOUNT_H.c
In file included from /usr/include/linux/fs.h:19,
                 from /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_MOUNT_H.c:12:
/usr/include/x86_64-linux-gnu/sys/mount.h:35:3: error: expected identifier before numeric constant
   35 |   MS_RDONLY = 1,  /* Mount read-only.  */
      |   ^~~~~~~~~
make[1]: *** [CMakeFiles/cmTC_d6d1e.dir/build.make:66: CMakeFiles/cmTC_d6d1e.dir/HAVE_SYS_MOUNT_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d6d1e/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/mount.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/richacl.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d5b53/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_d5b53.dir/build.make CMakeFiles/cmTC_d5b53.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d5b53.dir/HAVE_SYS_RICHACL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_d5b53.dir/HAVE_SYS_RICHACL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_RICHACL_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_SYS_RICHACL_H.c:31:10: fatal error: sys/richacl.h: No such file or directory
   31 | #include &lt;sys/richacl.h&gt;
      |          ^~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_d5b53.dir/build.make:66: CMakeFiles/cmTC_d5b53.dir/HAVE_SYS_RICHACL_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d5b53/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/richacl.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h;windows.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_5c847/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_5c847.dir/build.make CMakeFiles/cmTC_5c847.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_5c847.dir/HAVE_WINDOWS_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_5c847.dir/HAVE_WINDOWS_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WINDOWS_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WINDOWS_H.c:46:10: fatal error: windows.h: No such file or directory
   46 | #include &lt;windows.h&gt;
      |          ^~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_5c847.dir/build.make:66: CMakeFiles/cmTC_5c847.dir/HAVE_WINDOWS_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_5c847/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/statfs.h&gt;
#include &lt;sys/statvfs.h&gt;
#include &lt;sys/sysmacros.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/utsname.h&gt;
#include &lt;sys/vfs.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;wchar.h&gt;
#include &lt;wctype.h&gt;
#include &lt;windows.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h;wincrypt.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ec77d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ec77d.dir/build.make CMakeFiles/cmTC_ec77d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ec77d.dir/HAVE_WINCRYPT_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_ec77d.dir/HAVE_WINCRYPT_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WINCRYPT_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WINCRYPT_H.c:46:10: fatal error: wincrypt.h: No such file or directory
   46 | #include &lt;wincrypt.h&gt;
      |          ^~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_ec77d.dir/build.make:66: CMakeFiles/cmTC_ec77d.dir/HAVE_WINCRYPT_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ec77d/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/statfs.h&gt;
#include &lt;sys/statvfs.h&gt;
#include &lt;sys/sysmacros.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/utsname.h&gt;
#include &lt;sys/vfs.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;wchar.h&gt;
#include &lt;wctype.h&gt;
#include &lt;wincrypt.h&gt;


int main(void){return 0;}

Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pthread.h;pwd.h;regex.h;signal.h;spawn.h;stdarg.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/sysmacros.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;sys/xattr.h;time.h;unistd.h;utime.h;wchar.h;wctype.h;winioctl.h exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_906a4/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_906a4.dir/build.make CMakeFiles/cmTC_906a4.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_906a4.dir/HAVE_WINIOCTL_H.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_906a4.dir/HAVE_WINIOCTL_H.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WINIOCTL_H.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CheckIncludeFiles/HAVE_WINIOCTL_H.c:46:10: fatal error: winioctl.h: No such file or directory
   46 | #include &lt;winioctl.h&gt;
      |          ^~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_906a4.dir/build.make:66: CMakeFiles/cmTC_906a4.dir/HAVE_WINIOCTL_H.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_906a4/fast] Error 2


Source:
/* */
#include &lt;sys/types.h&gt;
#include &lt;ctype.h&gt;
#include &lt;dlfcn.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;grp.h&gt;
#include &lt;langinfo.h&gt;
#include &lt;limits.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/fiemap.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/magic.h&gt;
#include &lt;locale.h&gt;
#include &lt;memory.h&gt;
#include &lt;paths.h&gt;
#include &lt;poll.h&gt;
#include &lt;pthread.h&gt;
#include &lt;pwd.h&gt;
#include &lt;regex.h&gt;
#include &lt;signal.h&gt;
#include &lt;spawn.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/cdefs.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/poll.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/statfs.h&gt;
#include &lt;sys/statvfs.h&gt;
#include &lt;sys/sysmacros.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/utsname.h&gt;
#include &lt;sys/vfs.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;sys/xattr.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;utime.h&gt;
#include &lt;wchar.h&gt;
#include &lt;wctype.h&gt;
#include &lt;winioctl.h&gt;


int main(void){return 0;}

Determining if the function getvfsbyname exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0c5e2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0c5e2.dir/build.make CMakeFiles/cmTC_0c5e2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0c5e2.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=getvfsbyname  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_0c5e2.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_0c5e2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0c5e2.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=getvfsbyname  -fno-builtin    CMakeFiles/cmTC_0c5e2.dir/CheckFunctionExists.c.o  -o cmTC_0c5e2 
/usr/bin/ld: CMakeFiles/cmTC_0c5e2.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `getvfsbyname'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_0c5e2.dir/build.make:87: cmTC_0c5e2] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0c5e2/fast] Error 2



Determining if the function lchflags exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_523d2/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_523d2.dir/build.make CMakeFiles/cmTC_523d2.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_523d2.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=lchflags  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_523d2.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_523d2
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_523d2.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=lchflags  -fno-builtin    CMakeFiles/cmTC_523d2.dir/CheckFunctionExists.c.o  -o cmTC_523d2 
/usr/bin/ld: CMakeFiles/cmTC_523d2.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `lchflags'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_523d2.dir/build.make:87: cmTC_523d2] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_523d2/fast] Error 2



Determining if the function readpassphrase exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_073ba/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_073ba.dir/build.make CMakeFiles/cmTC_073ba.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_073ba.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=readpassphrase  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_073ba.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_073ba
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_073ba.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=readpassphrase  -fno-builtin    CMakeFiles/cmTC_073ba.dir/CheckFunctionExists.c.o  -o cmTC_073ba 
/usr/bin/ld: CMakeFiles/cmTC_073ba.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `readpassphrase'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_073ba.dir/build.make:87: cmTC_073ba] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_073ba/fast] Error 2



Determining if the function strncpy_s exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6772b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6772b.dir/build.make CMakeFiles/cmTC_6772b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6772b.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=strncpy_s  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_6772b.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_6772b
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6772b.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=strncpy_s  -fno-builtin    CMakeFiles/cmTC_6772b.dir/CheckFunctionExists.c.o  -o cmTC_6772b 
/usr/bin/ld: CMakeFiles/cmTC_6772b.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `strncpy_s'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_6772b.dir/build.make:87: cmTC_6772b] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6772b/fast] Error 2



Determining if the function _ctime64_s exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a4657/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_a4657.dir/build.make CMakeFiles/cmTC_a4657.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a4657.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=_ctime64_s  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_a4657.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_a4657
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a4657.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=_ctime64_s  -fno-builtin    CMakeFiles/cmTC_a4657.dir/CheckFunctionExists.c.o  -o cmTC_a4657 
/usr/bin/ld: CMakeFiles/cmTC_a4657.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `_ctime64_s'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_a4657.dir/build.make:87: cmTC_a4657] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a4657/fast] Error 2



Determining if the function _fseeki64 exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b4bea/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b4bea.dir/build.make CMakeFiles/cmTC_b4bea.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b4bea.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=_fseeki64  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_b4bea.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_b4bea
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b4bea.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=_fseeki64  -fno-builtin    CMakeFiles/cmTC_b4bea.dir/CheckFunctionExists.c.o  -o cmTC_b4bea 
/usr/bin/ld: CMakeFiles/cmTC_b4bea.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `_fseeki64'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_b4bea.dir/build.make:87: cmTC_b4bea] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b4bea/fast] Error 2



Determining if the function _get_timezone exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1a4b8/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_1a4b8.dir/build.make CMakeFiles/cmTC_1a4b8.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1a4b8.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=_get_timezone  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_1a4b8.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_1a4b8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1a4b8.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=_get_timezone  -fno-builtin    CMakeFiles/cmTC_1a4b8.dir/CheckFunctionExists.c.o  -o cmTC_1a4b8 
/usr/bin/ld: CMakeFiles/cmTC_1a4b8.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `_get_timezone'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_1a4b8.dir/build.make:87: cmTC_1a4b8] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_1a4b8/fast] Error 2



Determining if the function _gmtime64_s exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_10349/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_10349.dir/build.make CMakeFiles/cmTC_10349.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_10349.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=_gmtime64_s  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_10349.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_10349
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_10349.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=_gmtime64_s  -fno-builtin    CMakeFiles/cmTC_10349.dir/CheckFunctionExists.c.o  -o cmTC_10349 
/usr/bin/ld: CMakeFiles/cmTC_10349.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `_gmtime64_s'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_10349.dir/build.make:87: cmTC_10349] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_10349/fast] Error 2



Determining if the function _localtime64_s exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_967cf/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_967cf.dir/build.make CMakeFiles/cmTC_967cf.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_967cf.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=_localtime64_s  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_967cf.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_967cf
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_967cf.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=_localtime64_s  -fno-builtin    CMakeFiles/cmTC_967cf.dir/CheckFunctionExists.c.o  -o cmTC_967cf 
/usr/bin/ld: CMakeFiles/cmTC_967cf.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `_localtime64_s'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_967cf.dir/build.make:87: cmTC_967cf] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_967cf/fast] Error 2



Determining if the function _mkgmtime64 exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_80e3a/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_80e3a.dir/build.make CMakeFiles/cmTC_80e3a.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_80e3a.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=_mkgmtime64  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_80e3a.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_80e3a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_80e3a.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=_mkgmtime64  -fno-builtin    CMakeFiles/cmTC_80e3a.dir/CheckFunctionExists.c.o  -o cmTC_80e3a 
/usr/bin/ld: CMakeFiles/cmTC_80e3a.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `_mkgmtime64'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_80e3a.dir/build.make:87: cmTC_80e3a] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_80e3a/fast] Error 2



Determining if the function cygwin_conv_path exists failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_495d9/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_495d9.dir/build.make CMakeFiles/cmTC_495d9.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_495d9.dir/CheckFunctionExists.c.o
/usr/bin/cc   -w -DCHECK_FUNCTION_EXISTS=cygwin_conv_path  -fno-builtin   -std=gnu11 -o CMakeFiles/cmTC_495d9.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.16/Modules/CheckFunctionExists.c
Linking C executable cmTC_495d9
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_495d9.dir/link.txt --verbose=1
/usr/bin/cc  -w -DCHECK_FUNCTION_EXISTS=cygwin_conv_path  -fno-builtin    CMakeFiles/cmTC_495d9.dir/CheckFunctionExists.c.o  -o cmTC_495d9 
/usr/bin/ld: CMakeFiles/cmTC_495d9.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `cygwin_conv_path'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_495d9.dir/build.make:87: cmTC_495d9] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_495d9/fast] Error 2



Performing C SOURCE FILE Test HAVE_STRUCT_VFSCONF failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_392cb/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_392cb.dir/build.make CMakeFiles/cmTC_392cb.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_392cb.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_VFSCONF   -std=gnu11 -o CMakeFiles/cmTC_392cb.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:3:33: error: storage size of ‘v’ isn’t known
    3 | int main(void) { struct vfsconf v; return sizeof(v);}
      |                                 ^
make[1]: *** [CMakeFiles/cmTC_392cb.dir/build.make:66: CMakeFiles/cmTC_392cb.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_392cb/fast] Error 2


Source file was:
#include &lt;sys/types.h&gt;
#include &lt;sys/mount.h&gt;
int main(void) { struct vfsconf v; return sizeof(v);}
Performing C SOURCE FILE Test HAVE_STRUCT_XVFSCONF failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6948f/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_6948f.dir/build.make CMakeFiles/cmTC_6948f.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6948f.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_XVFSCONF   -std=gnu11 -o CMakeFiles/cmTC_6948f.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:3:34: error: storage size of ‘v’ isn’t known
    3 | int main(void) { struct xvfsconf v; return sizeof(v);}
      |                                  ^
make[1]: *** [CMakeFiles/cmTC_6948f.dir/build.make:66: CMakeFiles/cmTC_6948f.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6948f/fast] Error 2


Source file was:
#include &lt;sys/types.h&gt;
#include &lt;sys/mount.h&gt;
int main(void) { struct xvfsconf v; return sizeof(v);}
Performing C SOURCE FILE Test MAJOR_IN_MKDEV failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f4a2c/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_f4a2c.dir/build.make CMakeFiles/cmTC_f4a2c.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f4a2c.dir/src.c.o
/usr/bin/cc   -w -DMAJOR_IN_MKDEV   -std=gnu11 -o CMakeFiles/cmTC_f4a2c.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:1:10: fatal error: sys/mkdev.h: No such file or directory
    1 | #include &lt;sys/mkdev.h&gt;
      |          ^~~~~~~~~~~~~
compilation terminated.
make[1]: *** [CMakeFiles/cmTC_f4a2c.dir/build.make:66: CMakeFiles/cmTC_f4a2c.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_f4a2c/fast] Error 2


Source file was:
#include &lt;sys/mkdev.h&gt;
int main() { return major(256); }
Performing C SOURCE FILE Test HAVE_LZMA_STREAM_ENCODER_MT failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_685e3/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_685e3.dir/build.make CMakeFiles/cmTC_685e3.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_685e3.dir/src.c.o
/usr/bin/cc  -I/home/zachary/cmake/Utilities/cmliblzma/liblzma/api  -w -DHAVE_LZMA_STREAM_ENCODER_MT   -std=gnu11 -o CMakeFiles/cmTC_685e3.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_685e3
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_685e3.dir/link.txt --verbose=1
/usr/bin/cc  -w -DHAVE_LZMA_STREAM_ENCODER_MT    CMakeFiles/cmTC_685e3.dir/src.c.o  -o cmTC_685e3  -lcmliblzma 
/usr/bin/ld: cannot find -lcmliblzma
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_685e3.dir/build.make:87: cmTC_685e3] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_685e3/fast] Error 2


Source file was:
#include &lt;lzma.h&gt;
#if LZMA_VERSION &lt; 50020000
#error unsupported
#endif
int main(void){lzma_stream_encoder_mt(0, 0); return 0;}
Determining if the EFTYPE exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b2247/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_b2247.dir/build.make CMakeFiles/cmTC_b2247.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b2247.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_b2247.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘EFTYPE’ undeclared (first use in this function)
    8 |   return ((int*)(&amp;EFTYPE))[argc];
      |                   ^~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_b2247.dir/build.make:66: CMakeFiles/cmTC_b2247.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b2247/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;errno.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef EFTYPE
  return ((int*)(&amp;EFTYPE))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the D_MD_ORDER exist failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e1948/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_e1948.dir/build.make CMakeFiles/cmTC_e1948.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e1948.dir/CheckSymbolExists.c.o
/usr/bin/cc   -w    -std=gnu11 -o CMakeFiles/cmTC_e1948.dir/CheckSymbolExists.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘D_MD_ORDER’ undeclared (first use in this function)
    8 |   return ((int*)(&amp;D_MD_ORDER))[argc];
      |                   ^~~~~~~~~~
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[1]: *** [CMakeFiles/cmTC_e1948.dir/build.make:66: CMakeFiles/cmTC_e1948.dir/CheckSymbolExists.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e1948/fast] Error 2


File /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include &lt;langinfo.h&gt;

int main(int argc, char** argv)
{
  (void)argv;
#ifndef D_MD_ORDER
  return ((int*)(&amp;D_MD_ORDER))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C SOURCE FILE Test HAVE_STRUCT_TM___TM_GMTOFF failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2729d/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2729d.dir/build.make CMakeFiles/cmTC_2729d.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2729d.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_TM___TM_GMTOFF   -std=gnu11 -o CMakeFiles/cmTC_2729d.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:6:34: error: ‘struct tm’ has no member named ‘__tm_gmtoff’; did you mean ‘tm_gmtoff’?
    6 |   (void)sizeof(((struct tm *)0)-&gt;__tm_gmtoff);
      |                                  ^~~~~~~~~~~
      |                                  tm_gmtoff
make[1]: *** [CMakeFiles/cmTC_2729d.dir/build.make:66: CMakeFiles/cmTC_2729d.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_2729d/fast] Error 2


Source file was:

#include &lt;time.h&gt;

int main()
{
  (void)sizeof(((struct tm *)0)-&gt;__tm_gmtoff);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STATFS_F_NAMEMAX failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9c387/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_9c387.dir/build.make CMakeFiles/cmTC_9c387.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9c387.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STATFS_F_NAMEMAX   -std=gnu11 -o CMakeFiles/cmTC_9c387.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:36: error: dereferencing pointer to incomplete type ‘struct statfs’
    7 |   (void)sizeof(((struct statfs *)0)-&gt;f_namemax);
      |                                    ^~
make[1]: *** [CMakeFiles/cmTC_9c387.dir/build.make:66: CMakeFiles/cmTC_9c387.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_9c387/fast] Error 2


Source file was:

#include &lt;sys/param.h&gt;
#include &lt;sys/mount.h&gt;

int main()
{
  (void)sizeof(((struct statfs *)0)-&gt;f_namemax);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_BIRTHTIME failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_78132/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_78132.dir/build.make CMakeFiles/cmTC_78132.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_78132.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_BIRTHTIME   -std=gnu11 -o CMakeFiles/cmTC_78132.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:34: error: ‘struct stat’ has no member named ‘st_birthtime’
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_birthtime);
      |                                  ^~
make[1]: *** [CMakeFiles/cmTC_78132.dir/build.make:66: CMakeFiles/cmTC_78132.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_78132/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_birthtime);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2d9f6/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_2d9f6.dir/build.make CMakeFiles/cmTC_2d9f6.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2d9f6.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC   -std=gnu11 -o CMakeFiles/cmTC_2d9f6.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:34: error: ‘struct stat’ has no member named ‘st_birthtimespec’
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_birthtimespec.tv_nsec);
      |                                  ^~
make[1]: *** [CMakeFiles/cmTC_2d9f6.dir/build.make:66: CMakeFiles/cmTC_2d9f6.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_2d9f6/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_birthtimespec.tv_nsec);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0090b/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_0090b.dir/build.make CMakeFiles/cmTC_0090b.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0090b.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC   -std=gnu11 -o CMakeFiles/cmTC_0090b.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:34: error: ‘struct stat’ has no member named ‘st_mtimespec’
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_mtimespec.tv_nsec);
      |                                  ^~
make[1]: *** [CMakeFiles/cmTC_0090b.dir/build.make:66: CMakeFiles/cmTC_0090b.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0090b/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_mtimespec.tv_nsec);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_MTIME_N failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_94016/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_94016.dir/build.make CMakeFiles/cmTC_94016.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_94016.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_MTIME_N   -std=gnu11 -o CMakeFiles/cmTC_94016.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:36: error: ‘struct stat’ has no member named ‘st_mtime_n’; did you mean ‘st_mtim’?
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_mtime_n);
      |                                    ^~~~~~~~~~
      |                                    st_mtim
make[1]: *** [CMakeFiles/cmTC_94016.dir/build.make:66: CMakeFiles/cmTC_94016.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_94016/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_mtime_n);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_UMTIME failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_10a66/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_10a66.dir/build.make CMakeFiles/cmTC_10a66.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_10a66.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_UMTIME   -std=gnu11 -o CMakeFiles/cmTC_10a66.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:36: error: ‘struct stat’ has no member named ‘st_umtime’; did you mean ‘st_mtim’?
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_umtime);
      |                                    ^~~~~~~~~
      |                                    st_mtim
make[1]: *** [CMakeFiles/cmTC_10a66.dir/build.make:66: CMakeFiles/cmTC_10a66.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_10a66/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_umtime);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_MTIME_USEC failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_74e73/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_74e73.dir/build.make CMakeFiles/cmTC_74e73.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_74e73.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_MTIME_USEC   -std=gnu11 -o CMakeFiles/cmTC_74e73.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:34: error: ‘struct stat’ has no member named ‘st_mtime_usec’
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_mtime_usec);
      |                                  ^~
make[1]: *** [CMakeFiles/cmTC_74e73.dir/build.make:66: CMakeFiles/cmTC_74e73.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_74e73/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_mtime_usec);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_FLAGS failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_ac8dd/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_ac8dd.dir/build.make CMakeFiles/cmTC_ac8dd.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_ac8dd.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STAT_ST_FLAGS   -std=gnu11 -o CMakeFiles/cmTC_ac8dd.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:34: error: ‘struct stat’ has no member named ‘st_flags’
    7 |   (void)sizeof(((struct stat *)0)-&gt;st_flags);
      |                                  ^~
make[1]: *** [CMakeFiles/cmTC_ac8dd.dir/build.make:66: CMakeFiles/cmTC_ac8dd.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_ac8dd/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

int main()
{
  (void)sizeof(((struct stat *)0)-&gt;st_flags);
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STATVFS_F_IOSIZE failed with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_404d5/fast &amp;&amp; /usr/bin/make -f CMakeFiles/cmTC_404d5.dir/build.make CMakeFiles/cmTC_404d5.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_404d5.dir/src.c.o
/usr/bin/cc   -w -DHAVE_STRUCT_STATVFS_F_IOSIZE   -std=gnu11 -o CMakeFiles/cmTC_404d5.dir/src.c.o   -c /home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c: In function ‘main’:
/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp/src.c:7:39: error: ‘struct statvfs’ has no member named ‘f_iosize’; did you mean ‘f_bsize’?
    7 |   (void)sizeof(((struct statvfs *)0)-&gt;f_iosize);
      |                                       ^~~~~~~~
      |                                       f_bsize
make[1]: *** [CMakeFiles/cmTC_404d5.dir/build.make:66: CMakeFiles/cmTC_404d5.dir/src.c.o] Error 1
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_404d5/fast] Error 2


Source file was:

#include &lt;sys/types.h&gt;
#include &lt;sys/statvfs.h&gt;

int main()
{
  (void)sizeof(((struct statvfs *)0)-&gt;f_iosize);
  return 0;
}

Looking for a Fortran compiler failed with the following output:
-- The Fortran compiler identification is unknown
CMake Error at CMakeLists.txt:2 (project):
  No CMAKE_Fortran_COMPILER could be found.

  Tell CMake where to find the compiler by setting either the environment
  variable "FC" or the CMake cache entry CMAKE_Fortran_COMPILER to the full
  path to the compiler, or to the compiler name if it is in the PATH.


-- Configuring incomplete, errors occurred!
See also "/home/zachary/oss/labs/lab-08/build/Tests/CMakeFiles/CheckFortran/CMakeFiles/CMakeOutput.log".
See also "/home/zachary/oss/labs/lab-08/build/Tests/CMakeFiles/CheckFortran/CMakeFiles/CMakeError.log".

Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
The file "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../Bootstrap.cmk/cmake_bootstrap.log" does not exist.
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../Source/cmsys/Configure.hxx":
----------------------------------------------------------------
/* Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
   file Copyright.txt or https://cmake.org/licensing#kwsys for details.  */
#ifndef cmsys_Configure_hxx
#define cmsys_Configure_hxx

/* Include C configuration.  */
#include &lt;cmsys/Configure.h&gt;

/* Whether wstring is available.  */
#define cmsys_STL_HAS_WSTRING 1
/* Whether &lt;ext/stdio_filebuf.h&gt; is available. */
#define cmsys_CXX_HAS_EXT_STDIO_FILEBUF_H                         \
  1
/* Whether the translation map is available or not. */
#define cmsys_SYSTEMTOOLS_USE_TRANSLATION_MAP                     \
  1

#if defined(__SUNPRO_CC) &amp;&amp; __SUNPRO_CC &gt; 0x5130 &amp;&amp; defined(__has_attribute)
#  define cmsys__has_cpp_attribute(x) __has_attribute(x)
#elif defined(__has_cpp_attribute)
#  define cmsys__has_cpp_attribute(x) __has_cpp_attribute(x)
#else
#  define cmsys__has_cpp_attribute(x) 0
#endif

#if __cplusplus &gt;= 201103L
#  define cmsys_NULLPTR nullptr
#else
#  define cmsys_NULLPTR 0
#endif

#ifndef cmsys_FALLTHROUGH
#  if __cplusplus &gt;= 201703L &amp;&amp;                                               \
    cmsys__has_cpp_attribute(fallthrough)
#    define cmsys_FALLTHROUGH [[fallthrough]]
#  elif __cplusplus &gt;= 201103L &amp;&amp;                                             \
    cmsys__has_cpp_attribute(gnu::fallthrough)
#    define cmsys_FALLTHROUGH [[gnu::fallthrough]]
#  elif __cplusplus &gt;= 201103L &amp;&amp;                                             \
    cmsys__has_cpp_attribute(clang::fallthrough)
#    define cmsys_FALLTHROUGH [[clang::fallthrough]]
#  endif
#endif
#ifndef cmsys_FALLTHROUGH
#  define cmsys_FALLTHROUGH static_cast&lt;void&gt;(0)
#endif

#undef cmsys__has_cpp_attribute

/* If building a C++ file in kwsys itself, give the source file
   access to the macros without a configured namespace.  */
#if defined(KWSYS_NAMESPACE)
#  if !cmsys_NAME_IS_KWSYS
#    define kwsys cmsys
#  endif
#  define KWSYS_NAME_IS_KWSYS cmsys_NAME_IS_KWSYS
#  define KWSYS_STL_HAS_WSTRING cmsys_STL_HAS_WSTRING
#  define KWSYS_CXX_HAS_EXT_STDIO_FILEBUF_H                                   \
    cmsys_CXX_HAS_EXT_STDIO_FILEBUF_H
#  define KWSYS_FALLTHROUGH cmsys_FALLTHROUGH
#  define KWSYS_SYSTEMTOOLS_USE_TRANSLATION_MAP                               \
    cmsys_SYSTEMTOOLS_USE_TRANSLATION_MAP
#endif

#endif
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/../../Source/cmsys/Configure.h":
----------------------------------------------------------------
/* Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
   file Copyright.txt or https://cmake.org/licensing#kwsys for details.  */
#ifndef cmsys_Configure_h
#define cmsys_Configure_h

/* If we are building a kwsys .c or .cxx file, let it use the kwsys
   namespace.  When not building a kwsys source file these macros are
   temporarily defined inside the headers that use them.  */
#if defined(KWSYS_NAMESPACE)
#  define kwsys_ns(x) cmsys##x
#  define kwsysEXPORT cmsys_EXPORT
#endif

/* Disable some warnings inside kwsys source files.  */
#if defined(KWSYS_NAMESPACE)
#  if defined(__INTEL_COMPILER)
#    pragma warning(disable : 1572) /* floating-point equality test */
#  endif
#  if defined(__sgi) &amp;&amp; !defined(__GNUC__)
#    pragma set woff 3970 /* pointer to int conversion */
#    pragma set woff 3968 /* 64 bit conversion */
#  endif
#endif

/* Whether kwsys namespace is "kwsys".  */
#define cmsys_NAME_IS_KWSYS 0

/* Setup the export macro.  */
#if 0
#  if defined(_WIN32) || defined(__CYGWIN__)
#    if defined(cmsys_EXPORTS)
#      define cmsys_EXPORT __declspec(dllexport)
#    else
#      define cmsys_EXPORT __declspec(dllimport)
#    endif
#  elif __GNUC__ &gt;= 4
#    define cmsys_EXPORT __attribute__((visibility("default")))
#  else
#    define cmsys_EXPORT
#  endif
#else
#  define cmsys_EXPORT
#endif

/* Enable warnings that are off by default but are useful.  */
#if !defined(cmsys_NO_WARNING_ENABLE)
#  if defined(_MSC_VER)
#    pragma warning(default : 4263) /* no override, call convention differs   \
                                     */
#  endif
#endif

/* Disable warnings that are on by default but occur in valid code.  */
#if !defined(cmsys_NO_WARNING_DISABLE)
#  if defined(_MSC_VER)
#    pragma warning(disable : 4097) /* typedef is synonym for class */
#    pragma warning(disable : 4127) /* conditional expression is constant */
#    pragma warning(disable : 4244) /* possible loss in conversion */
#    pragma warning(disable : 4251) /* missing DLL-interface */
#    pragma warning(disable : 4305) /* truncation from type1 to type2 */
#    pragma warning(disable : 4309) /* truncation of constant value */
#    pragma warning(disable : 4514) /* unreferenced inline function */
#    pragma warning(disable : 4706) /* assignment in conditional expression   \
                                     */
#    pragma warning(disable : 4710) /* function not inlined */
#    pragma warning(disable : 4786) /* identifier truncated in debug info */
#  endif
#endif

/* MSVC 6.0 in release mode will warn about code it produces with its
   optimizer.  Disable the warnings specifically for this
   configuration.  Real warnings will be revealed by a debug build or
   by other compilers.  */
#if !defined(cmsys_NO_WARNING_DISABLE_BOGUS)
#  if defined(_MSC_VER) &amp;&amp; (_MSC_VER &lt; 1300) &amp;&amp; defined(NDEBUG)
#    pragma warning(disable : 4701) /* Variable may be used uninitialized. */
#    pragma warning(disable : 4702) /* Unreachable code.  */
#  endif
#endif

#endif
Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
Contents of "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeOutput.log":
----------------------------------------------------------------
The system is: Linux - 5.8.0-45-generic - x86_64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is GNU, found in "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/3.20.20210331-gbd4ebf1/CompilerIdC/a.out"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"

The CXX compiler identification is GNU, found in "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/3.20.20210331-gbd4ebf1/CompilerIdCXX/a.out"

Detecting C compiler ABI info compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_4cd93/fast &amp;&amp; /usr/bin/make  -f CMakeFiles/cmTC_4cd93.dir/build.make CMakeFiles/cmTC_4cd93.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o
/usr/bin/cc   -v -o CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -c /home/zachary/cmake/Modules/CMakeCCompilerABI.c
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu /home/zachary/cmake/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccaCtAFH.s
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
 as -v --64 -o CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o /tmp/ccaCtAFH.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64'
Linking C executable cmTC_4cd93
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4cd93.dir/link.txt --verbose=1
/usr/bin/cc  -v -rdynamic CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -o cmTC_4cd93 
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_4cd93' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/ccIw3JQ5.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_4cd93 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_4cd93' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp'



Parsed C implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==&gt; [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==&gt; [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==&gt; [/usr/include]
  implicit include dirs: [/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make -f Makefile cmTC_4cd93/fast &amp;&amp; /usr/bin/make  -f CMakeFiles/cmTC_4cd93.dir/build.make CMakeFiles/cmTC_4cd93.dir/build]
  ignore line: [make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp']
  ignore line: [Building C object CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o]
  ignore line: [/usr/bin/cc   -v -o CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -c /home/zachary/cmake/Modules/CMakeCCompilerABI.c]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu /home/zachary/cmake/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccaCtAFH.s]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include &lt;...&gt; search starts here:]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [ as -v --64 -o CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o /tmp/ccaCtAFH.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking C executable cmTC_4cd93]
  ignore line: [/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4cd93.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/cc  -v -rdynamic CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -o cmTC_4cd93 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_4cd93' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/ccIw3JQ5.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_4cd93 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==&gt; ignore
    arg [-plugin] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==&gt; ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==&gt; ignore
    arg [-plugin-opt=-fresolution=/tmp/ccIw3JQ5.res] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [--build-id] ==&gt; ignore
    arg [--eh-frame-hdr] ==&gt; ignore
    arg [-m] ==&gt; ignore
    arg [elf_x86_64] ==&gt; ignore
    arg [--hash-style=gnu] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-export-dynamic] ==&gt; ignore
    arg [-dynamic-linker] ==&gt; ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==&gt; ignore
    arg [-pie] ==&gt; ignore
    arg [-znow] ==&gt; ignore
    arg [-zrelro] ==&gt; ignore
    arg [-o] ==&gt; ignore
    arg [cmTC_4cd93] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==&gt; ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==&gt; dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==&gt; dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==&gt; dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==&gt; dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_4cd93.dir/CMakeCCompilerABI.c.o] ==&gt; ignore
    arg [-lgcc] ==&gt; lib [gcc]
    arg [--push-state] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [--pop-state] ==&gt; ignore
    arg [-lc] ==&gt; lib [c]
    arg [-lgcc] ==&gt; lib [gcc]
    arg [--push-state] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [--pop-state] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==&gt; ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==&gt; [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==&gt; [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==&gt; [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; [/usr/lib]
  implicit libs: [gcc;gcc_s;c;gcc;gcc_s]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Detecting CXX compiler ABI info compiled with the following output:
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_0f733/fast &amp;&amp; /usr/bin/make  -f CMakeFiles/cmTC_0f733.dir/build.make CMakeFiles/cmTC_0f733.dir/build
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o
/usr/bin/c++   -v -o CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -c /home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccWoX46D.s
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /usr/include/c++/9
 /usr/include/x86_64-linux-gnu/c++/9
 /usr/include/c++/9/backward
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 as -v --64 -o CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccWoX46D.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
Linking CXX executable cmTC_0f733
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0f733.dir/link.txt --verbose=1
/usr/bin/c++  -v -rdynamic CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_0f733 
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_0f733' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cc3LNDv7.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_0f733 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_0f733' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp'



Parsed CXX implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/include/c++/9]
    add: [/usr/include/x86_64-linux-gnu/c++/9]
    add: [/usr/include/c++/9/backward]
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/include/c++/9] ==&gt; [/usr/include/c++/9]
  collapse include dir [/usr/include/x86_64-linux-gnu/c++/9] ==&gt; [/usr/include/x86_64-linux-gnu/c++/9]
  collapse include dir [/usr/include/c++/9/backward] ==&gt; [/usr/include/c++/9/backward]
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==&gt; [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==&gt; [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==&gt; [/usr/include]
  implicit include dirs: [/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed CXX implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make -f Makefile cmTC_0f733/fast &amp;&amp; /usr/bin/make  -f CMakeFiles/cmTC_0f733.dir/build.make CMakeFiles/cmTC_0f733.dir/build]
  ignore line: [make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeTmp']
  ignore line: [Building CXX object CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o]
  ignore line: [/usr/bin/c++   -v -o CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -c /home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/c++]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /home/zachary/cmake/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccWoX46D.s]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include &lt;...&gt; search starts here:]
  ignore line: [ /usr/include/c++/9]
  ignore line: [ /usr/include/x86_64-linux-gnu/c++/9]
  ignore line: [ /usr/include/c++/9/backward]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ as -v --64 -o CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccWoX46D.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking CXX executable cmTC_0f733]
  ignore line: [/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0f733.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/c++  -v -rdynamic CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_0f733 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/c++]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_0f733' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cc3LNDv7.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_0f733 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==&gt; ignore
    arg [-plugin] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==&gt; ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==&gt; ignore
    arg [-plugin-opt=-fresolution=/tmp/cc3LNDv7.res] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lc] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==&gt; ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==&gt; ignore
    arg [--build-id] ==&gt; ignore
    arg [--eh-frame-hdr] ==&gt; ignore
    arg [-m] ==&gt; ignore
    arg [elf_x86_64] ==&gt; ignore
    arg [--hash-style=gnu] ==&gt; ignore
    arg [--as-needed] ==&gt; ignore
    arg [-export-dynamic] ==&gt; ignore
    arg [-dynamic-linker] ==&gt; ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==&gt; ignore
    arg [-pie] ==&gt; ignore
    arg [-znow] ==&gt; ignore
    arg [-zrelro] ==&gt; ignore
    arg [-o] ==&gt; ignore
    arg [cmTC_0f733] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==&gt; ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==&gt; dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==&gt; dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==&gt; dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==&gt; dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_0f733.dir/CMakeCXXCompilerABI.cpp.o] ==&gt; ignore
    arg [-lstdc++] ==&gt; lib [stdc++]
    arg [-lm] ==&gt; lib [m]
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [-lgcc] ==&gt; lib [gcc]
    arg [-lc] ==&gt; lib [c]
    arg [-lgcc_s] ==&gt; lib [gcc_s]
    arg [-lgcc] ==&gt; lib [gcc]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==&gt; ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==&gt; ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==&gt; [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==&gt; [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==&gt; [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==&gt; [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==&gt; [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==&gt; [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==&gt; [/usr/lib]
  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Avoid ctest truncation of output: CTEST_FULL_OUTPUT
================================================================
The file "/home/zachary/oss/labs/lab-08/build/Tests/SystemInformation/CMakeFiles/CMakeError.log" does not exist.

<end of output>
Test time =   0.71 sec
----------------------------------------------------------
Test Passed.
"SystemInformation" end time: Mar 31 13:41 EDT
"SystemInformation" time elapsed: 00:00:00
----------------------------------------------------------

31/609 Testing: MathTest
31/609 Test: MathTest
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/MathTest" "/home/zachary/oss/labs/lab-08/build/Tests/MathTest" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "MathTest" "--build-options" "--test-command" "MathTest"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"MathTest" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/MathTest
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/MathTest
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/MathTest
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/MathTest

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building CXX object CMakeFiles/MathTest.dir/MathTestExec.cxx.o
[100%] Linking CXX executable MathTest
[100%] Built target MathTest

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/MathTest/MathTest"

<end of output>
Test time =   0.57 sec
----------------------------------------------------------
Test Passed.
"MathTest" end time: Mar 31 13:41 EDT
"MathTest" time elapsed: 00:00:00
----------------------------------------------------------

32/609 Testing: CompileFeatures
32/609 Test: CompileFeatures
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/CompileFeatures" "/home/zachary/oss/labs/lab-08/build/Tests/CompileFeatures" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "CompileFeatures" "--build-options" "--test-command" "CompileFeatures"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"CompileFeatures" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/CompileFeatures
======== CMake output     ======
The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CompileFeatures
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CompileFeatures
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/CompileFeatures

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [  1%] Building CXX object CMakeFiles/CompileFeaturesGenex2.dir/genex_test.cpp.o
[  2%] Linking CXX executable CompileFeaturesGenex2
[  2%] Built target CompileFeaturesGenex2
[  3%] Building CXX object CMakeFiles/CompileFeaturesGenex.dir/genex_test.cpp.o
[  5%] Linking CXX executable CompileFeaturesGenex
[  5%] Built target CompileFeaturesGenex
[  6%] Building CXX object CMakeFiles/IfaceCompileFeatures.dir/main.cpp.o
[  7%] Linking CXX executable IfaceCompileFeatures
[  7%] Built target IfaceCompileFeatures
[  8%] Building CXX object CMakeFiles/GenexCompileFeatures.dir/main.cpp.o
[ 10%] Linking CXX executable GenexCompileFeatures
[ 10%] Built target GenexCompileFeatures
[ 11%] Building CXX object CMakeFiles/default_dialect.dir/default_dialect.cpp.o
[ 12%] Linking CXX executable default_dialect
[ 12%] Built target default_dialect
[ 13%] Building C object CMakeFiles/CompileFeaturesGenex_C.dir/genex_test.c.o
[ 15%] Linking C executable CompileFeaturesGenex_C
[ 15%] Built target CompileFeaturesGenex_C
[ 16%] Building C object CMakeFiles/default_dialect_C.dir/default_dialect.c.o
[ 17%] Linking C executable default_dialect_C
[ 17%] Built target default_dialect_C
[ 18%] Building CXX object CMakeFiles/test_cxx_variable_templates.dir/cxx_variable_templates.cpp.o
[ 18%] Built target test_cxx_variable_templates
[ 20%] Building CXX object CMakeFiles/test_cxx_return_type_deduction.dir/cxx_return_type_deduction.cpp.o
[ 20%] Built target test_cxx_return_type_deduction
[ 21%] Building CXX object CMakeFiles/test_cxx_local_type_template_args.dir/cxx_local_type_template_args.cpp.o
[ 21%] Built target test_cxx_local_type_template_args
[ 22%] Building CXX object CMakeFiles/test_cxx_lambdas.dir/cxx_lambdas.cpp.o
[ 22%] Built target test_cxx_lambdas
[ 24%] Building C object CMakeFiles/test_c_variadic_macros.dir/c_variadic_macros.c.o
[ 24%] Built target test_c_variadic_macros
[ 25%] Building CXX object CMakeFiles/test_cxx_generalized_initializers.dir/cxx_generalized_initializers.cpp.o
[ 25%] Built target test_cxx_generalized_initializers
[ 26%] Building CXX object CMakeFiles/test_cxx_delegating_constructors.dir/cxx_delegating_constructors.cpp.o
[ 26%] Built target test_cxx_delegating_constructors
[ 27%] Building CXX object CMakeFiles/test_cxx_binary_literals.dir/cxx_binary_literals.cpp.o
[ 27%] Built target test_cxx_binary_literals
[ 29%] Building CXX object CMakeFiles/test_cxx_func_identifier.dir/cxx_func_identifier.cpp.o
[ 29%] Built target test_cxx_func_identifier
[ 30%] Building CXX object CMakeFiles/test_cxx_unicode_literals.dir/cxx_unicode_literals.cpp.o
[ 30%] Built target test_cxx_unicode_literals
[ 31%] Building CXX object CMakeFiles/test_cxx_explicit_conversions.dir/cxx_explicit_conversions.cpp.o
[ 31%] Built target test_cxx_explicit_conversions
[ 32%] Building CXX object CMakeFiles/test_cxx_final.dir/cxx_final.cpp.o
[ 32%] Built target test_cxx_final
[ 34%] Building CXX object CMakeFiles/test_cxx_range_for.dir/cxx_range_for.cpp.o
[ 34%] Built target test_cxx_range_for
[ 35%] Building CXX object CMakeFiles/test_cxx_lambda_init_captures.dir/cxx_lambda_init_captures.cpp.o
[ 35%] Built target test_cxx_lambda_init_captures
[ 36%] Building CXX object CMakeFiles/test_cxx_deleted_functions.dir/cxx_deleted_functions.cpp.o
[ 36%] Built target test_cxx_deleted_functions
[ 37%] Building CXX object CMakeFiles/test_cxx_reference_qualified_functions.dir/cxx_reference_qualified_functions.cpp.o
[ 37%] Built target test_cxx_reference_qualified_functions
[ 39%] Building CXX object CMakeFiles/test_cxx_relaxed_constexpr.dir/cxx_relaxed_constexpr.cpp.o
[ 39%] Built target test_cxx_relaxed_constexpr
[ 40%] Building CXX object CMakeFiles/test_cxx_extended_friend_declarations.dir/cxx_extended_friend_declarations.cpp.o
[ 40%] Built target test_cxx_extended_friend_declarations
[ 41%] Building C object CMakeFiles/test_c_function_prototypes.dir/c_function_prototypes.c.o
[ 41%] Built target test_c_function_prototypes
[ 43%] Building C object CMakeFiles/test_c_restrict.dir/c_restrict.c.o
[ 43%] Built target test_c_restrict
[ 44%] Building CXX object CMakeFiles/test_cxx_sizeof_member.dir/cxx_sizeof_member.cpp.o
[ 44%] Built target test_cxx_sizeof_member
[ 45%] Building CXX object CMakeFiles/test_cxx_defaulted_functions.dir/cxx_defaulted_functions.cpp.o
[ 45%] Built target test_cxx_defaulted_functions
[ 46%] Building CXX object CMakeFiles/test_cxx_generic_lambdas.dir/cxx_generic_lambdas.cpp.o
[ 46%] Built target test_cxx_generic_lambdas
[ 48%] Building CXX object CMakeFiles/test_cxx_alias_templates.dir/cxx_alias_templates.cpp.o
[ 48%] Built target test_cxx_alias_templates
[ 49%] Building CXX object CMakeFiles/test_cxx_extern_templates.dir/cxx_extern_templates.cpp.o
[ 49%] Built target test_cxx_extern_templates
[ 50%] Building CXX object CMakeFiles/test_cxx_defaulted_move_initializers.dir/cxx_defaulted_move_initializers.cpp.o
[ 50%] Built target test_cxx_defaulted_move_initializers
[ 51%] Building CXX object CMakeFiles/test_cxx_right_angle_brackets.dir/cxx_right_angle_brackets.cpp.o
[ 51%] Built target test_cxx_right_angle_brackets
[ 53%] Building CXX object CMakeFiles/test_cxx_attributes.dir/cxx_attributes.cpp.o
[ 53%] Built target test_cxx_attributes
[ 54%] Building CXX object CMakeFiles/test_cxx_default_function_template_args.dir/cxx_default_function_template_args.cpp.o
[ 54%] Built target test_cxx_default_function_template_args
[ 55%] Building CXX object CMakeFiles/test_cxx_template_template_parameters.dir/cxx_template_template_parameters.cpp.o
[ 55%] Built target test_cxx_template_template_parameters
[ 56%] Building CXX object CMakeFiles/test_cxx_nullptr.dir/cxx_nullptr.cpp.o
[ 56%] Built target test_cxx_nullptr
[ 58%] Building CXX object CMakeFiles/test_cxx_override.dir/cxx_override.cpp.o
[ 58%] Built target test_cxx_override
[ 59%] Building C object CMakeFiles/test_c_static_assert.dir/c_static_assert.c.o
[ 59%] Built target test_c_static_assert
[ 60%] Building CXX object CMakeFiles/test_cxx_alignof.dir/cxx_alignof.cpp.o
[ 60%] Built target test_cxx_alignof
[ 62%] Building CXX object CMakeFiles/test_cxx_auto_type.dir/cxx_auto_type.cpp.o
[ 62%] Built target test_cxx_auto_type
[ 63%] Building CXX object CMakeFiles/test_cxx_nonstatic_member_init.dir/cxx_nonstatic_member_init.cpp.o
[ 63%] Built target test_cxx_nonstatic_member_init
[ 64%] Building CXX object CMakeFiles/test_cxx_constexpr.dir/cxx_constexpr.cpp.o
[ 64%] Built target test_cxx_constexpr
[ 65%] Building CXX object CMakeFiles/test_cxx_inline_namespaces.dir/cxx_inline_namespaces.cpp.o
[ 65%] Built target test_cxx_inline_namespaces
[ 67%] Building CXX object CMakeFiles/test_cxx_user_literals.dir/cxx_user_literals.cpp.o
[ 67%] Built target test_cxx_user_literals
[ 68%] Building CXX object CMakeFiles/test_cxx_enum_forward_declarations.dir/cxx_enum_forward_declarations.cpp.o
[ 68%] Built target test_cxx_enum_forward_declarations
[ 69%] Building CXX object CMakeFiles/test_cxx_raw_string_literals.dir/cxx_raw_string_literals.cpp.o
[ 69%] Built target test_cxx_raw_string_literals
[ 70%] Building CXX object CMakeFiles/test_cxx_decltype_incomplete_return_types.dir/cxx_decltype_incomplete_return_types.cpp.o
[ 70%] Built target test_cxx_decltype_incomplete_return_types
[ 72%] Building CXX object CMakeFiles/test_cxx_long_long_type.dir/cxx_long_long_type.cpp.o
[ 72%] Built target test_cxx_long_long_type
[ 73%] Building CXX object CMakeFiles/test_cxx_static_assert.dir/cxx_static_assert.cpp.o
[ 73%] Built target test_cxx_static_assert
[ 74%] Building CXX object CMakeFiles/test_cxx_aggregate_default_initializers.dir/cxx_aggregate_default_initializers.cpp.o
[ 74%] Built target test_cxx_aggregate_default_initializers
[ 75%] Building CXX object CMakeFiles/CompileFeaturesGenex3.dir/genex_test.cpp.o
[ 77%] Linking CXX executable CompileFeaturesGenex3
[ 77%] Built target CompileFeaturesGenex3
[ 78%] Building CXX object CMakeFiles/test_cxx_alignas.dir/cxx_alignas.cpp.o
[ 78%] Built target test_cxx_alignas
[ 79%] Building CXX object CMakeFiles/test_cxx_noexcept.dir/cxx_noexcept.cpp.o
[ 79%] Built target test_cxx_noexcept
[ 81%] Building CXX object CMakeFiles/test_cxx_rvalue_references.dir/cxx_rvalue_references.cpp.o
[ 81%] Built target test_cxx_rvalue_references
[ 82%] Building CXX object CMakeFiles/test_cxx_strong_enums.dir/cxx_strong_enums.cpp.o
[ 82%] Built target test_cxx_strong_enums
[ 83%] Building CXX object CMakeFiles/test_cxx_thread_local.dir/cxx_thread_local.cpp.o
[ 83%] Built target test_cxx_thread_local
[ 84%] Building CXX object CMakeFiles/test_cxx_trailing_return_types.dir/cxx_trailing_return_types.cpp.o
[ 84%] Built target test_cxx_trailing_return_types
[ 86%] Building CXX object CMakeFiles/test_cxx_decltype.dir/cxx_decltype.cpp.o
[ 86%] Built target test_cxx_decltype
[ 87%] Building CXX object CMakeFiles/test_cxx_uniform_initialization.dir/cxx_uniform_initialization.cpp.o
[ 87%] Built target test_cxx_uniform_initialization
[ 88%] Building CXX object CMakeFiles/test_cxx_inheriting_constructors.dir/cxx_inheriting_constructors.cpp.o
[ 88%] Built target test_cxx_inheriting_constructors
[ 89%] Building CXX object CMakeFiles/test_cxx_unrestricted_unions.dir/cxx_unrestricted_unions.cpp.o
[ 89%] Built target test_cxx_unrestricted_unions
[ 91%] Building CXX object CMakeFiles/test_cxx_variadic_macros.dir/cxx_variadic_macros.cpp.o
[ 91%] Built target test_cxx_variadic_macros
[ 92%] Building CXX object CMakeFiles/test_cxx_decltype_auto.dir/cxx_decltype_auto.cpp.o
[ 92%] Built target test_cxx_decltype_auto
[ 93%] Building CXX object CMakeFiles/test_cxx_digit_separators.dir/cxx_digit_separators.cpp.o
[ 93%] Built target test_cxx_digit_separators
[ 94%] Building CXX object CMakeFiles/test_cxx_variadic_templates.dir/cxx_variadic_templates.cpp.o
[ 94%] Built target test_cxx_variadic_templates
[ 96%] Building CXX object CMakeFiles/CompileFeatures.dir/main.cpp.o
[ 97%] Linking CXX executable CompileFeatures
[ 97%] Built target CompileFeatures
[ 98%] Building CXX object CMakeFiles/test_cxx_attribute_deprecated.dir/cxx_attribute_deprecated.cpp.o
/home/zachary/cmake/Tests/CompileFeatures/cxx_attribute_deprecated.cpp: In function ‘int someFunc()’:
/home/zachary/cmake/Tests/CompileFeatures/cxx_attribute_deprecated.cpp:6:14: warning: ‘int foo()’ is deprecated [-Wdeprecated-declarations]
    6 |   return foo();
      |              ^
/home/zachary/cmake/Tests/CompileFeatures/cxx_attribute_deprecated.cpp:2:20: note: declared here
    2 | [[deprecated]] int foo() { return 0; }
      |                    ^~~
/home/zachary/cmake/Tests/CompileFeatures/cxx_attribute_deprecated.cpp:6:14: warning: ‘int foo()’ is deprecated [-Wdeprecated-declarations]
    6 |   return foo();
      |              ^
/home/zachary/cmake/Tests/CompileFeatures/cxx_attribute_deprecated.cpp:2:20: note: declared here
    2 | [[deprecated]] int foo() { return 0; }
      |                    ^~~
[ 98%] Built target test_cxx_attribute_deprecated
[100%] Building CXX object CMakeFiles/test_cxx_contextual_conversions.dir/cxx_contextual_conversions.cpp.o
[100%] Built target test_cxx_contextual_conversions

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/CompileFeatures/CompileFeatures"

<end of output>
Test time =   2.99 sec
----------------------------------------------------------
Test Passed.
"CompileFeatures" end time: Mar 31 13:41 EDT
"CompileFeatures" time elapsed: 00:00:02
----------------------------------------------------------

33/609 Testing: CMakeCommands.target_compile_features
33/609 Test: CMakeCommands.target_compile_features
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/CMakeCommands/target_compile_features" "/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "target_compile_features" "--build-options"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"CMakeCommands.target_compile_features" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features
======== CMake output     ======
The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features

Run Clean Command:/usr/bin/make -f Makefile clean
/usr/bin/make  -f CMakeFiles/Makefile2 clean
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_target_compile_features_specific.dir/build.make CMakeFiles/c_target_compile_features_specific.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_target_compile_features_specific.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_lib_restrict_specific.dir/build.make CMakeFiles/c_lib_restrict_specific.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_lib_restrict_specific.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_target_compile_features_meta.dir/build.make CMakeFiles/c_target_compile_features_meta.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_target_compile_features_meta.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_restrict_user_specific.dir/build.make CMakeFiles/c_restrict_user_specific.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_restrict_user_specific.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_lib_restrict_meta.dir/build.make CMakeFiles/c_lib_restrict_meta.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_lib_restrict_meta.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_auto_type_specific.dir/build.make CMakeFiles/cxx_lib_auto_type_specific.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_lib_auto_type_specific.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_restrict_user_meta.dir/build.make CMakeFiles/c_restrict_user_meta.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_restrict_user_meta.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_target_compile_features_specific.dir/build.make CMakeFiles/cxx_target_compile_features_specific.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_target_compile_features_specific.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_user_meta.dir/build.make CMakeFiles/cxx_lib_user_meta.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_lib_user_meta.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_target_compile_features_meta.dir/build.make CMakeFiles/cxx_target_compile_features_meta.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_target_compile_features_meta.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_user_specific.dir/build.make CMakeFiles/cxx_lib_user_specific.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_lib_user_specific.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_auto_type_meta.dir/build.make CMakeFiles/cxx_lib_auto_type_meta.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_lib_auto_type_meta.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'

Run Build Command(s):/usr/bin/make -f Makefile && /home/zachary/oss/labs/lab-08/build/bin/cmake -S/home/zachary/cmake/Tests/CMakeCommands/target_compile_features -B/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features --check-build-system CMakeFiles/Makefile.cmake 0
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_progress_start /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features//CMakeFiles/progress.marks
/usr/bin/make  -f CMakeFiles/Makefile2 all
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_target_compile_features_specific.dir/build.make CMakeFiles/c_target_compile_features_specific.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/c_target_compile_features_specific.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_target_compile_features_specific.dir/build.make CMakeFiles/c_target_compile_features_specific.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[  4%] Building C object CMakeFiles/c_target_compile_features_specific.dir/main.c.o
/usr/bin/cc    -MD -MT CMakeFiles/c_target_compile_features_specific.dir/main.c.o -MF CMakeFiles/c_target_compile_features_specific.dir/main.c.o.d -o CMakeFiles/c_target_compile_features_specific.dir/main.c.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/main.c
[  8%] Linking C executable c_target_compile_features_specific
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/c_target_compile_features_specific.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/c_target_compile_features_specific.dir/main.c.o -o c_target_compile_features_specific 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[  8%] Built target c_target_compile_features_specific
/usr/bin/make  -f CMakeFiles/c_lib_restrict_specific.dir/build.make CMakeFiles/c_lib_restrict_specific.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/c_lib_restrict_specific.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_lib_restrict_specific.dir/build.make CMakeFiles/c_lib_restrict_specific.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 12%] Building C object CMakeFiles/c_lib_restrict_specific.dir/lib_restrict.c.o
/usr/bin/cc    -MD -MT CMakeFiles/c_lib_restrict_specific.dir/lib_restrict.c.o -MF CMakeFiles/c_lib_restrict_specific.dir/lib_restrict.c.o.d -o CMakeFiles/c_lib_restrict_specific.dir/lib_restrict.c.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/lib_restrict.c
[ 16%] Linking C static library libc_lib_restrict_specific.a
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_lib_restrict_specific.dir/cmake_clean_target.cmake
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/c_lib_restrict_specific.dir/link.txt --verbose=1
/usr/bin/ar qc libc_lib_restrict_specific.a CMakeFiles/c_lib_restrict_specific.dir/lib_restrict.c.o
/usr/bin/ranlib libc_lib_restrict_specific.a
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 16%] Built target c_lib_restrict_specific
/usr/bin/make  -f CMakeFiles/c_target_compile_features_meta.dir/build.make CMakeFiles/c_target_compile_features_meta.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/c_target_compile_features_meta.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_target_compile_features_meta.dir/build.make CMakeFiles/c_target_compile_features_meta.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 20%] Building C object CMakeFiles/c_target_compile_features_meta.dir/main.c.o
/usr/bin/cc    -MD -MT CMakeFiles/c_target_compile_features_meta.dir/main.c.o -MF CMakeFiles/c_target_compile_features_meta.dir/main.c.o.d -o CMakeFiles/c_target_compile_features_meta.dir/main.c.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/main.c
[ 25%] Linking C executable c_target_compile_features_meta
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/c_target_compile_features_meta.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/c_target_compile_features_meta.dir/main.c.o -o c_target_compile_features_meta 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 25%] Built target c_target_compile_features_meta
/usr/bin/make  -f CMakeFiles/c_restrict_user_specific.dir/build.make CMakeFiles/c_restrict_user_specific.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/c_restrict_user_specific.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_restrict_user_specific.dir/build.make CMakeFiles/c_restrict_user_specific.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 29%] Building C object CMakeFiles/c_restrict_user_specific.dir/restrict_user.c.o
/usr/bin/cc    -MD -MT CMakeFiles/c_restrict_user_specific.dir/restrict_user.c.o -MF CMakeFiles/c_restrict_user_specific.dir/restrict_user.c.o.d -o CMakeFiles/c_restrict_user_specific.dir/restrict_user.c.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/restrict_user.c
[ 33%] Linking C executable c_restrict_user_specific
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/c_restrict_user_specific.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/c_restrict_user_specific.dir/restrict_user.c.o -o c_restrict_user_specific  libc_lib_restrict_specific.a 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 33%] Built target c_restrict_user_specific
/usr/bin/make  -f CMakeFiles/c_lib_restrict_meta.dir/build.make CMakeFiles/c_lib_restrict_meta.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/c_lib_restrict_meta.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_lib_restrict_meta.dir/build.make CMakeFiles/c_lib_restrict_meta.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 37%] Building C object CMakeFiles/c_lib_restrict_meta.dir/lib_restrict.c.o
/usr/bin/cc    -MD -MT CMakeFiles/c_lib_restrict_meta.dir/lib_restrict.c.o -MF CMakeFiles/c_lib_restrict_meta.dir/lib_restrict.c.o.d -o CMakeFiles/c_lib_restrict_meta.dir/lib_restrict.c.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/lib_restrict.c
[ 41%] Linking C static library libc_lib_restrict_meta.a
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/c_lib_restrict_meta.dir/cmake_clean_target.cmake
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/c_lib_restrict_meta.dir/link.txt --verbose=1
/usr/bin/ar qc libc_lib_restrict_meta.a CMakeFiles/c_lib_restrict_meta.dir/lib_restrict.c.o
/usr/bin/ranlib libc_lib_restrict_meta.a
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 41%] Built target c_lib_restrict_meta
/usr/bin/make  -f CMakeFiles/cxx_lib_auto_type_specific.dir/build.make CMakeFiles/cxx_lib_auto_type_specific.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/cxx_lib_auto_type_specific.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_auto_type_specific.dir/build.make CMakeFiles/cxx_lib_auto_type_specific.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 45%] Building CXX object CMakeFiles/cxx_lib_auto_type_specific.dir/lib_auto_type.cpp.o
/usr/bin/c++    -MD -MT CMakeFiles/cxx_lib_auto_type_specific.dir/lib_auto_type.cpp.o -MF CMakeFiles/cxx_lib_auto_type_specific.dir/lib_auto_type.cpp.o.d -o CMakeFiles/cxx_lib_auto_type_specific.dir/lib_auto_type.cpp.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/lib_auto_type.cpp
[ 50%] Linking CXX static library libcxx_lib_auto_type_specific.a
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_lib_auto_type_specific.dir/cmake_clean_target.cmake
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cxx_lib_auto_type_specific.dir/link.txt --verbose=1
/usr/bin/ar qc libcxx_lib_auto_type_specific.a CMakeFiles/cxx_lib_auto_type_specific.dir/lib_auto_type.cpp.o
/usr/bin/ranlib libcxx_lib_auto_type_specific.a
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 50%] Built target cxx_lib_auto_type_specific
/usr/bin/make  -f CMakeFiles/c_restrict_user_meta.dir/build.make CMakeFiles/c_restrict_user_meta.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/c_restrict_user_meta.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/c_restrict_user_meta.dir/build.make CMakeFiles/c_restrict_user_meta.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 54%] Building C object CMakeFiles/c_restrict_user_meta.dir/restrict_user.c.o
/usr/bin/cc    -MD -MT CMakeFiles/c_restrict_user_meta.dir/restrict_user.c.o -MF CMakeFiles/c_restrict_user_meta.dir/restrict_user.c.o.d -o CMakeFiles/c_restrict_user_meta.dir/restrict_user.c.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/restrict_user.c
[ 58%] Linking C executable c_restrict_user_meta
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/c_restrict_user_meta.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/c_restrict_user_meta.dir/restrict_user.c.o -o c_restrict_user_meta  libc_lib_restrict_meta.a 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 58%] Built target c_restrict_user_meta
/usr/bin/make  -f CMakeFiles/cxx_target_compile_features_specific.dir/build.make CMakeFiles/cxx_target_compile_features_specific.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/cxx_target_compile_features_specific.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_target_compile_features_specific.dir/build.make CMakeFiles/cxx_target_compile_features_specific.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 62%] Building CXX object CMakeFiles/cxx_target_compile_features_specific.dir/main.cpp.o
/usr/bin/c++    -MD -MT CMakeFiles/cxx_target_compile_features_specific.dir/main.cpp.o -MF CMakeFiles/cxx_target_compile_features_specific.dir/main.cpp.o.d -o CMakeFiles/cxx_target_compile_features_specific.dir/main.cpp.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/main.cpp
[ 66%] Linking CXX executable cxx_target_compile_features_specific
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cxx_target_compile_features_specific.dir/link.txt --verbose=1
/usr/bin/c++ -rdynamic CMakeFiles/cxx_target_compile_features_specific.dir/main.cpp.o -o cxx_target_compile_features_specific 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 66%] Built target cxx_target_compile_features_specific
/usr/bin/make  -f CMakeFiles/cxx_lib_auto_type_meta.dir/build.make CMakeFiles/cxx_lib_auto_type_meta.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/cxx_lib_auto_type_meta.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_auto_type_meta.dir/build.make CMakeFiles/cxx_lib_auto_type_meta.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 70%] Building CXX object CMakeFiles/cxx_lib_auto_type_meta.dir/lib_auto_type.cpp.o
/usr/bin/c++    -MD -MT CMakeFiles/cxx_lib_auto_type_meta.dir/lib_auto_type.cpp.o -MF CMakeFiles/cxx_lib_auto_type_meta.dir/lib_auto_type.cpp.o.d -o CMakeFiles/cxx_lib_auto_type_meta.dir/lib_auto_type.cpp.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/lib_auto_type.cpp
[ 75%] Linking CXX static library libcxx_lib_auto_type_meta.a
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/cxx_lib_auto_type_meta.dir/cmake_clean_target.cmake
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cxx_lib_auto_type_meta.dir/link.txt --verbose=1
/usr/bin/ar qc libcxx_lib_auto_type_meta.a CMakeFiles/cxx_lib_auto_type_meta.dir/lib_auto_type.cpp.o
/usr/bin/ranlib libcxx_lib_auto_type_meta.a
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 75%] Built target cxx_lib_auto_type_meta
/usr/bin/make  -f CMakeFiles/cxx_lib_user_meta.dir/build.make CMakeFiles/cxx_lib_user_meta.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/cxx_lib_user_meta.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_user_meta.dir/build.make CMakeFiles/cxx_lib_user_meta.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 79%] Building CXX object CMakeFiles/cxx_lib_user_meta.dir/lib_user.cpp.o
/usr/bin/c++    -MD -MT CMakeFiles/cxx_lib_user_meta.dir/lib_user.cpp.o -MF CMakeFiles/cxx_lib_user_meta.dir/lib_user.cpp.o.d -o CMakeFiles/cxx_lib_user_meta.dir/lib_user.cpp.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/lib_user.cpp
[ 83%] Linking CXX executable cxx_lib_user_meta
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cxx_lib_user_meta.dir/link.txt --verbose=1
/usr/bin/c++ -rdynamic CMakeFiles/cxx_lib_user_meta.dir/lib_user.cpp.o -o cxx_lib_user_meta  libcxx_lib_auto_type_meta.a 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 83%] Built target cxx_lib_user_meta
/usr/bin/make  -f CMakeFiles/cxx_target_compile_features_meta.dir/build.make CMakeFiles/cxx_target_compile_features_meta.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/cxx_target_compile_features_meta.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_target_compile_features_meta.dir/build.make CMakeFiles/cxx_target_compile_features_meta.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 87%] Building CXX object CMakeFiles/cxx_target_compile_features_meta.dir/main.cpp.o
/usr/bin/c++    -MD -MT CMakeFiles/cxx_target_compile_features_meta.dir/main.cpp.o -MF CMakeFiles/cxx_target_compile_features_meta.dir/main.cpp.o.d -o CMakeFiles/cxx_target_compile_features_meta.dir/main.cpp.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/main.cpp
[ 91%] Linking CXX executable cxx_target_compile_features_meta
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cxx_target_compile_features_meta.dir/link.txt --verbose=1
/usr/bin/c++ -rdynamic CMakeFiles/cxx_target_compile_features_meta.dir/main.cpp.o -o cxx_target_compile_features_meta 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 91%] Built target cxx_target_compile_features_meta
/usr/bin/make  -f CMakeFiles/cxx_lib_user_specific.dir/build.make CMakeFiles/cxx_lib_user_specific.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
cd /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/cmake/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles/cxx_lib_user_specific.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/usr/bin/make  -f CMakeFiles/cxx_lib_user_specific.dir/build.make CMakeFiles/cxx_lib_user_specific.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[ 95%] Building CXX object CMakeFiles/cxx_lib_user_specific.dir/lib_user.cpp.o
/usr/bin/c++    -MD -MT CMakeFiles/cxx_lib_user_specific.dir/lib_user.cpp.o -MF CMakeFiles/cxx_lib_user_specific.dir/lib_user.cpp.o.d -o CMakeFiles/cxx_lib_user_specific.dir/lib_user.cpp.o -c /home/zachary/cmake/Tests/CMakeCommands/target_compile_features/lib_user.cpp
[100%] Linking CXX executable cxx_lib_user_specific
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/cxx_lib_user_specific.dir/link.txt --verbose=1
/usr/bin/c++ -rdynamic CMakeFiles/cxx_lib_user_specific.dir/lib_user.cpp.o -o cxx_lib_user_specific  libcxx_lib_auto_type_specific.a 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
[100%] Built target cxx_lib_user_specific
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features'
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_progress_start /home/zachary/oss/labs/lab-08/build/Tests/CMakeCommands/target_compile_features/CMakeFiles 0

<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"CMakeCommands.target_compile_features" end time: Mar 31 13:41 EDT
"CMakeCommands.target_compile_features" time elapsed: 00:00:01
----------------------------------------------------------

34/609 Testing: MSManifest
34/609 Test: MSManifest
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/MSManifest" "/home/zachary/oss/labs/lab-08/build/Tests/MSManifest" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "MSManifest" "--build-options" "--test-command" "/home/zachary/oss/labs/lab-08/build/bin/ctest" "-V" "-C" ""
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"MSManifest" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/MSManifest
======== CMake output     ======
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/MSManifest
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/MSManifest
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/MSManifest

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 25%] Building C object Subdir/CMakeFiles/MSManifest.dir/main.c.o
[ 50%] Linking C executable ../MSManifest
[ 50%] Built target MSManifest
[ 75%] Building C object Subdir2/CMakeFiles/MSMultipleManifest.dir/main.c.o
[100%] Linking C executable ../MSMultipleManifest
[100%] Built target MSMultipleManifest

Running test command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "-V" "-C" ""
UpdateCTestConfiguration  from :/home/zachary/oss/labs/lab-08/build/Tests/MSManifest/DartConfiguration.tcl
Parse Config file:/home/zachary/oss/labs/lab-08/build/Tests/MSManifest/DartConfiguration.tcl
UpdateCTestConfiguration  from :/home/zachary/oss/labs/lab-08/build/Tests/MSManifest/DartConfiguration.tcl
Parse Config file:/home/zachary/oss/labs/lab-08/build/Tests/MSManifest/DartConfiguration.tcl
Test project /home/zachary/oss/labs/lab-08/build/Tests/MSManifest
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
No tests were found!!!

<end of output>
Test time =   0.55 sec
----------------------------------------------------------
Test Passed.
"MSManifest" end time: Mar 31 13:41 EDT
"MSManifest" time elapsed: 00:00:00
----------------------------------------------------------

35/609 Testing: Simple
35/609 Test: Simple
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/Simple" "/home/zachary/oss/labs/lab-08/build/Tests/Simple" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "Simple" "--build-options" "--test-command" "Simple"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"Simple" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/Simple
======== CMake output     ======
The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/Simple
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/Simple
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/Simple

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 16%] Building CXX object CMakeFiles/simpleLib.dir/simpleLib.cxx.o
[ 33%] Building C object CMakeFiles/simpleLib.dir/simpleCLib.c.o
[ 50%] Building CXX object CMakeFiles/simpleLib.dir/simpleWe.cpp.o
[ 66%] Linking CXX static library libsimpleLib.a
[ 66%] Built target simpleLib
[ 83%] Building CXX object CMakeFiles/Simple.dir/simple.cxx.o
[100%] Linking CXX executable Simple
[100%] Built target Simple

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/Simple/Simple"
Count: 0/10
Count: 1/10
Count: 2/10
Count: 3/10
Count: 4/10
Count: 5/10
Count: 6/10
Count: 7/10
Count: 8/10
Count: 9/10
This one has nonstandard extension

<end of output>
Test time =   0.64 sec
----------------------------------------------------------
Test Passed.
"Simple" end time: Mar 31 13:41 EDT
"Simple" time elapsed: 00:00:00
----------------------------------------------------------

36/609 Testing: PreOrder
36/609 Test: PreOrder
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/PreOrder" "/home/zachary/oss/labs/lab-08/build/Tests/PreOrder" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "PreOrder" "--build-options" "--test-command" "PreOrder"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"PreOrder" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/PreOrder
======== CMake output     ======
The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
CMake Warning (dev) in CMakeLists.txt:
  No cmake_minimum_required command is present.  A line of code such as

    cmake_minimum_required(VERSION 3.20)

  should be added at the top of the file.  The version specified may be lower
  if you wish to support older CMake versions for this project.  For more
  information run "cmake --help-policy CMP0000".
This warning is for project developers.  Use -Wno-dev to suppress it.

Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/PreOrder
CMake Warning (dev) in CMakeLists.txt:
  No cmake_minimum_required command is present.  A line of code such as

    cmake_minimum_required(VERSION 3.20)

  should be added at the top of the file.  The version specified may be lower
  if you wish to support older CMake versions for this project.  For more
  information run "cmake --help-policy CMP0000".
This warning is for project developers.  Use -Wno-dev to suppress it.

Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/PreOrder
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/PreOrder

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 25%] Building CXX object Library/CMakeFiles/simpleLib.dir/simpleLib.o
[ 50%] Linking CXX static library libsimpleLib.a
[ 50%] Built target simpleLib
[ 75%] Building CXX object CMakeFiles/PreOrder.dir/simple.o
[100%] Linking CXX executable PreOrder
[100%] Built target PreOrder

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/PreOrder/PreOrder"

<end of output>
Test time =   0.60 sec
----------------------------------------------------------
Test Passed.
"PreOrder" end time: Mar 31 13:41 EDT
"PreOrder" time elapsed: 00:00:00
----------------------------------------------------------

37/609 Testing: MissingSourceFile
37/609 Test: MissingSourceFile
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/MissingSourceFile" "/home/zachary/oss/labs/lab-08/build/Tests/MissingSourceFile" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "MissingSourceFile" "--build-options" "--test-command" "MissingSourceFile"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"MissingSourceFile" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/MissingSourceFile
Error: cmake execution failed
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Configuring done
CMake Error at CMakeLists.txt:3 (add_executable):
  Cannot find source file:

    DoesNotExist/MissingSourceFile.c

  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .ixx .cppm .h
  .hh .h++ .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc


CMake Error at CMakeLists.txt:3 (add_executable):
  No SOURCES given to target: MissingSourceFile


CMake Generate step failed.  Build files cannot be regenerated correctly.

<end of output>
Test time =   0.22 sec
----------------------------------------------------------
Test Pass Reason:
Required regular expression found. Regex=[CMake Error at CMakeLists.txt:3 \(add_executable\):[ 
]*Cannot find source file:[ 
]*DoesNotExist/MissingSourceFile.c]
"MissingSourceFile" end time: Mar 31 13:41 EDT
"MissingSourceFile" time elapsed: 00:00:00
----------------------------------------------------------

38/609 Testing: COnly
38/609 Test: COnly
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/COnly" "/home/zachary/oss/labs/lab-08/build/Tests/COnly" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "COnly" "--build-options" "--test-command" "COnly"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"COnly" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/COnly
======== CMake output     ======
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
String: # CMake
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/COnly
String: # CMake
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/COnly
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/COnly

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 11%] Building C object CMakeFiles/testCModule.dir/testCModule.c.o
[ 22%] Linking C shared module libtestCModule.so
[ 22%] Built target testCModule
[ 33%] Building C object CMakeFiles/testc2.dir/libc2.c.o
[ 44%] Linking C shared library libtestc2.so
[ 44%] Built target testc2
[ 55%] Building C object CMakeFiles/testc1.dir/libc1.c.o
[ 66%] Linking C static library libtestc1.a
[ 66%] Built target testc1
[ 77%] Building C object CMakeFiles/COnly.dir/conly.c.o
[ 88%] Building C object CMakeFiles/COnly.dir/foo.c.o
[100%] Linking C executable COnly
[100%] Built target COnly

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/COnly/COnly"
Foo: Foo 0

<end of output>
Test time =   0.46 sec
----------------------------------------------------------
Test Passed.
"COnly" end time: Mar 31 13:41 EDT
"COnly" time elapsed: 00:00:00
----------------------------------------------------------

39/609 Testing: CxxOnly
39/609 Test: CxxOnly
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/CxxOnly" "/home/zachary/oss/labs/lab-08/build/Tests/CxxOnly" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "CxxOnly" "--build-options" "--test-command" "CxxOnly"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"CxxOnly" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/CxxOnly
======== CMake output     ======
The CXX compiler identification is GNU 9.3.0
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CxxOnly
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CxxOnly
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/CxxOnly

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 11%] Building CXX object CMakeFiles/testCxxModule.dir/testCxxModule.cxx.o
[ 22%] Linking CXX shared module libtestCxxModule.so
[ 22%] Built target testCxxModule
[ 33%] Building CXX object CMakeFiles/testcxx2.dir/libcxx2.cxx.o
[ 44%] Linking CXX shared library libtestcxx2.so
[ 44%] Built target testcxx2
[ 55%] Building CXX object CMakeFiles/testcxx1.my.dir/libcxx1.cxx.o
[ 66%] Building CXX object CMakeFiles/testcxx1.my.dir/test.C.o
[ 77%] Linking CXX static library libtestcxx1.my.a
[ 77%] Built target testcxx1.my
[ 88%] Building CXX object CMakeFiles/CxxOnly.dir/cxxonly.cxx.o
[100%] Linking CXX executable CxxOnly
[100%] Built target CxxOnly

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/CxxOnly/CxxOnly"

<end of output>
Test time =   0.52 sec
----------------------------------------------------------
Test Passed.
"CxxOnly" end time: Mar 31 13:41 EDT
"CxxOnly" time elapsed: 00:00:00
----------------------------------------------------------

40/609 Testing: CxxSubdirC
40/609 Test: CxxSubdirC
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/CxxSubdirC" "/home/zachary/oss/labs/lab-08/build/Tests/CxxSubdirC" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "CxxSubdirC" "--build-options" "--test-command" "CxxSubdirC"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"CxxSubdirC" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/CxxSubdirC
======== CMake output     ======
The CXX compiler identification is GNU 9.3.0
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CxxSubdirC
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/CxxSubdirC
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/CxxSubdirC

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 33%] Building C object Cdir/CMakeFiles/Cobj.dir/Cobj.c.o
[ 33%] Built target Cobj
[ 66%] Building CXX object CMakeFiles/CxxSubdirC.dir/main.cxx.o
[100%] Linking CXX executable CxxSubdirC
[100%] Built target CxxSubdirC

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/CxxSubdirC/CxxSubdirC"

<end of output>
Test time =   0.59 sec
----------------------------------------------------------
Test Passed.
"CxxSubdirC" end time: Mar 31 13:41 EDT
"CxxSubdirC" time elapsed: 00:00:00
----------------------------------------------------------

41/609 Testing: OutDir
41/609 Test: OutDir
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/OutDir" "/home/zachary/oss/labs/lab-08/build/Tests/OutDir" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "OutDir" "--build-options" "--test-command" "runtime/OutDir"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"OutDir" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/OutDir
======== CMake output     ======
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
String: # CMake
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/OutDir
String: # CMake
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/OutDir
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/OutDir

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [  8%] Building C object COnly/CMakeFiles/testc2.dir/libc2.c.o
[ 16%] Linking C shared library ../library/Debug/libtestc2_test_debug_postfix.so
[ 16%] Built target testc2
[ 25%] Building C object COnly/CMakeFiles/testc1.dir/libc1.c.o
[ 33%] Linking C static library ../archive/Debug/libtestc1_test_debug_postfix.a
[ 33%] Built target testc1
[ 41%] Building C object COnly/CMakeFiles/COnly.dir/conly.c.o
[ 50%] Building C object COnly/CMakeFiles/COnly.dir/foo.c.o
[ 58%] Linking C executable ../runtime/Debug/COnly
[ 58%] Built target COnly
[ 66%] Generating OutDir.h
[ 75%] Building C object CMakeFiles/OutDir.dir/OutDir.c.o
[ 83%] Linking C executable runtime/Debug/OutDir
[ 83%] Built target OutDir
[ 91%] Building C object COnly/CMakeFiles/testCModule.dir/testCModule.c.o
[100%] Linking C shared module ../library/Debug/libtestCModule_test_debug_postfix.so
[100%] Built target testCModule

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/OutDir/runtime/Debug/OutDir"
found: [archive/Debug/libtestc1_test_debug_postfix.a]
found: [library/Debug/libtestc2_test_debug_postfix.so]
found: [runtime/Debug/COnly]

<end of output>
Test time =   0.55 sec
----------------------------------------------------------
Test Passed.
"OutDir" end time: Mar 31 13:41 EDT
"OutDir" time elapsed: 00:00:00
----------------------------------------------------------

42/609 Testing: OutName
42/609 Test: OutName
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/OutName" "/home/zachary/oss/labs/lab-08/build/Tests/OutName" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "OutName" "--build-options" "--test-command" "exe.OutName.exe"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"OutName" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/OutName
======== CMake output     ======
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/OutName
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/OutName
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/OutName

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building C object CMakeFiles/OutName.dir/main.c.o
[100%] Linking C executable exe.OutName.exe
[100%] Built target OutName

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/OutName/exe.OutName.exe"

<end of output>
Test time =   0.28 sec
----------------------------------------------------------
Test Passed.
"OutName" end time: Mar 31 13:41 EDT
"OutName" time elapsed: 00:00:00
----------------------------------------------------------

43/609 Testing: ObjectLibrary
43/609 Test: ObjectLibrary
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/ObjectLibrary" "/home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "ObjectLibrary" "--build-options" "--test-command" "UseCshared"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"ObjectLibrary" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary
======== CMake output     ======
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
The CXX compiler identification is GNU 9.3.0
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [  2%] Building C object B/CMakeFiles/B.dir/b1.c.o
[  4%] Building C object B/CMakeFiles/B.dir/b2.c.o
[  4%] Built target B
[  6%] Generating a1.c
[  8%] Generating a.cmake
[ 10%] Building C object A/CMakeFiles/A.dir/a1.c.o
[ 12%] Building C object A/CMakeFiles/A.dir/a2.c.o
[ 12%] Built target A
[ 14%] Linking C static library libABstatic.a
[ 14%] Built target ABstatic
[ 16%] Building C object CMakeFiles/UseABstatic.dir/mainAB.c.o
[ 18%] Linking C executable UseABstatic
[ 18%] Built target UseABstatic
[ 20%] Linking C executable UseABstaticObjs
[ 20%] Built target UseABstaticObjs
[ 22%] Building C object B/CMakeFiles/Bexport.dir/b1.c.o
[ 24%] Building C object B/CMakeFiles/Bexport.dir/b2.c.o
[ 24%] Built target Bexport
[ 26%] Building C object CMakeFiles/Cshared.dir/c.c.o
[ 28%] Linking C shared library libCshared.so
[ 28%] Built target Cshared
[ 30%] Linking C shared library libUseCsharedObjs.so
[ 30%] Built target UseCsharedObjs
[ 32%] Building C object CMakeFiles/Cstatic.dir/c.c.o
[ 34%] Linking C static library libCstatic.a
[ 34%] Built target Cstatic
[ 36%] Building C object CMakeFiles/UseCstatic.dir/main.c.o
[ 38%] Linking C executable UseCstatic
[ 38%] Built target UseCstatic
[ 40%] Building C object CMakeFiles/UseCinternal.dir/main.c.o
[ 42%] Building C object CMakeFiles/UseCinternal.dir/c.c.o
[ 44%] Linking C executable UseCinternal
[ 44%] Built target UseCinternal
[ 46%] Linking C shared library libABshared.so
[ 46%] Built target ABshared
[ 48%] Building C object CMakeFiles/UseABshared.dir/mainAB.c.o
[ 51%] Linking C executable UseABshared
[ 51%] Built target UseABshared
[ 53%] Building C object CMakeFiles/ABmain.dir/mainAB.c.o
[ 53%] Built target ABmain
[ 55%] Building C object CMakeFiles/UseCshared.dir/main.c.o
[ 57%] Linking C executable UseCshared
[ 57%] Built target UseCshared
[ 59%] Linking C static library libUseCstaticObjs.a
[ 59%] Built target UseCstaticObjs
[ 59%] Built target UseABinternalDep
[ 61%] Linking C executable UseABinternal
[ 61%] Built target UseABinternal
[ 63%] Building CXX object ExportLanguages/CMakeFiles/ExportLanguagesA.dir/a.cxx.o
[ 63%] Built target ExportLanguagesA
[ 65%] Building C object ExportLanguages/CMakeFiles/ExportLanguagesB.dir/a.c.o
[ 67%] Linking CXX static library libExportLanguagesB.a
[ 67%] Built target ExportLanguagesB
[ 69%] Creating directories for 'ExportLanguagesTest'
[ 71%] No download step for 'ExportLanguagesTest'
[ 73%] No update step for 'ExportLanguagesTest'
[ 75%] No patch step for 'ExportLanguagesTest'
[ 77%] Performing configure step for 'ExportLanguagesTest'
-- The C compiler identification is GNU 9.3.0
-- The CXX compiler identification is GNU 9.3.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary/ExportLanguages/ExportLanguagesTest
[ 79%] Performing build step for 'ExportLanguagesTest'
[ 81%] No install step for 'ExportLanguagesTest'
[ 83%] Completed 'ExportLanguagesTest'
[ 83%] Built target ExportLanguagesTest
[ 85%] Building C object Transitive/CMakeFiles/FooStatic.dir/FooStatic.c.o
[ 87%] Linking C static library libFooStatic.a
[ 87%] Built target FooStatic
[ 89%] Building C object Transitive/CMakeFiles/FooObject2.dir/FooObject.c.o
[ 89%] Built target FooObject2
[ 91%] Building C object Transitive/CMakeFiles/Transitive2.dir/Transitive.c.o
[ 93%] Linking C executable Transitive2
[ 93%] Built target Transitive2
[ 95%] Building C object Transitive/CMakeFiles/FooObject1.dir/FooObject.c.o
[ 95%] Built target FooObject1
[ 97%] Building C object Transitive/CMakeFiles/Transitive1.dir/Transitive.c.o
[100%] Linking C executable Transitive1
[100%] Built target Transitive1

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/ObjectLibrary/UseCshared"

<end of output>
Test time =   2.36 sec
----------------------------------------------------------
Test Passed.
"ObjectLibrary" end time: Mar 31 13:41 EDT
"ObjectLibrary" time elapsed: 00:00:02
----------------------------------------------------------

44/609 Testing: NewlineArgs
44/609 Test: NewlineArgs
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/NewlineArgs" "/home/zachary/oss/labs/lab-08/build/Tests/NewlineArgs" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "NewlineArgs" "--build-options" "--test-command" "NewlineArgs"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"NewlineArgs" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/NewlineArgs
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The CXX compiler identification is GNU 9.3.0
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/NewlineArgs
CMake Deprecation Warning at CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/NewlineArgs
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/NewlineArgs

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 25%] Building CXX object CMakeFiles/testcxx1.dir/libcxx1.cxx.o
[ 50%] Linking CXX static library libtestcxx1.a
[ 50%] Built target testcxx1
[ 75%] Building CXX object CMakeFiles/NewlineArgs.dir/cxxonly.cxx.o
[100%] Linking CXX executable NewlineArgs
[100%] Built target NewlineArgs

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/NewlineArgs/NewlineArgs"

<end of output>
Test time =   0.40 sec
----------------------------------------------------------
Test Passed.
"NewlineArgs" end time: Mar 31 13:41 EDT
"NewlineArgs" time elapsed: 00:00:00
----------------------------------------------------------

45/609 Testing: SetLang
45/609 Test: SetLang
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/SetLang" "/home/zachary/oss/labs/lab-08/build/Tests/SetLang" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "SetLang" "--build-options" "--test-command" "SetLang"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"SetLang" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/SetLang
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/SetLang
CMake Deprecation Warning at CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/SetLang
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/SetLang

Run Clean Command:/usr/bin/make -f Makefile clean
/usr/bin/make  -f CMakeFiles/Makefile2 clean
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/zoom.dir/build.make CMakeFiles/zoom.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/zoom.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/SetLang.dir/build.make CMakeFiles/SetLang.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/SetLang.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/foo.dir/build.make CMakeFiles/foo.dir/clean
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/foo.dir/cmake_clean.cmake
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'

Run Build Command(s):/usr/bin/make -f Makefile && /home/zachary/oss/labs/lab-08/build/bin/cmake -S/home/zachary/cmake/Tests/SetLang -B/home/zachary/oss/labs/lab-08/build/Tests/SetLang --check-build-system CMakeFiles/Makefile.cmake 0
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_progress_start /home/zachary/oss/labs/lab-08/build/Tests/SetLang/CMakeFiles /home/zachary/oss/labs/lab-08/build/Tests/SetLang//CMakeFiles/progress.marks
/usr/bin/make  -f CMakeFiles/Makefile2 all
make[1]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/zoom.dir/build.make CMakeFiles/zoom.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
cd /home/zachary/oss/labs/lab-08/build/Tests/SetLang && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/SetLang /home/zachary/cmake/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang/CMakeFiles/zoom.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/zoom.dir/build.make CMakeFiles/zoom.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
[ 16%] Building CXX object CMakeFiles/zoom.dir/zoom.zzz.o
/usr/bin/c++   -x c++  -MD -MT CMakeFiles/zoom.dir/zoom.zzz.o -MF CMakeFiles/zoom.dir/zoom.zzz.o.d -o CMakeFiles/zoom.dir/zoom.zzz.o -c /home/zachary/cmake/Tests/SetLang/zoom.zzz
[ 33%] Linking CXX static library libzoom.a
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/zoom.dir/cmake_clean_target.cmake
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/zoom.dir/link.txt --verbose=1
/usr/bin/ar qc libzoom.a CMakeFiles/zoom.dir/zoom.zzz.o
/usr/bin/ranlib libzoom.a
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
[ 33%] Built target zoom
/usr/bin/make  -f CMakeFiles/foo.dir/build.make CMakeFiles/foo.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
cd /home/zachary/oss/labs/lab-08/build/Tests/SetLang && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/SetLang /home/zachary/cmake/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang/CMakeFiles/foo.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/foo.dir/build.make CMakeFiles/foo.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
[ 50%] Building CXX object CMakeFiles/foo.dir/foo.c.o
/usr/bin/c++    -MD -MT CMakeFiles/foo.dir/foo.c.o -MF CMakeFiles/foo.dir/foo.c.o.d -o CMakeFiles/foo.dir/foo.c.o -c /home/zachary/cmake/Tests/SetLang/foo.c
[ 66%] Linking CXX static library libfoo.a
/home/zachary/oss/labs/lab-08/build/bin/cmake -P CMakeFiles/foo.dir/cmake_clean_target.cmake
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/foo.dir/link.txt --verbose=1
/usr/bin/ar qc libfoo.a CMakeFiles/foo.dir/foo.c.o
/usr/bin/ranlib libfoo.a
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
[ 66%] Built target foo
/usr/bin/make  -f CMakeFiles/SetLang.dir/build.make CMakeFiles/SetLang.dir/depend
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
cd /home/zachary/oss/labs/lab-08/build/Tests/SetLang && /home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_depends "Unix Makefiles" /home/zachary/cmake/Tests/SetLang /home/zachary/cmake/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang /home/zachary/oss/labs/lab-08/build/Tests/SetLang/CMakeFiles/SetLang.dir/DependInfo.cmake --color=
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/usr/bin/make  -f CMakeFiles/SetLang.dir/build.make CMakeFiles/SetLang.dir/build
make[2]: Entering directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
[ 83%] Building CXX object CMakeFiles/SetLang.dir/bar.c.o
/usr/bin/c++ -DWITH_ZOOM   -MD -MT CMakeFiles/SetLang.dir/bar.c.o -MF CMakeFiles/SetLang.dir/bar.c.o.d -o CMakeFiles/SetLang.dir/bar.c.o -c /home/zachary/cmake/Tests/SetLang/bar.c
[100%] Linking CXX executable SetLang
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_link_script CMakeFiles/SetLang.dir/link.txt --verbose=1
/usr/bin/c++ -rdynamic CMakeFiles/SetLang.dir/bar.c.o -o SetLang  libfoo.a libzoom.a 
make[2]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
[100%] Built target SetLang
make[1]: Leaving directory '/home/zachary/oss/labs/lab-08/build/Tests/SetLang'
/home/zachary/oss/labs/lab-08/build/bin/cmake -E cmake_progress_start /home/zachary/oss/labs/lab-08/build/Tests/SetLang/CMakeFiles 0

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/SetLang/SetLang"
passed foo is 21

<end of output>
Test time =   0.67 sec
----------------------------------------------------------
Test Passed.
"SetLang" end time: Mar 31 13:41 EDT
"SetLang" time elapsed: 00:00:00
----------------------------------------------------------

46/609 Testing: EmptyProperty
46/609 Test: EmptyProperty
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/EmptyProperty" "/home/zachary/oss/labs/lab-08/build/Tests/EmptyProperty" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "EmptyProperty" "--build-options" "--test-command" "EmptyProperty"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"EmptyProperty" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/EmptyProperty
======== CMake output     ======
The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
CMake Warning (dev) in CMakeLists.txt:
  No cmake_minimum_required command is present.  A line of code such as

    cmake_minimum_required(VERSION 3.20)

  should be added at the top of the file.  The version specified may be lower
  if you wish to support older CMake versions for this project.  For more
  information run "cmake --help-policy CMP0000".
This warning is for project developers.  Use -Wno-dev to suppress it.

Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/EmptyProperty
CMake Warning (dev) in CMakeLists.txt:
  No cmake_minimum_required command is present.  A line of code such as

    cmake_minimum_required(VERSION 3.20)

  should be added at the top of the file.  The version specified may be lower
  if you wish to support older CMake versions for this project.  For more
  information run "cmake --help-policy CMP0000".
This warning is for project developers.  Use -Wno-dev to suppress it.

Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/EmptyProperty
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/EmptyProperty

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 50%] Building CXX object CMakeFiles/EmptyProperty.dir/EmptyProperty.o
[100%] Linking CXX executable EmptyProperty
[100%] Built target EmptyProperty

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/EmptyProperty/EmptyProperty"

<end of output>
Test time =   0.75 sec
----------------------------------------------------------
Test Passed.
"EmptyProperty" end time: Mar 31 13:41 EDT
"EmptyProperty" time elapsed: 00:00:00
----------------------------------------------------------

47/609 Testing: ExternalOBJ
47/609 Test: ExternalOBJ
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/ExternalOBJ" "/home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "ExternalOBJ" "--build-options" "--test-command" "ExternalOBJ"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"ExternalOBJ" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
CMake Deprecation Warning at /home/zachary/cmake/Tests/ExternalOBJ/Object/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Building external_object.cxx succeeded with the following output:
[Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/Object

Run Build Command(s):/usr/bin/make -f Makefile external && Scanning dependencies of target external
[ 33%] Building CXX object CMakeFiles/external.dir/external_object.cxx.o
[ 66%] Building CXX object CMakeFiles/external.dir/external_main.cxx.o
[100%] Linking CXX executable external
[100%] Built target external

]
Found "/home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/Object/CMakeFiles/external.dir/external_object.cxx.o".
/home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/Object/CMakeFiles/external.dir/external_object.cxx.o
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at /home/zachary/cmake/Tests/ExternalOBJ/Object/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Building external_object.cxx succeeded with the following output:
[Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/Object

Run Build Command(s):/usr/bin/make -f Makefile external && Scanning dependencies of target external
[100%] Built target external

]
Found "/home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/Object/CMakeFiles/external.dir/external_object.cxx.o".
/home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/Object/CMakeFiles/external.dir/external_object.cxx.o
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 14%] Building CXX object CMakeFiles/ExternalOBJ2.dir/executable.cxx.o
[ 28%] Linking CXX executable ExternalOBJ2
[ 28%] Built target ExternalOBJ2
[ 42%] Generating custom_object.o
[ 57%] Building CXX object CMakeFiles/ExternalOBJ.dir/executable.cxx.o
[ 71%] Linking CXX executable ExternalOBJ
[ 71%] Built target ExternalOBJ
[ 85%] Building CXX object Sub/CMakeFiles/ExternalOBJSub.dir/__/executable.cxx.o
[100%] Linking CXX executable ExternalOBJSub
[100%] Built target ExternalOBJSub

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/ExternalOBJ/ExternalOBJ"

<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"ExternalOBJ" end time: Mar 31 13:41 EDT
"ExternalOBJ" time elapsed: 00:00:00
----------------------------------------------------------

48/609 Testing: LoadCommand
48/609 Test: LoadCommand
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/LoadCommand" "/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "LoadCommand" "--build-options" "--test-command" "LoadedCommand"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"LoadCommand" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Looking for sys/types.h
Looking for sys/types.h - found
Looking for stdint.h
Looking for stdint.h - found
Looking for stddef.h
Looking for stddef.h - found
Check size of char
Check size of char - done
Check size of short
Check size of short - done
CMake Deprecation Warning at /home/zachary/cmake/Tests/LoadCommand/CMakeCommands/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Output from try compile: Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/LoadCommand/CMakeCommands

Run Build Command(s):/usr/bin/make -f Makefile && Scanning dependencies of target cmCMAKE_TEST_COMMAND
[ 50%] Building C object CMakeFiles/cmCMAKE_TEST_COMMAND.dir/cmTestCommand.c.o
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c: In function ‘InitialPass’:
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:115:53: warning: passing argument 4 of ‘info->CAPI->AddExecutable’ from incompatible pointer type [-Wincompatible-pointer-types]
  115 |   info->CAPI->AddExecutable(mf, "LoadedCommand", 1, &srcs, 0);
      |                                                     ^~~~~
      |                                                     |
      |                                                     char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:115:53: note: expected ‘const char **’ but argument is of type ‘char **’
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:124:69: warning: passing argument 5 of ‘info->CAPI->AddCustomCommand’ from incompatible pointer type [-Wincompatible-pointer-types]
  124 |   info->CAPI->AddCustomCommand(mf, "LoadedCommand.cxx.in", file, 4, ccArgs, 1,
      |                                                                     ^~~~~~
      |                                                                     |
      |                                                                     char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:124:69: note: expected ‘const char **’ but argument is of type ‘char **’
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:125:32: warning: passing argument 7 of ‘info->CAPI->AddCustomCommand’ from incompatible pointer type [-Wincompatible-pointer-types]
  125 |                                ccDep, 1, ccOut, "LoadedCommand");
      |                                ^~~~~
      |                                |
      |                                char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:125:32: note: expected ‘const char **’ but argument is of type ‘char **’
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:125:42: warning: passing argument 9 of ‘info->CAPI->AddCustomCommand’ from incompatible pointer type [-Wincompatible-pointer-types]
  125 |                                ccDep, 1, ccOut, "LoadedCommand");
      |                                          ^~~~~
      |                                          |
      |                                          char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:125:42: note: expected ‘const char **’ but argument is of type ‘char **’
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:131:63: warning: passing argument 5 of ‘info->CAPI->AddCustomCommandToOutput’ from incompatible pointer type [-Wincompatible-pointer-types]
  131 |   info->CAPI->AddCustomCommandToOutput(mf, ccOut[0], file, 4, ccArgs, ccDep[0],
      |                                                               ^~~~~~
      |                                                               |
      |                                                               char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:131:63: note: expected ‘const char **’ but argument is of type ‘char **’
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:136:70: warning: passing argument 5 of ‘info->CAPI->AddCustomCommandToTarget’ from incompatible pointer type [-Wincompatible-pointer-types]
  136 |   info->CAPI->AddCustomCommandToTarget(mf, "LoadedCommand", file, 3, ccArgs,
      |                                                                      ^~~~~~
      |                                                                      |
      |                                                                      char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:136:70: note: expected ‘const char **’ but argument is of type ‘char **’
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:148:44: warning: passing argument 4 of ‘info->CAPI->ExecuteCommand’ from incompatible pointer type [-Wincompatible-pointer-types]
  148 |   info->CAPI->ExecuteCommand(mf, "SET", 2, args);
      |                                            ^~~~
      |                                            |
      |                                            char **
/home/zachary/cmake/Tests/LoadCommand/CMakeCommands/cmTestCommand.c:148:44: note: expected ‘const char **’ but argument is of type ‘char **’
[100%] Linking C shared module libcmCMAKE_TEST_COMMAND.so
[100%] Built target cmCMAKE_TEST_COMMAND


CMake Warning (dev) at CMakeLists.txt:31 (load_command):
  Policy CMP0031 is not set: The load_command command should not be called.
  Run "cmake --help-policy CMP0031" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
This warning is for project developers.  Use -Wno-dev to suppress it.

cmake
/home/zachary/oss/labs/lab-08/build/bin
Cmake
LoadCommand
/home/zachary/cmake/Tests/LoadCommand
/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
/home/zachary/cmake/Tests/LoadCommand
/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
/home/zachary/cmake/Tests/LoadCommand
/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
Cache version: 0.0, CMake version: 3.20
Command SET exists
Should be empty (source file name): []
Should be empty (source file full path): []
Should be 0 (source file abstract property): [(nil)]
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at /home/zachary/cmake/Tests/LoadCommand/CMakeCommands/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Output from try compile: Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/LoadCommand/CMakeCommands

Run Build Command(s):/usr/bin/make -f Makefile && Scanning dependencies of target cmCMAKE_TEST_COMMAND
[100%] Built target cmCMAKE_TEST_COMMAND


CMake Warning (dev) at CMakeLists.txt:31 (load_command):
  Policy CMP0031 is not set: The load_command command should not be called.
  Run "cmake --help-policy CMP0031" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
This warning is for project developers.  Use -Wno-dev to suppress it.

cmake
/home/zachary/oss/labs/lab-08/build/bin
Cmake
LoadCommand
/home/zachary/cmake/Tests/LoadCommand
/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
/home/zachary/cmake/Tests/LoadCommand
/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
/home/zachary/cmake/Tests/LoadCommand
/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
Cache version: 3.20, CMake version: 3.20
Command SET exists
Should be empty (source file name): []
Should be empty (source file full path): []
Should be 0 (source file abstract property): [(nil)]
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LoadCommand
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/LoadCommand

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 25%] Generating LoadedCommand2.cxx.in
[ 50%] Generating LoadedCommand3.cxx
[ 75%] Building CXX object CMakeFiles/LoadedCommand.dir/LoadedCommand3.cxx.o
[100%] Linking CXX executable LoadedCommand
Build has finished
[100%] Built target LoadedCommand

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/LoadCommand/LoadedCommand"

<end of output>
Test time =   1.02 sec
----------------------------------------------------------
Test Passed.
"LoadCommand" end time: Mar 31 13:41 EDT
"LoadCommand" time elapsed: 00:00:01
----------------------------------------------------------

49/609 Testing: LinkDirectory
49/609 Test: LinkDirectory
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/LinkDirectory" "/home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "LinkDirectory" "--build-options" "--test-command" "bin/LinkDirectory"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"LinkDirectory" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory
======== CMake output     ======
The C compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [  7%] Building C object CMakeFiles/mylibA.dir/mylibA.c.o
[ 15%] Linking C static library External/lib/libmylibA.a
[ 15%] Built target mylibA
[ 23%] Building C object CMakeFiles/mylibB.dir/mylibB.c.o
[ 30%] Linking C static library lib/libmylibB.a
[ 30%] Built target mylibB
[ 38%] Creating directories for 'ExternalTarget'
[ 46%] No download step for 'ExternalTarget'
[ 53%] Performing cleanup step for 'ExternalTarget'
[ 61%] No update step for 'ExternalTarget'
[ 69%] No patch step for 'ExternalTarget'
[ 76%] Performing configure step for 'ExternalTarget'
-- The C compiler identification is GNU 9.3.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
CMake Deprecation Warning at CMakeLists.txt:25 (cmake_policy):
  The OLD behavior for policy CMP0015 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.


-- Configuring done
CMake Warning (dev) in CMakeLists.txt:
  Policy CMP0081 is not set: Relative paths not allowed in LINK_DIRECTORIES
  target property.  Run "cmake --help-policy CMP0081" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Found relative path while evaluating link directories of "myexe":

    "../lib"

This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) in CMakeLists.txt:
  Policy CMP0081 is not set: Relative paths not allowed in LINK_DIRECTORIES
  target property.  Run "cmake --help-policy CMP0081" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  Found relative path while evaluating link directories of "myexe":

    "../lib"

This warning is for project developers.  Use -Wno-dev to suppress it.

-- Generating done
-- Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory/External-build
[ 84%] Performing build step for 'ExternalTarget'
[ 16%] Building C object CMakeFiles/myexe.dir/myexe.c.o
[ 33%] Linking C executable /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory/bin/LinkDirectory
[ 33%] Built target myexe
[ 50%] Building C object CMakeFiles/myexe3.dir/myexe.c.o
[ 66%] Linking C executable /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory/bin/LinkDirectory3
[ 66%] Built target myexe3
[ 83%] Building C object CMakeFiles/myexe2.dir/myexe.c.o
[100%] Linking C executable /home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory/bin/LinkDirectory2
[100%] Built target myexe2
[ 92%] No install step for 'ExternalTarget'
[100%] Completed 'ExternalTarget'
[100%] Built target ExternalTarget

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/LinkDirectory/bin/LinkDirectory"

<end of output>
Test time =   0.98 sec
----------------------------------------------------------
Test Passed.
"LinkDirectory" end time: Mar 31 13:41 EDT
"LinkDirectory" time elapsed: 00:00:00
----------------------------------------------------------

50/609 Testing: LinkLanguage
50/609 Test: LinkLanguage
Command: "/home/zachary/oss/labs/lab-08/build/bin/ctest" "--build-and-test" "/home/zachary/cmake/Tests/LinkLanguage" "/home/zachary/oss/labs/lab-08/build/Tests/LinkLanguage" "--build-two-config" "--build-generator" "Unix Makefiles" "--build-makeprogram" "/usr/bin/make" "--build-project" "LinkLanguage" "--build-options" "--test-command" "LinkLanguage"
Directory: /home/zachary/oss/labs/lab-08/build/Tests
"LinkLanguage" start time: Mar 31 13:41 EDT
Output:
----------------------------------------------------------
Internal cmake changing into directory: /home/zachary/oss/labs/lab-08/build/Tests/LinkLanguage
======== CMake output     ======
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


The C compiler identification is GNU 9.3.0
The CXX compiler identification is GNU 9.3.0
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Check for working C compiler: /usr/bin/cc - skipped
Detecting C compile features
Detecting C compile features - done
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Check for working CXX compiler: /usr/bin/c++ - skipped
Detecting CXX compile features
Detecting CXX compile features - done
Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LinkLanguage
CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


Configuring done
Generating done
Build files have been written to: /home/zachary/oss/labs/lab-08/build/Tests/LinkLanguage
======== End CMake output ======
Change Dir: /home/zachary/oss/labs/lab-08/build/Tests/LinkLanguage

Run Clean Command:/usr/bin/make -f Makefile clean

Run Build Command(s):/usr/bin/make -f Makefile && [ 25%] Building CXX object CMakeFiles/foo.dir/foo.cxx.o
[ 50%] Linking CXX static library libfoo.a
[ 50%] Built target foo
[ 75%] Building C object CMakeFiles/LinkLanguage.dir/LinkLanguage.c.o
[100%] Linking CXX executable LinkLanguage
[100%] Built target LinkLanguage

Running test command: "/home/zachary/oss/labs/lab-08/build/Tests/LinkLanguage/LinkLanguage"

<end of output>
Test time =   0.63 sec
----------------------------------------------------------
Test Passed.
"LinkLanguage" end time: Mar 31 13:41 EDT
"LinkLanguage" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Mar 31 13:41 EDT
